{"version":3,"sources":["theme.ts","providers/Theme.tsx","slices/currentUser/currentUser.ts","slices/spotify.ts","ui/locale/ja.ts","locale/ja.ts","ui/locale/en.ts","locale/en.ts","slices/language.ts","ui/Dialog/authModal.ts","rootReducer.ts","store.ts","providers/Redux.tsx","providers/ReactQuery.tsx","providers/Notistack.tsx","providers/Intl.tsx","components/Table/Layout.tsx","axios/itunes.ts","hooks/useQuerySnackbar.ts","reactQuery/itunes.tsx","components/Table/Music.tsx","components/Table/Album.tsx","components/Icon/Twitter.tsx","components/Button/Icon/Link.tsx","components/Table/Artist.tsx","components/Table/Band.tsx","components/Card/Menu.tsx","components/Cards/Layout.tsx","components/Card/Music.tsx","components/Cards/Musics.tsx","layout/Default.tsx","hooks/usePaginate.ts","images/stave.png","gql/query/album/index.ts","gql/query/album/musics.ts","gql/query/albums.ts","gql/query/artist/index.tsx","gql/query/artist/album.tsx","gql/query/artist/musics.tsx","gql/query/artists.ts","gql/query/band/index.ts","gql/query/band/albums.ts","gql/query/band/musics.ts","gql/query/issue.ts","gql/query/bands.ts","gql/query/issues.ts","gql/query/music/index.ts","gql/query/music/rootTree.ts","gql/query/music/score.ts","gql/query/musics.ts","gql/query/user/index.ts","gql/query/user/bookmarkedAlbums.ts","gql/query/user/bookmarkedArtists.ts","gql/query/user/bookmarkedBands.ts","gql/query/user/bookmarkedMusics.ts","gql/query/user/followers.ts","gql/query/user/following.ts","gql/query/user/musics.ts","gql/query/user/profile.ts","gql/query/users.ts","gql/query/music/blob.ts","gql/query/music/tree.ts","constants/baseURL.ts","gql/query/user/notifications.ts","gql/index.ts","reactQuery/query.tsx","pages/Root.tsx","components/ControlTextField/ControlTextField.tsx","ui/LoadingButton/index.tsx","ui/Form/schema.ts","ui/Form/SignIn.tsx","pages/Auth/SignIn.tsx","ui/Form/SignUp.tsx","pages/Auth/SignUp.tsx","components/Loading/LoadingCircularProgress.tsx","components/TextField/SearchTextField.tsx","pages/Artist/Index.tsx","components/Button/Link.tsx","components/Icon/Itunes.tsx","components/Icon/Youtube.tsx","components/Icon/Wikipedia.tsx","components/Icon/Spotify.tsx","hooks/useOpen.ts","components/Table/Link.tsx","components/Button/Icon/Bookmark.tsx","components/Card/Itunes/Artist.tsx","components/Dialog/CardSearchDialog.tsx","components/Dialog/Itunes/Artist.tsx","components/Button/Spotify.tsx","axios/spotify.ts","components/Dialog/Spotify/Layout.tsx","components/Card/Spotify/Artist.tsx","components/Dialog/Spotify/Artist.tsx","helpers/getIDfromURL.ts","components/Dialog/Twitter.tsx","components/Card/Wikipedia.tsx","axios/wikipedia.ts","components/Dialog/Wikipedia.tsx","components/Dialog/Translate.tsx","components/Dialog/Youtube.tsx","axios/axios.ts","reactQuery/wikipedia.tsx","pages/Artist/Show.tsx","components/Button/Search/Itunes.tsx","components/Alert/Exist.tsx","pages/Artist/New.tsx","pages/Music/Index.tsx","components/Card/Itunes/Music.tsx","components/Dialog/Itunes/Music.tsx","components/Card/Musixcmatch.tsx","axios/musixmatch.ts","components/Dialog/Musixmatch.tsx","components/Card/Spotify/Track.tsx","components/Dialog/Spotify/Track.tsx","components/TextField/AutocompleteTextField.tsx","pages/Music/Show/TabPanel/Info/Dialog/Main/Autocomplete/Composer.tsx","pages/Music/Show/TabPanel/Info/Dialog/Main/Autocomplete/Lyrist.tsx","pages/Music/Show/TabPanel/Info/Dialog/Main/Autocomplete/Band.tsx","pages/Music/Show/TabPanel/Info/Dialog/Main/index.tsx","components/ControlSelect.tsx","schema.ts","pages/Music/Show/TabPanel/Info/Dialog/Artist.tsx","pages/Music/Show/TabPanel/Info/Dialog/Album.tsx","helpers/getIDfromYoutubeURL.ts","pages/Music/Show/TabPanel/Info/index.tsx","pages/Music/Show/TabPanel/Setting.tsx","components/Table/Issue.tsx","pages/Music/Show/TabPanel/Issue/Index.tsx","components/Table/File.tsx","pages/Music/Show/TabPanel/Tree/Index.tsx","pages/Music/Show/TabPanel/Tree/Show.tsx","pages/Music/Show/TabPanel/Tree/Blob.tsx","pages/Music/Show/TabPanel/Issue/New.tsx","pages/Music/Show/TabPanel/Issue/Show.tsx","pages/Music/Show/TabPanel/Lyric/index.tsx","ui/Volume/index.tsx","ui/Pause/index.tsx","pages/Music/Show/Player/Itunes.tsx","pages/Music/Show/Player/Spotify.tsx","pages/Music/Show/Player/index.tsx","reactQuery/spotify.tsx","pages/Music/Show/index.tsx","pages/Music/New.tsx","ui/SongInfo/index.tsx","ui/Stop/index.tsx","ui/CountIn/index.tsx","ui/Loop/index.tsx","ui/Metronome/index.tsx","ui/Layout/index.tsx","ui/Zoom/index.tsx","pages/Music/Show/Score/Header.tsx","ui/Tracks/index.tsx","pages/Music/Show/Score/index.tsx","pages/Band/Index.tsx","pages/Band/Show/Dialog/Artist.tsx","pages/Band/Show/index.tsx","pages/Band/New.tsx","components/Table/User.tsx","pages/User/Index.tsx","components/Button/Follow.tsx","pages/User/Show/TabPanel/Musics.tsx","pages/User/Show/TabPanel/Profile.tsx","pages/User/Show/TabPanel/Bookmark.tsx","pages/User/Show/TabPanel/Setting.tsx","pages/User/Show/index.tsx","pages/User/Show/Follower.tsx","pages/User/Show/Following.tsx","pages/Album/Index.tsx","components/Card/Itunes/Album.tsx","components/Dialog/Itunes/Album.tsx","components/Card/Spotify/Album.tsx","components/Dialog/Spotify/Album.tsx","pages/Album/Show/Dialog/Artist.tsx","pages/Album/Show/index.tsx","pages/Album/New.tsx","pages/Contact/New.tsx","Routes.tsx","components/Header/Dialog/Setting.tsx","components/Header/Notification.tsx","components/Header/index.tsx","components/Footer.tsx","ui/Dialog/Auth.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Music/Show/TabPanel/Info/index.module.css","pages/Music/Show/TabPanel/Lyric/index.module.css","pages/Music/Show/Score/index.module.css"],"names":["theme","createMuiTheme","palette","spotify","main","light","twitter","dark","itunes","Theme","children","ThemeProvider","initialState","currentUser","undefined","headers","currentUserSlice","createSlice","name","reducers","setCurrentUser","state","action","payload","setHeaders","contentType","accessToken","client","uid","prevAccessToken","remove","selectCurrentUser","selectHeaders","actions","code","token","spotifySlice","setCode","setToken","selectSpotifyToken","ja","email","familyname","givenname","signout","signoutSuccessful","signin","signinSuccessful","signup","signupSuccessful","nickname","password","passwordConfirmation","uiJa","account","addArtist","addAlbum","album","albums","alertDelete","artist","artists","band","bands","beBookmarked","beFollowed","contact","create","composer","composers","createArtist","createAlbum","createMusic","createBand","createIssue","delete","description","edit","editAlbum","editInfo","follower","following","followUs","unfollowUs","file","issues","info","link","lyric","lyrists","music","musics","noNotification","pleaseTranslate","pleaseType","profile","role","releaseDate","searchByItunes","searchIssues","setting","title","translateTitle","translateName","user","users","untranslation","watchScore","en","uiEn","getLanguage","navigator","language","getMessages","locale","split","countryCode","messages","set","newLanguage","newLocale","newCountryCode","setLocale","setCountryCode","selectLocale","selectCountryCode","selectMessages","authModal","opened","close","open","selectOpened","combineReducers","currentUserReducer","spotifyReducer","languageReducer","authModalReducer","persistConfig","key","version","storage","persistedReducer","persistReducer","rootReducer","middlewares","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","middleware","persistor","persistStore","Redux","loading","queryClient","QueryClient","ReactQuery","QueryClientProvider","Notistack","maxSnack","Intl","useSelector","defaultLocale","Layout","page","pageCount","onPage","TableContainer","component","Paper","LinearProgress","Pagination","count","onChange","defaultProps","axios","baseURL","lookupItunesArtist","id","jsonp","params","entity","lookupItunesAlbum","lookupItunesMusic","useQuerySnackbar","dispatch","useDispatch","enqueueSnackbar","useSnackbar","onError","err","response","status","String","variant","useLookup","query","args","options","fn","useQuery","then","res","results","enabled","useLookupItunesMusic","useLookupItunesAlbum","useLookupItunesArtist","Music","ids","map","join","columns","route","routes","MUSICS","BANDS","ARTISTS","USERS","i","imageUrl","itunesMusics","Table","TableHead","TableRow","TableCell","column","RouterLink","to","TableBody","data","trackId","artworkUrl60","isLoading","src","lyrist","Album","itunesAlbums","ALBUMS","collectionId","Twitter","SvgIcon","LinkIcon","href","windowFeatures","onWindow","IconButton","Link","rel","disabled","onClick","newWindow","window","Artist","Band","icon","messageId","Card","CardContent","Box","textAlign","Typography","color","CardActions","Button","size","NEW","Cards","arr","cards","mb","speed","reduce","newarr","_","slice","card1","card2","py","useStyles","makeStyles","media","height","width","BandCard","classes","display","justifyItems","alignItems","p","length","CardMedia","image","className","noWrap","musicPath","userId","cardId","Musics","history","useHistory","Grid","container","spacing","item","xs","push","Default","Container","my","usePaginate","useState","setPage","useCallback","_event","value","albumQuery","gql","albumMusicsQuery","albumsQuery","artistQuery","artistAlbumsQuery","artistMusicsQuery","artistsQuery","bandQuery","bandAlbumsQuery","bandMusicsQuery","issueQuery","bandsQuery","issuesQuery","musicQuery","rootTreeQuery","musicScoreQuery","musicsQuery","userQuery","userBookmarkedAlbumsQuery","userBookmarkedArtistsQuery","userBookmarkedBandsQuery","userBookmarkedMusicsQuery","userFollowerQuery","userFollowingQuery","userMusicsQuery","userProfileQuery","usersQuery","blobQuery","treeQuery","userNotificationsQuery","graphQLCilent","GraphQLClient","getUsers","q","request","getUser","currentUserId","getUserMusics","musicPage","getUserNotifications","notificationPage","notifications","getUserFollower","followerPage","followers","getUserFollowing","followingPage","getMusics","getMusic","getMusicScore","getMusicRootTree","getMusicTree","oid","getMusicBlob","getIssues","musicId","getIssue","issue","getBands","getBand","getBandAlbums","albumPage","getBandMusics","getArtists","getArtist","getArtistAlbums","getArtistMusics","getAlbums","getAlbum","getAlbumMusics","useIndexQuery","useMusicsQuery","useAlbumsQuery","useArtistsQuery","useBandsQuery","useResourcesIndexQuery","firstKey","secondKey","useShowQuery","Root","handleMusicPage","handleAlbumPage","artistPage","handleArtistPage","bandPage","handleBandPage","s","descBookmarkMusics","useEffect","URL","location","searchParams","get","prevWindow","opener","getSpotifyCode","target","aspectRatio","img","Menu","fontSize","pagination","totalPages","ControlTextField","defaultValue","onKeyPress","errors","control","rules","props","useController","field","ref","onChangeController","invalid","meta","TextField","inputRef","error","helperText","e","LoadingButton","startIcon","CircularProgress","disableElevation","signInSchema","yup","shape","required","signUpSchema","min","max","oneOf","SignIn","onSuccess","intl","useIntl","useForm","resolver","yupResolver","setValue","handleSubmit","useMutation","post","formatMessage","anchorOrigin","vertical","horizontal","mutate","process","m","align","onSubmit","type","autoComplete","label","margin","fullWidth","maxWidth","SignUp","newUser","full_messages","forEach","message","LoadingCircularProgress","SearchTextField","InputProps","startAdornment","endAdornment","Index","inputValue","setInputValue","handlePage","useDebounce","debouncedInputValue","isPending","name_cont","Itunes","useOpen","setOpen","wikipedia","musixmatch","youtube","itunesOpen","onItunesOpen","onItunesClose","twitterOpen","onTwitterOpen","onTwitterClose","spotifyOpen","onSpotifyOpen","onSpotifyClose","wikipediaOpen","onWikipediaOpen","onWikipediaClose","musixmatchOpen","onMusixmatchOpen","onMusixmatchClose","youtubeOpen","onYoutubeOpen","onYoutubeClose","renderDialog","mr","whyDidYouRender","Bookmark","bookmarked","onCreate","onDestroy","ItunesArtist","artistName","artistLinkUrl","flex","overflow","stopPropagation","showSearchBar","useQueryArgs","onClose","onSelect","searchValue","setSearchValue","debouncedSearchValue","searched","term","Dialog","DialogTitle","card","handleSelect","justifyContent","CardSearchDialog","queryKey","ITUNES","offset","limit","searchItunesArtists","artistId","Spotify","encodeURIComponent","origin","REACT_APP_SPOTIFY_KEY","REACT_APP_SPOTIFY_SECRET_KEY","authorization","btoa","spotifyAccount","Authorization","searchSpotify","spotifyToken","a","URLSearchParams","append","handleError","DialogContent","DialogContentText","DialogActions","SpotifyTrackCard","images","url","Track","SPOTIFY","access_token","items","Math","floor","total","getIDfromURL","pathname","replace","onPatch","onPaste","preventDefault","clipboardData","getData","Wikipedia","getLocale","getState","WIKIPEDIA","srsearch","sroffset","format","list","search","searchinfo","totalhits","continue","pageid","Translate","inputLabel","buttonLabel","patchFn","handleOpen","handleClose","useParams","Number","useQueryClient","updateMutation","setQueryData","prev","Youtube","defaults","getHeaders","patchMusic","patch","patchAlbum","albumId","patchBand","bandId","patchArtist","useWikipediaQuery","prop","explaintext","exintro","pageids","pages","Show","artistAlbums","useArtistAlbumsQuery","artistMusics","useArtistMusicsQuery","itunesArtist","createMutation","BOOKMARKS","bookmark","bookmarksCount","destroyMutation","bookmarkId","updateLinkMutation","linkId","LINKS","patchArtistLink","selectedArtist","handleWikipediaSelect","selectedWikipedia","handleSpotifySelect","handleYoutubeSelect","localed","Alert","severity","AlertTitle","ARTIST","extract","Exist","New","selectedItunesArtist","setSelectedItunesArtist","register","watch","useRouteMatch","newArtist","searchQuery","selectedItem","title_cont","ItunesMusicCard","artworkUrl100","collectionCensoredName","trackCensoredName","trackViewUrl","mx","searchItunesMusics","Musixmatch","track","track_name","album_name","artist_name","apikey","REACT_APP_MUSIXMATCH_KEY","MUSIXMATCH","q_track","body","track_list","track_id","tracks","ControlAutocompleteTextField","maxLength","onSelectOption","onRemoveOption","textFieldProps","autocompleteProps","setDisabled","tags","setTags","onOpen","Autocomplete","getOptionDisabled","noOptionsText","_e","reason","Array","isArray","removeTag","filter","tag","includes","renderInput","Composer","getQueryData","MUSIC","option","newComposer","COMPOSERS","postComposerMusic","composerId","deleteComposerMusic","AutocompleteTextField","multiple","getOptionSelected","getOptionLabel","onInputChange","Lyrist","newLyrist","LYRISTS","postLyristMusic","lyristId","deleteLyristMusic","match","Edit","ControlSelect","Select","child","addRoleSchema","artist_id","userSchema","introduction","issueSchema","contactSchema","defaultValues","createRoleMutation","newRole","destroyRoleMutation","prevArtist","artistMusic","MenuItem","newAlbum","postAlbumMusic","deleteAlbumMusic","prevAlbum","getIDfromYoutubeURL","newURL","Info","patchMutation","patchMusicLink","selectedMusic","handleItunesSelect","handleMusixmatchSelect","position","pt","styles","iframe","frameBorder","allow","allowFullScreen","Main","Date","Setting","destroyMusicMutation","deleteMusic","removeQueries","ROOT","fontWeight","validate","Issue","Files","files","blobPath","treePath","path","musicTree","File","rootTree","useLocation","blob","tree","Blob","musicBlob","style","github","newIssue","ISSUES","postIssue","rows","multiline","components","inline","exec","PreTag","Lyric","lyrics","lyrics_body","VolumeIcon","muted","Volume","volume","onMute","onVolume","ToggleButton","selected","Slider","Play","paused","onPause","createStyles","appBar","top","bottom","colorPrimary","background","barColorPrimary","backgroundColor","Player","selectInput","onPlay","useAudio","audio","controls","AppBar","time","duration","Toolbar","ToggleButtonGroup","newValue","srcTypes","Object","entries","selectedSrcType","setSelectedSrcType","handleChange","event","handleMute","unmute","mute","handlePlay","play","pause","handleVolume","SelectInput","srcType","useSpotifyTrackQuery","getSpotifyTrack","spotifyTrack","postMusicBookmark","deleteMusicBookmark","scoreExist","TAB","Tabs","FILES","LYRIC","SETTING","exact","InfoTabPanel","TreeTabPanel","SettingTabPanel","LyricTabPanel","TREE","TreeShow","strict","BLOB","BlobShow","IssuesTabPanel","IssueNew","previewUrl","preview_url","selectedItunesMusic","setSelectedItunesMusic","debouncedTitle","createMusicMutation","newMusic","selectedCard","SongInfo","Stop","onStop","CountIn","Loop","Metronome","onLayout","layout","FormControl","InputLabel","labelId","autoWidth","Zoom","zoom","onZoom","optionItems","Header","alphaTabApi","Horizontal","LayoutMode","Page","setTitle","setArtist","masterVolume","setMasterVolume","setPaused","playerReady","setPlayerReady","useToggle","toggleMuted","countIn","toggleCountIn","loop","toggleLoop","metronome","toggleMetronome","setLayout","setZoom","handlePlayerReadySetFalse","handlePlayerState","handleScoreLoaded","score","scoreLoaded","on","playerStateChanged","off","goBack","stop","playPause","countInVolume","isLooping","metronomeVolume","zoomLevel","parseInt","settings","scale","updateSettings","render","layoutMode","GuitarIcon","model","selectedIndex","onListItemClick","onSolo","setMute","solo","setSolo","ListItem","button","ListItemIcon","ListItemText","primary","secondary","Tracks","List","index","tex","player","enablePlayer","soundFont","Tab","Score","setTracks","setSelectedIndex","setAlphaTabApi","useRef","useScript","renderStarted","current","alphaTab","AlphaTabApi","destroy","flexDirection","flexGrow","atSidebar","left","zIndex","alignContent","border","borderLeft","borderTop","borderBottom","borderColor","changeTrackMute","changeTrackSolo","renderTracks","right","pr","newArtistBand","prevArtists","bandAlbums","useBandAlbumsQuery","bandMusics","useBandMusicsQuery","createBookmarkMutation","destroyBookmarkMutation","band_link","patchBandLink","selectedBand","selectedSpotify","BAND","debouncedName","newBand","User","nickname_cont","Follow","followed","onFollow","onUnfollow","Posted","Post","USER","PROFILE","getUserProfile","userLinkMutation","twitterId","patchUserLink","bookmarkedMusicPage","handleBookmarkedMusicPage","bookmarkedArtistPage","handleBookmarkedArtistPage","bookmarkedBandPage","handleBookmarkedBandPage","bookmarkedAlbumPage","handleBookmarkedAlbumPage","bookmarkedMusics","getUserBookmarkedMusics","bookmarkedBands","getUserBookmarkedBands","bookmarkedArtists","getUserBookmarkedArtists","bookmarkedAlbums","getUserBookmarkedAlbums","createMutate","RELATIONSHIPS","deleteMutate","followedId","isCurrentUser","FOLLOWERS","followersCount","FOLLOWING","followingCount","ProfileTabPanel","MusicsTabPanel","BookmarkTabPanel","Follower","Following","ItunesAlbum","collectionName","artistViewUrl","searchItunesAlbums","ALBUM","albumMusics","useAlbumMusicsQuery","patchLinkMutation","patchAlbumLink","selectedAlbum","collectionViewUrl","selectedItunesAlbum","setSelectedItunesAlbum","Contact","successed","setSuccessed","contactMutation","newContact","CONTACTS","postContact","Routes","NewMusic","MusicScore","Users","UserFollower","UserFollowing","Bands","NewBand","Artists","NewArtist","Albums","NewAlbum","SIGNIN","SIGNUP","locales","Notification","patchUserNotification","NOTIFICATIONS","findIndex","prevNotification","readAt","toLocaleDateString","notificationExist","some","notification","handleClick","userRelationship","ListItemAvatar","Avatar","username","formatDistanceToNow","createdAt","musicBookmark","signOut","onMutate","handleSignOut","underline","ml","popupId","popupState","bindTrigger","Badge","invisible","Popover","bindPopover","transformOrigin","Footer","Auth","TabContext","square","TabList","indicatorColor","textColor","aria-label","TabPanel","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.23074e0d.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n  interface PaletteOptions {\n    twitter: PaletteOptions[\"primary\"];\n    spotify: PaletteOptions[\"primary\"];\n    itunes: PaletteOptions[\"primary\"];\n  }\n  interface Palette {\n    twitter: Palette[\"primary\"];\n    spotify: Palette[\"primary\"];\n    itunes: Palette[\"primary\"];\n  }\n}\nconst theme = createMuiTheme({\n  palette: {\n    spotify: {\n      main: \"#1DB954\",\n      light: \"#a2ebbc\",\n    },\n    twitter: {\n      main: \"#1da1f2\",\n      dark: \"#158ad1\",\n    },\n    itunes: {\n      main: \"#fa57c1\",\n      light: \"#ffbfe9\",\n    },\n  },\n});\nexport default theme;\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"../theme\";\n\ninterface ThemeProps {\n  children: React.ReactNode;\n}\nconst Theme: React.FC<ThemeProps> = ({ children }: ThemeProps) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\nexport default Theme;\n","/* eslint-disable import/no-cycle */\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IUser } from \"../../interfaces\";\nimport { RootState } from \"../../store\";\n\nexport interface ITokenHeaders {\n  [\"content-type\"]: string;\n  [\"access-token\"]: string;\n  client: string;\n  uid: string;\n}\ninterface ICurrentUser {\n  currentUser?: IUser;\n  headers?: { headers: ITokenHeaders };\n}\nconst initialState: ICurrentUser = {\n  currentUser: undefined,\n  headers: undefined,\n};\n\nconst currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    setCurrentUser: (state, action: PayloadAction<IUser>) => {\n      state.currentUser = action.payload;\n    },\n    setHeaders: (state, action: PayloadAction<ITokenHeaders>) => {\n      const {\n        \"content-type\": contentType,\n        \"access-token\": accessToken,\n        client,\n        uid,\n      } = action.payload;\n      // Batch Request\n      const prevAccessToken = state.headers?.headers[\"access-token\"] || \"\";\n      state.headers = {\n        headers: {\n          \"content-type\": contentType,\n          \"access-token\": accessToken || prevAccessToken,\n          client,\n          uid,\n        },\n      };\n    },\n    remove: (state) => {\n      state.currentUser = undefined;\n      state.headers = undefined;\n    },\n  },\n});\n\nexport const selectCurrentUser = (state: RootState): undefined | IUser =>\n  state.currentUser.currentUser;\nexport const selectHeaders = (\n  state: RootState\n): undefined | { headers: ITokenHeaders } => state.currentUser.headers;\nexport const { setCurrentUser, setHeaders, remove } = currentUserSlice.actions;\nexport default currentUserSlice.reducer;\n","/* eslint-disable import/no-cycle */\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ISpotifyToken } from \"../interfaces\";\nimport { RootState } from \"../store\";\n\ninterface ISpotify {\n  code: string | undefined;\n  token: ISpotifyToken | undefined;\n}\nconst initialState: ISpotify = {\n  code: undefined,\n  token: undefined,\n};\n\nconst spotifySlice = createSlice({\n  name: \"spotify\",\n  initialState,\n  reducers: {\n    setCode: (state, action: PayloadAction<string>) => {\n      state.code = action.payload;\n    },\n    setToken: (state, action: PayloadAction<ISpotifyToken>) => {\n      state.token = action.payload;\n    },\n    remove: (state) => {\n      state.code = \"\";\n      state.token = undefined;\n    },\n  },\n});\n\nexport const selectSpotifyCode = (state: RootState): undefined | string =>\n  state.spotify.code;\nexport const selectSpotifyToken = (\n  state: RootState\n): undefined | ISpotifyToken => state.spotify.token;\nexport const { setCode, setToken, remove } = spotifySlice.actions;\nexport default spotifySlice.reducer;\n","const ja = {\n  email: \"メールアドレス\",\n  familyname: \"姓\",\n  givenname: \"名\",\n  signout: \"サインアウト\",\n  signoutSuccessful: \"サインアウトしました\",\n  signin: \"サインイン\",\n  signinSuccessful: \"サインインしました\",\n  signup: \"サインアップ\",\n  signupSuccessful: \"サインアップしました\",\n  nickname: \"ニックネーム\",\n  password: \"パスワード\",\n  passwordConfirmation: \"パスワード(確認)\",\n};\nexport default ja;\n","import IMessages from \"./type\";\nimport uiJa from \"../ui/locale/ja\";\n\nconst ja: IMessages = {\n  ...uiJa,\n  account: \"アカウント\",\n  addArtist: \"アーティスト追加\",\n  addAlbum: \"アルバム追加\",\n  album: \"アルバム\",\n  albums: \"アルバム\",\n  alertDelete: \"本当に削除しますか？\",\n  artist: \"アーティスト\",\n  artists: \"アーティスト\",\n  band: \"バンド\",\n  bands: \"バンド\",\n  beBookmarked: \"{username}が{music}をお気に入りしました\",\n  beFollowed: \"{username}にフォローされました\",\n  contact: \"問い合わせ\",\n  create: \"作成\",\n  composer: \"作曲者\",\n  composers: \"作曲者\",\n  createArtist: \"アーティストを作成\",\n  createAlbum: \"アルバムを作成\",\n  createMusic: \"曲を作成\",\n  createBand: \"バンドを作成\",\n  createIssue: \"問題を作成\",\n  delete: \"削除\",\n  description: \"説明\",\n  edit: \"編集\",\n  editAlbum: \"アルバムを編集\",\n  editInfo: \"情報を編集\",\n  follower: \"フォロワー\",\n  following: \"フォロー中\",\n  followUs: \"フォローする\",\n  unfollowUs: \"フォロー解除\",\n  file: \"ファイル\",\n  issues: \"問題\",\n  info: \"情報\",\n  link: \"リンク\",\n  lyric: \"歌詞\",\n  lyrists: \"作詞者\",\n  main: \"メイン\",\n  music: \"曲\",\n  musics: \"曲\",\n  name: \"名前\",\n  noNotification: \"\",\n  pleaseTranslate: \"翻訳のご協力お願いします\",\n  pleaseType: \"{value}を入力してください\",\n  profile: \"プロフィール\",\n  role: \"役割\",\n  releaseDate: \"発売日\",\n  searchByItunes: \"iTunesで検索\",\n  searchIssues: \"問題を検索\",\n  setting: \"設定\",\n  title: \"タイトル\",\n  translateTitle: \"タイトルを翻訳\",\n  translateName: \"名前を翻訳\",\n  user: \"ユーザー\",\n  users: \"ユーザー\",\n  untranslation: \"未翻訳\",\n  watchScore: \"楽譜を見る\",\n};\nexport default ja;\n","const en = {\n  email: \"Email\",\n  familyname: \"FamilyName\",\n  givenname: \"GivenName\",\n  signout: \"SignOut\",\n  signoutSuccessful: \"SignOut Successful\",\n  signin: \"SignIn\",\n  signinSuccessful: \"SignIn Successful\",\n  signup: \"SignUp\",\n  signupSuccessful: \"SignUp Successful\",\n  nickname: \"Nickname\",\n  password: \"Password\",\n  passwordConfirmation: \"Password Confirmation\",\n};\nexport default en;\n","import IMessages from \"./type\";\nimport uiEn from \"../ui/locale/en\";\n\nconst en: IMessages = {\n  ...uiEn,\n  account: \"Account\",\n  addArtist: \"Add Artist\",\n  addAlbum: \"Add Album\",\n  album: \"Album\",\n  albums: \"Albums\",\n  alertDelete: \"Are you absolutely sure?\",\n  artist: \"Artist\",\n  artists: \"Artists\",\n  band: \"Band\",\n  bands: \"Bands\",\n  beFollowed: \"followed by {username}\",\n  beBookmarked: \"{music} bookmarked by {username}\",\n  contact: \"Contact\",\n  create: \"Create\",\n  composer: \"Composer\",\n  composers: \"Composers\",\n  createArtist: \"Create Artist\",\n  createAlbum: \"Create Album\",\n  createMusic: \"Create Music\",\n  createBand: \"Create Band\",\n  createIssue: \"Create Issue\",\n  delete: \"Delete\",\n  description: \"Description\",\n  edit: \"Edit\",\n  editAlbum: \"Edit Album\",\n  editInfo: \"Edit Info\",\n  follower: \"Follower\",\n  following: \"Following\",\n  followUs: \"Follow\",\n  unfollowUs: \"Unfollow\",\n  file: \"file\",\n  issues: \"issues\",\n  info: \"info\",\n  link: \"Link\",\n  lyric: \"Lyric\",\n  lyrists: \"Lyrists\",\n  main: \"main\",\n  music: \"Music\",\n  musics: \"Musics\",\n  name: \"Name\",\n  noNotification: \"No Notification\",\n  pleaseTranslate: \"Please Translate\",\n  pleaseType: \"Please type {value}\",\n  profile: \"Profile\",\n  releaseDate: \"Release Date\",\n  searchByItunes: \"Search By Itunes\",\n  searchIssues: \"Search Issues\",\n  role: \"Role\",\n  setting: \"Setting\",\n  title: \"title\",\n  translateTitle: \"Translate Title\",\n  translateName: \"Translate Name\",\n  user: \"User\",\n  users: \"Users\",\n  untranslation: \"Untranslation\",\n  watchScore: \"Watch Score\",\n};\nexport default en;\n","/* eslint-disable import/no-cycle */\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport IMessages from \"../locale/type\";\nimport { RootState } from \"../store\";\nimport ja from \"../locale/ja\";\nimport en from \"../locale/en\";\n\nexport type ILocale = \"ja\" | \"en\";\nexport type ICountryCode = \"JP\" | \"US\";\n\ninterface ILanguage {\n  language: string;\n  locale: ILocale;\n  countryCode: ICountryCode;\n  messages: IMessages;\n}\nconst getLanguage = () => navigator.language;\nfunction getMessages(locale?: ILocale) {\n  switch (locale) {\n    case \"en\":\n      return en;\n    case \"ja\":\n      return ja;\n    default:\n      return en;\n  }\n}\nconst initialState: ILanguage = {\n  language: getLanguage(),\n  locale: getLanguage().split(\"-\")[0] as ILocale,\n  countryCode: getLanguage().split(\"-\")[1] as ICountryCode,\n  messages: getMessages(),\n};\n\nconst spotifySlice = createSlice({\n  name: \"spotify\",\n  initialState,\n  reducers: {\n    set: (state, action: PayloadAction<string>) => {\n      const newLanguage = action.payload;\n      const [newLocale, newCountryCode] = newLanguage.split(\"-\");\n      state.language = newLanguage;\n      state.locale = newLocale as ILocale;\n      state.countryCode = newCountryCode as ICountryCode;\n    },\n    setLocale: (state, action: PayloadAction<ILocale>) => {\n      state.locale = action.payload;\n    },\n    setCountryCode: (state, action: PayloadAction<ICountryCode>) => {\n      state.countryCode = action.payload;\n    },\n    remove: (state) => {\n      const [newLocale, newCountryCode] = getLanguage().split(\"-\");\n      state.language = newCountryCode;\n      state.locale = newLocale as ILocale;\n      state.countryCode = \"US\";\n    },\n  },\n});\n\nexport const selectLanguage = (state: RootState): string =>\n  state.language.language;\nexport const selectLocale = (state: RootState): ILocale =>\n  state.language.locale;\nexport const selectCountryCode = (state: RootState): ICountryCode =>\n  state.language.countryCode;\nexport const selectMessages = (state: RootState): IMessages =>\n  getMessages(state.language.locale);\nexport const { set, remove, setLocale, setCountryCode } = spotifySlice.actions;\nexport default spotifySlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n/* eslint-disable import/no-cycle */\nimport { RootState } from \"../../store\";\n\ninterface IAuthModal {\n  opened: boolean;\n}\nconst initialState: IAuthModal = {\n  opened: false,\n};\n\nconst authModal = createSlice({\n  name: \"spotify\",\n  initialState,\n  reducers: {\n    close: (state) => {\n      state.opened = false;\n    },\n    open: (state) => {\n      state.opened = true;\n    },\n  },\n});\n\nexport const selectOpened = (state: RootState): boolean =>\n  state.authModal.opened;\nexport const { close, open } = authModal.actions;\nexport default authModal.reducer;\n","/* eslint-disable import/no-cycle */\nimport { combineReducers } from \"redux\";\nimport currentUserReducer from \"./slices/currentUser/currentUser\";\nimport spotifyReducer from \"./slices/spotify\";\nimport languageReducer from \"./slices/language\";\nimport authModalReducer from \"./ui/Dialog/authModal\";\n\nexport default combineReducers({\n  currentUser: currentUserReducer,\n  spotify: spotifyReducer,\n  language: languageReducer,\n  authModal: authModalReducer,\n});\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n// eslint-disable-next-line import/no-cycle\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport type RootState = ReturnType<typeof rootReducer>;\nconst middlewares = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\nif (process.env.NODE_ENV === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: middlewares,\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"../store\";\n\ninterface ReduxProps {\n  children: React.ReactNode;\n}\nconst Redux: React.FC<ReduxProps> = ({ children }: ReduxProps) => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </Provider>\n);\nexport default Redux;\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\ninterface ReactQueryProps {\n  children: React.ReactNode;\n}\nconst queryClient = new QueryClient();\nconst ReactQuery: React.FC<ReactQueryProps> = ({\n  children,\n}: ReactQueryProps) => (\n  <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n);\nexport default ReactQuery;\n","import React from \"react\";\nimport { SnackbarProvider } from \"notistack\";\n\ninterface NotistackProps {\n  children: React.ReactNode;\n}\nconst Notistack: React.FC<NotistackProps> = ({ children }: NotistackProps) => (\n  <SnackbarProvider maxSnack={3}>{children}</SnackbarProvider>\n);\nexport default Notistack;\n","import React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { selectLocale, selectMessages } from \"../slices/language\";\n\ninterface IntlProps {\n  children: React.ReactNode;\n}\nconst Intl: React.FC<IntlProps> = ({ children }: IntlProps) => {\n  const locale = useSelector(selectLocale);\n  const messages = useSelector(selectMessages);\n  return (\n    <IntlProvider messages={messages} locale={locale} defaultLocale=\"en\">\n      {children}\n    </IntlProvider>\n  );\n};\nexport default Intl;\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\n\nexport interface LayoutProps {\n  page?: number;\n  pageCount?: number;\n  onPage?: (event: React.ChangeEvent<unknown>, value: number) => void;\n  loading?: boolean;\n  children?: React.ReactNode;\n}\nconst Layout: React.FC<LayoutProps> = ({\n  page,\n  pageCount,\n  onPage,\n  loading,\n  children,\n}: LayoutProps) => {\n  return (\n    <>\n      <TableContainer component={Paper}>\n        {children}\n        {loading && <LinearProgress />}\n      </TableContainer>\n      {page && <Pagination count={pageCount} page={page} onChange={onPage} />}\n    </>\n  );\n};\nLayout.defaultProps = {\n  page: undefined,\n  pageCount: undefined,\n  onPage: undefined,\n  loading: false,\n};\nexport default Layout;\n","import axios from \"axios-jsonp-pro\";\nimport { UseQueryOptions } from \"react-query\";\nimport {\n  IItunesAlbum,\n  IItunesArtist,\n  IItunesMusic,\n  IItunesResponse,\n} from \"../interfaces\";\n\nexport const limit = 400;\nconst itunes = axios.create({\n  baseURL: \"https://itunes.apple.com\",\n});\ntype TermType = string | undefined;\nexport interface LookupQueryFnArgs<T> {\n  id: number | string | null | undefined;\n  options?: UseQueryOptions<T[]>;\n}\n\nexport const lookupItunesArtist = ({\n  id,\n}: LookupQueryFnArgs<IItunesArtist>): Promise<IItunesResponse<IItunesArtist>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesArtist>>(\"/lookup\", {\n    params: {\n      id,\n      entity: \"musicArtist\",\n    },\n  });\nexport const lookupItunesAlbum = ({\n  id,\n}: LookupQueryFnArgs<IItunesAlbum>): Promise<IItunesResponse<IItunesAlbum>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesAlbum>>(\"/lookup\", {\n    params: { id, entity: \"album\" },\n  });\nexport const lookupItunesMusic = ({\n  id,\n}: LookupQueryFnArgs<IItunesMusic>): Promise<IItunesResponse<IItunesMusic>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesMusic>>(\"/lookup\", {\n    params: { id, entity: \"song\" },\n  });\n\nexport const searchItunesMusics = (\n  term: TermType,\n  offset: number\n): Promise<IItunesResponse<IItunesMusic>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesMusic>>(\"/search\", {\n    params: {\n      entity: \"song\",\n      term,\n      limit,\n      offset,\n    },\n  });\nexport const searchItunesArtists = (\n  term: TermType,\n  offset: number\n): Promise<IItunesResponse<IItunesArtist>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesArtist>>(\"/search\", {\n    params: {\n      entity: \"musicArtist\",\n      term,\n      limit,\n      offset,\n    },\n  });\nexport const searchItunesAlbums = (\n  term: TermType,\n  offset: number\n): Promise<IItunesResponse<IItunesAlbum>> =>\n  itunes.jsonp<null, IItunesResponse<IItunesAlbum>>(\"/search\", {\n    params: {\n      entity: \"album\",\n      term,\n      limit,\n      offset,\n    },\n  });\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch } from \"react-redux\";\nimport { open } from \"../ui/Dialog/authModal\";\nimport { remove } from \"../slices/currentUser/currentUser\";\n\nconst useQuerySnackbar = (): {\n  onError: (err: unknown) => void;\n} => {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const onError = (err: unknown) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (err.response?.status === 401) {\n      dispatch(remove());\n      dispatch(open());\n    }\n    enqueueSnackbar(String(err), { variant: \"error\" });\n  };\n  return { onError };\n};\nexport default useQuerySnackbar;\n","import { useQuery, UseQueryResult } from \"react-query\";\nimport {\n  lookupItunesAlbum,\n  lookupItunesArtist,\n  lookupItunesMusic,\n  LookupQueryFnArgs,\n} from \"../axios/itunes\";\nimport useQuerySnackbar from \"../hooks/useQuerySnackbar\";\nimport {\n  IItunesAlbum,\n  IItunesArtist,\n  IItunesMusic,\n  IItunesResponse,\n} from \"../interfaces\";\n\nfunction useLookup<T extends IItunesMusic | IItunesAlbum | IItunesArtist>(\n  query: {\n    key: string;\n    fn: (fnId: LookupQueryFnArgs<T>) => Promise<IItunesResponse<T>>;\n  },\n  args: LookupQueryFnArgs<T>\n) {\n  const { id, options } = args;\n  const { key, fn } = query;\n  const { onError } = useQuerySnackbar();\n  return useQuery(\n    [\"itunes\", key, id],\n    () => fn({ id }).then((res) => res.results),\n    {\n      ...options,\n      enabled: !!id,\n      onError,\n    }\n  );\n}\nexport const useLookupItunesMusic = ({\n  id,\n  options,\n}: LookupQueryFnArgs<IItunesMusic>): UseQueryResult<IItunesMusic[]> =>\n  useLookup({ key: \"music\", fn: lookupItunesMusic }, { id, options });\n\nexport const useLookupItunesAlbum = ({\n  id,\n  options,\n}: LookupQueryFnArgs<IItunesAlbum>): UseQueryResult<IItunesAlbum[]> =>\n  useLookup({ key: \"album\", fn: lookupItunesAlbum }, { id, options });\n\nexport const useLookupItunesArtist = ({\n  id,\n  options,\n}: LookupQueryFnArgs<IItunesArtist>): UseQueryResult<IItunesArtist[]> =>\n  useLookup({ key: \"artist\", fn: lookupItunesArtist }, { id, options });\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport Image from \"material-ui-image\";\nimport Layout, { LayoutProps } from \"./Layout\";\nimport { IMusic } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\nimport { useLookupItunesMusic } from \"../../reactQuery/itunes\";\n\ninterface MusicProps extends LayoutProps {\n  musics: IMusic[];\n}\nconst Music: React.FC<MusicProps> = ({\n  musics,\n  page,\n  pageCount,\n  onPage,\n  loading,\n}: MusicProps) => {\n  const ids = musics.map((music) => music.link.itunes || 0).join(\",\");\n  const columns = [\n    {\n      route: routes.MUSICS,\n      name: \"musics\",\n    },\n    { route: routes.BANDS, name: \"bands\" },\n    {\n      route: routes.ARTISTS,\n      name: \"composers\",\n    },\n    {\n      route: routes.ARTISTS,\n      name: \"lyrists\",\n    },\n    { route: routes.USERS, name: \"users\" },\n  ];\n  let i = 0;\n  let imageUrl: string | undefined = \"\";\n  const itunesMusics = useLookupItunesMusic({\n    id: ids,\n    options: {\n      enabled: !!ids,\n    },\n  });\n  return (\n    <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            {columns.map((column) => (\n              <TableCell key={column.name}>\n                <Link component={RouterLink} to={column.route}>\n                  <FormattedMessage id={column.name} />\n                </Link>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {musics?.map(\n            ({ id, title, band, user, composers, lyrists, link }) => {\n              if (\n                itunesMusics.data &&\n                itunesMusics.data[i] &&\n                link.itunes === itunesMusics.data[i].trackId\n              ) {\n                imageUrl = itunesMusics.data[i].artworkUrl60;\n                i += 1;\n              } else {\n                imageUrl = undefined;\n              }\n              return (\n                <TableRow key={id}>\n                  <TableCell>\n                    {imageUrl && (\n                      <Image loading={itunesMusics.isLoading} src={imageUrl} />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Link\n                      component={RouterLink}\n                      to={`${routes.USERS}/${user.id}${routes.MUSICS}/${id}`}\n                    >\n                      {title}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    {band && (\n                      <Link\n                        component={RouterLink}\n                        to={`${routes.BANDS}/${band.id}`}\n                      >\n                        {band?.name}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {composers?.map((composer) => (\n                      <Link\n                        key={composer.id}\n                        component={RouterLink}\n                        to={`${routes.ARTISTS}/${composer.id}`}\n                      >\n                        {composer.name}\n                      </Link>\n                    ))}\n                  </TableCell>\n                  <TableCell>\n                    {lyrists?.map((lyrist) => (\n                      <Link\n                        key={lyrist.id}\n                        component={RouterLink}\n                        to={`${routes.ARTISTS}/${lyrist.id}`}\n                      >\n                        {lyrist.name}\n                      </Link>\n                    ))}\n                  </TableCell>\n                  <TableCell>\n                    {user && (\n                      <Link\n                        component={RouterLink}\n                        to={`${routes.USERS}/${user.id}`}\n                      >\n                        {user.nickname}\n                      </Link>\n                    )}\n                  </TableCell>\n                </TableRow>\n              );\n            }\n          )}\n        </TableBody>\n      </Table>\n    </Layout>\n  );\n};\nexport default Music;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport Image from \"material-ui-image\";\nimport Link from \"@material-ui/core/Link\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { IAlbum } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\nimport Layout, { LayoutProps } from \"./Layout\";\nimport { useLookupItunesAlbum } from \"../../reactQuery/itunes\";\n\ninterface AlbumProps extends LayoutProps {\n  albums: IAlbum[];\n}\nconst Album: React.FC<AlbumProps> = ({\n  albums,\n  loading,\n  page,\n  pageCount,\n  onPage,\n}: AlbumProps) => {\n  const ids = albums.map((album) => album.link.itunes).join(\",\");\n  let i = 0;\n  let imageUrl: string | undefined = \"\";\n  // react-query\n  const itunesAlbums = useLookupItunesAlbum({ id: ids });\n  return (\n    <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>\n              <Link component={RouterLink} to={routes.ALBUMS}>\n                <FormattedMessage id=\"albums\" />\n              </Link>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {albums?.map(({ id, title, link }) => {\n            if (\n              link.itunes &&\n              itunesAlbums.data &&\n              itunesAlbums.data[i] &&\n              link.itunes === itunesAlbums.data[i].collectionId\n            ) {\n              imageUrl = itunesAlbums.data[i].artworkUrl60;\n              i += 1;\n            } else {\n              imageUrl = undefined;\n            }\n            return (\n              <TableRow key={id}>\n                <TableCell>{imageUrl && <Image src={imageUrl} />}</TableCell>\n                <TableCell>\n                  <Link component={RouterLink} to={`${routes.ALBUMS}/${id}`}>\n                    {title}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Layout>\n  );\n};\nexport default Album;\n","import SvgIcon from \"@material-ui/core/SvgIcon\";\n// import { Theme } from \"@material-ui/core/styles/createMuiTheme\";\n// import createStyles from \"@material-ui/core/styles/createStyles\";\n// import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport { FaTwitter } from \"react-icons/fa\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     colorPrimary: {\n//       color: theme.palette.twitter.main,\n//     },\n//   })\n// );\nconst Twitter: React.FC = () => {\n  // const classes = useStyles();\n  return (\n    <SvgIcon\n    // classes={{ root: classes.colorPrimary }}\n    >\n      <FaTwitter />\n    </SvgIcon>\n  );\n};\nexport default Twitter;\n","import React from \"react\";\nimport IconButton, { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\n\ninterface LinkProps extends IconButtonProps {\n  href?: string;\n  windowFeatures?: string;\n  onWindow?: (window: Window | null) => void;\n}\nconst LinkIcon: React.FC<LinkProps> = ({\n  href,\n  windowFeatures,\n  children,\n  onWindow,\n}: LinkProps) => {\n  const handleClick = () => {\n    const newWindow = window.open(href, undefined, windowFeatures);\n    if (onWindow) onWindow(newWindow);\n  };\n  return (\n    <IconButton\n      component={Link}\n      rel=\"noopener noreferrer\"\n      disabled={!href}\n      onClick={handleClick}\n    >\n      {children}\n    </IconButton>\n  );\n};\n\nLinkIcon.defaultProps = {\n  href: undefined,\n  windowFeatures: undefined,\n  onWindow: undefined,\n};\nexport default LinkIcon;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport TwitterIcon from \"../Icon/Twitter\";\nimport LinkIconButton from \"../Button/Icon/Link\";\nimport { IArtist } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\nimport Layout, { LayoutProps } from \"./Layout\";\n\ninterface ArtistProps extends LayoutProps {\n  artists: IArtist[] | undefined;\n}\nconst Artist: React.FC<ArtistProps> = ({\n  artists,\n  page,\n  pageCount,\n  onPage,\n  loading,\n}: ArtistProps) => {\n  return (\n    <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Link component={RouterLink} to={routes.ARTISTS}>\n                <FormattedMessage id=\"artists\" />\n              </Link>\n            </TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {artists?.map((artist) => (\n            <TableRow key={artist.id}>\n              <TableCell>\n                <Link\n                  component={RouterLink}\n                  to={`${routes.ARTISTS}/${artist.id}`}\n                >\n                  {artist.name}\n                </Link>\n              </TableCell>\n              <TableCell>\n                <LinkIconButton\n                  href={\n                    artist.link.twitter\n                      ? `https://twitter.com/${artist.link.twitter}`\n                      : undefined\n                  }\n                >\n                  <TwitterIcon />\n                </LinkIconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Layout>\n  );\n};\nexport default Artist;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport TwitterIcon from \"../Icon/Twitter\";\nimport LinkIconButton from \"../Button/Icon/Link\";\nimport { IBand } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\nimport Layout, { LayoutProps } from \"./Layout\";\n\ninterface BandProps extends LayoutProps {\n  bands: IBand[];\n}\nconst Band: React.FC<BandProps> = ({\n  bands,\n  page,\n  pageCount,\n  onPage,\n  loading,\n}: BandProps) => {\n  return (\n    <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Link component={RouterLink} to={`${routes.BANDS}`}>\n                <FormattedMessage id=\"bands\" />\n              </Link>\n            </TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {bands?.map((band) => (\n            <TableRow key={band.id}>\n              <TableCell>\n                <Link component={RouterLink} to={`${routes.BANDS}/${band.id}`}>\n                  {band.name}\n                </Link>\n              </TableCell>\n              <TableCell>\n                <LinkIconButton\n                  href={\n                    band.link.twitter\n                      ? `https://twitter.com/${band.link.twitter}`\n                      : undefined\n                  }\n                >\n                  <TwitterIcon />\n                </LinkIconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Layout>\n  );\n};\nexport default Band;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport routes from \"../../constants/routes.json\";\nimport { MenuCardType } from \"../../interfaces\";\n\ninterface ILayout {\n  icon: React.ReactNode;\n  title: MenuCardType;\n  messageId: string;\n  to: string;\n}\nconst Layout: React.FC<ILayout> = ({ icon, title, messageId, to }: ILayout) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Box textAlign=\"center\">{icon}</Box>\n        <Typography variant=\"h5\" component=\"h2\">\n          <FormattedMessage id={title} />\n        </Typography>\n        <Typography color=\"textSecondary\">\n          <FormattedMessage id={messageId} />\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <FormattedMessage id={messageId} />\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" component={RouterLink} to={`${to}${routes.NEW}`}>\n          <FormattedMessage id=\"create\" />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Box from \"@material-ui/core/Box\";\nimport { IMusic } from \"../../interfaces\";\n\ninterface CardsProps<T> {\n  cards: T[] | undefined;\n  children: (card1: T, card2: T) => React.ReactNode;\n}\nfunction Cards<T extends IMusic>({\n  cards,\n  children,\n}: CardsProps<T>): JSX.Element {\n  function eachSplice(arr: T[], size: number) {\n    return arr.reduce(\n      (newarr, _, i) =>\n        i % size ? newarr : [...newarr, arr.slice(i, i + size)],\n      [] as T[][]\n    );\n  }\n  return (\n    <Box mb={3}>\n      <Slider speed={500}>\n        {eachSplice(cards || [], 2).map(([card1, card2]) => (\n          <Box py={3} key={card1.id}>\n            {children(card1, card2)}\n          </Box>\n        ))}\n      </Slider>\n    </Box>\n  );\n}\nexport default Cards;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { IMusic } from \"../../interfaces\";\nimport { useLookupItunesMusic } from \"../../reactQuery/itunes\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface IMusicCard {\n  music: IMusic;\n  onClick: () => void;\n}\nconst BandCard: React.FC<IMusicCard> = ({ music, onClick }: IMusicCard) => {\n  const classes = useStyles();\n  const { data } = useLookupItunesMusic({ id: music.link.itunes });\n  return (\n    <Card onClick={onClick}>\n      <Box display=\"flex\">\n        <Box display=\"flex\" justifyItems=\"center\" alignItems=\"center\" p={1}>\n          {data && data.length && (\n            <CardMedia image={data[0].artworkUrl60} className={classes.media} />\n          )}\n        </Box>\n        <CardContent>\n          <Typography variant=\"h6\" noWrap>\n            {music.title}\n          </Typography>\n          {music.band?.name && (\n            <Typography color=\"textSecondary\" noWrap>\n              <FormattedMessage id=\"band\" />: {music.band?.name}\n            </Typography>\n          )}\n          {music.composers?.length ? (\n            <Typography color=\"textSecondary\" noWrap>\n              <FormattedMessage id=\"composer\" />:{\" \"}\n              {music.composers.map((composer) => (\n                <span key={composer.id}>{composer.name}</span>\n              ))}\n            </Typography>\n          ) : null}\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n\nexport default BandCard;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport MusicCard from \"../Card/Music\";\nimport { IMusic } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\n\ninterface IMusicsProps {\n  data: IMusic[] | undefined;\n}\nconst musicPath = (userId: number | undefined, cardId: number) =>\n  `${routes.USERS}/${userId || \"undefined\"}${routes.MUSICS}/${cardId}`;\nconst Musics: React.FC<IMusicsProps> = ({ data }: IMusicsProps) => {\n  const history = useHistory();\n  return (\n    <Layout<IMusic> cards={data}>\n      {(card1, card2) => {\n        const handleCard1Click = () =>\n          history.push(musicPath(card1.user?.id, card1.id));\n        const handleCard2Click = () =>\n          history.push(musicPath(card2.user?.id, card2.id));\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <MusicCard onClick={handleCard1Click} music={card1} />\n            </Grid>\n            <Grid item xs={6}>\n              <MusicCard onClick={handleCard2Click} music={card2} />\n            </Grid>\n          </Grid>\n        );\n      }}\n    </Layout>\n  );\n};\nexport default Musics;\n","import React, { ReactNode } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\n\ninterface DefaultProps {\n  children: ReactNode;\n}\nconst Default: React.FC<DefaultProps> = ({ children }: DefaultProps) => {\n  return (\n    <Container>\n      <Box my={5}>{children}</Box>\n    </Container>\n  );\n};\nexport default Default;\n","import React, { useCallback, useState } from \"react\";\n\nconst usePaginate = (): [\n  number,\n  (_event: React.ChangeEvent<unknown>, value: number) => void\n] => {\n  const [page, setPage] = useState(1);\n  const onPage = useCallback(\n    (_event: React.ChangeEvent<unknown>, value: number) => setPage(value),\n    []\n  );\n  return [page, onPage];\n};\n\nexport default usePaginate;\n","export default __webpack_public_path__ + \"static/media/stave.0a675c07.png\";","import { gql } from \"graphql-request\";\n\nconst albumQuery = gql`\n  query getAlbum($id: Int!, $currentUserId: Int, $locale: String!) {\n    album(id: $id) {\n      id\n      title(locale: $locale)\n      localed(locale: $locale)\n      link {\n        id\n        itunes\n      }\n      artists {\n        id\n        name(locale: $locale)\n        link {\n          id\n          twitter\n        }\n      }\n      bookmark(currentUserId: $currentUserId) {\n        id\n      }\n      bookmarksCount\n    }\n  }\n`;\nexport default albumQuery;\n","import { gql } from \"graphql-request\";\n\nconst albumMusicsQuery = gql`\n  query getAlbumMusics($id: Int!, $musicPage: Int!, $locale: String!) {\n    album(id: $id) {\n      musics(musicPage: $musicPage) {\n        data {\n          id\n          title(locale: $locale)\n          link {\n            itunes\n            spotify\n          }\n          band {\n            name(locale: $locale)\n          }\n          composers {\n            id\n            name(locale: $locale)\n          }\n          lyrists {\n            id\n            name(locale: $locale)\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\nexport default albumMusicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst albumsQuery = gql`\n  query getAlbums($page: Int!, $locale: String!, $q: JSON) {\n    albums(page: $page, locale: $locale, q: $q) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        title(locale: $locale)\n        link {\n          itunes\n        }\n      }\n    }\n  }\n`;\nexport default albumsQuery;\n","import { gql } from \"graphql-request\";\n\nconst artistQuery = gql`\n  query getArtist($id: Int!, $currentUserId: Int, $locale: String!) {\n    artist(id: $id) {\n      id\n      name(locale: $locale)\n      localed(locale: $locale)\n      link {\n        id\n        itunes\n        twitter\n        spotify\n        wikipedia(locale: $locale)\n        youtube\n      }\n      bands {\n        id\n        name(locale: $locale)\n        link {\n          itunes\n        }\n      }\n      bookmark(currentUserId: $currentUserId) {\n        id\n      }\n      bookmarksCount\n    }\n  }\n`;\nexport default artistQuery;\n","import { gql } from \"graphql-request\";\n\nconst artistAlbumsQuery = gql`\n  query getArtist($id: Int!, $albumPage: Int!, $locale: String!) {\n    artist(id: $id) {\n      albums(albumPage: $albumPage) {\n        data {\n          id\n          title(locale: $locale)\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\nexport default artistAlbumsQuery;\n","import { gql } from \"graphql-request\";\n\nconst artistMusicsQuery = gql`\n  query getMusics($id: Int!, $musicPage: Int!, $locale: String!) {\n    artist(id: $id) {\n      musics(musicPage: $musicPage) {\n        data {\n          id\n          title(locale: $locale)\n          link {\n            itunes\n          }\n          band {\n            id\n            name(locale: $locale)\n          }\n          composers {\n            id\n            name(locale: $locale)\n          }\n          lyrists {\n            id\n            name(locale: $locale)\n          }\n          user {\n            id\n            nickname\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\nexport default artistMusicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst artistsQuery = gql`\n  query getArtists($page: Int!, $locale: String!, $q: JSON) {\n    artists(page: $page, locale: $locale, q: $q) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        name(locale: $locale)\n        link {\n          twitter\n        }\n      }\n    }\n  }\n`;\nexport default artistsQuery;\n","import { gql } from \"graphql-request\";\n\nconst bandQuery = gql`\n  query getBand($id: Int!, $currentUserId: Int, $locale: String!) {\n    band(id: $id) {\n      id\n      name(locale: $locale)\n      localed(locale: $locale)\n      link {\n        id\n        itunes\n        twitter\n        spotify\n        wikipedia(locale: $locale)\n        youtube\n      }\n      artists {\n        id\n        name(locale: $locale)\n        link {\n          id\n          twitter\n        }\n      }\n      bookmark(currentUserId: $currentUserId) {\n        id\n      }\n      bookmarksCount\n    }\n  }\n`;\nexport default bandQuery;\n","import { gql } from \"graphql-request\";\n\nconst bandAlbumsQuery = gql`\n  query getBandAlbums($id: Int!, $albumPage: Int!, $locale: String!) {\n    band(id: $id) {\n      albums(albumPage: $albumPage) {\n        data {\n          id\n          title(locale: $locale)\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\nexport default bandAlbumsQuery;\n","import { gql } from \"graphql-request\";\n\nconst bandMusicsQuery = gql`\n  query getBandMusics($id: Int!, $musicPage: Int!, $locale: String!) {\n    band(id: $id) {\n      musics(musicPage: $musicPage) {\n        data {\n          id\n          title(locale: $locale)\n          composers {\n            id\n            name(locale: $locale)\n          }\n          lyrists {\n            id\n            name(locale: $locale)\n          }\n          user {\n            id\n            nickname\n          }\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\nexport default bandMusicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst issueQuery = gql`\n  query getIssue($id: Int!) {\n    issue(id: $id) {\n      id\n      title\n      description\n    }\n  }\n`;\nexport default issueQuery;\n","import { gql } from \"graphql-request\";\n\nconst bandsQuery = gql`\n  query getBands($page: Int!, $locale: String!, $q: JSON) {\n    bands(page: $page, locale: $locale, q: $q) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        name(locale: $locale)\n        link {\n          twitter\n        }\n      }\n    }\n  }\n`;\nexport default bandsQuery;\n","import { gql } from \"graphql-request\";\n\nconst issuesQuery = gql`\n  query getIssues($musicId: Int!, $page: Int!) {\n    issues(musicId: $musicId, page: $page) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\nexport default issuesQuery;\n","import { gql } from \"graphql-request\";\n\nconst musicQuery = gql`\n  query getMusic($id: Int!, $locale: String!, $currentUserId: Int) {\n    music(id: $id) {\n      id\n      title(locale: $locale)\n      scoreExist\n      localed(locale: $locale)\n      link {\n        id\n        musixmatch\n        itunes\n        spotify\n        youtube\n      }\n      user {\n        id\n        nickname\n      }\n      band {\n        id\n        name(locale: $locale)\n      }\n      artistMusics {\n        id\n        role\n        artist {\n          id\n          name(locale: $locale)\n        }\n      }\n      composers {\n        id\n        name(locale: $locale)\n      }\n      lyrists {\n        id\n        name(locale: $locale)\n      }\n      albums {\n        id\n        title(locale: $locale)\n        link {\n          itunes\n        }\n      }\n      bookmark(currentUserId: $currentUserId) {\n        id\n      }\n      bookmarksCount\n    }\n  }\n`;\n\nexport default musicQuery;\n","import { gql } from \"graphql-request\";\n\nconst rootTreeQuery = gql`\n  query getRootTree($id: Int!) {\n    music(id: $id) {\n      rootTree {\n        oid\n        type\n        name\n        filemode\n      }\n    }\n  }\n`;\n\nexport default rootTreeQuery;\n","import { gql } from \"graphql-request\";\n\nconst musicScoreQuery = gql`\n  query getMusic($id: Int!, $locale: String!) {\n    music(id: $id) {\n      id\n      title(locale: $locale)\n      score\n    }\n  }\n`;\n\nexport default musicScoreQuery;\n","import { gql } from \"graphql-request\";\n\nconst musicsQuery = gql`\n  query getMusics($page: Int!, $locale: String!, $q: JSON) {\n    musics(page: $page, locale: $locale, q: $q) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        title(locale: $locale)\n        link {\n          itunes\n        }\n        user {\n          id\n          nickname\n        }\n        band {\n          id\n          name(locale: $locale)\n        }\n        composers {\n          id\n          name(locale: $locale)\n        }\n        lyrists {\n          id\n          name(locale: $locale)\n        }\n      }\n    }\n  }\n`;\nexport default musicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userQuery = gql`\n  query getUser($id: Int!, $currentUserId: Int) {\n    user(id: $id) {\n      nickname\n      introduction\n      followingCount\n      followersCount\n      followed(currentUserId: $currentUserId) {\n        id\n      }\n    }\n  }\n`;\n\nexport default userQuery;\n","import { gql } from \"graphql-request\";\n\nconst userBookmarkedAlbumsQuery = gql`\n  query getBookmarkAlbums(\n    $id: Int!\n    $bookmarkedAlbumPage: Int!\n    $locale: String!\n  ) {\n    user(id: $id) {\n      bookmarkedAlbums(bookmarkedAlbumPage: $bookmarkedAlbumPage) {\n        data {\n          id\n          title(locale: $locale)\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\n\nexport default userBookmarkedAlbumsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userBookmarkedArtistsQuery = gql`\n  query getBookmarkArtists(\n    $id: Int!\n    $bookmarkedArtistPage: Int!\n    $locale: String!\n  ) {\n    user(id: $id) {\n      bookmarkedArtists(bookmarkedArtistPage: $bookmarkedArtistPage) {\n        data {\n          id\n          name(locale: $locale)\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\n\nexport default userBookmarkedArtistsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userBookmarkedBandsQuery = gql`\n  query getBookmarkBands(\n    $id: Int!\n    $bookmarkedBandPage: Int!\n    $locale: String!\n  ) {\n    user(id: $id) {\n      bookmarkedBands(bookmarkedBandPage: $bookmarkedBandPage) {\n        data {\n          id\n          name(locale: $locale)\n          link {\n            itunes\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\n\nexport default userBookmarkedBandsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userBookmarkedMusicsQuery = gql`\n  query getBookmarkMusic(\n    $id: Int!\n    $bookmarkedMusicPage: Int!\n    $locale: String!\n  ) {\n    user(id: $id) {\n      bookmarkedMusics(bookmarkedMusicPage: $bookmarkedMusicPage) {\n        data {\n          id\n          title(locale: $locale)\n          band {\n            name(locale: $locale)\n          }\n          composers {\n            id\n            name(locale: $locale)\n          }\n          lyrists {\n            id\n            name(locale: $locale)\n          }\n          link {\n            itunes\n          }\n          user {\n            nickname\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\n\nexport default userBookmarkedMusicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userFollowerQuery = gql`\n  query getUserFollower($id: Int!, $followerPage: Int!) {\n    user(id: $id) {\n      followers(followerPage: $followerPage) {\n        pagination {\n          totalPages\n        }\n        data {\n          id\n          nickname\n          link {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default userFollowerQuery;\n","import { gql } from \"graphql-request\";\n\nconst userFollowingQuery = gql`\n  query getUserFollowing($id: Int!, $followingPage: Int!) {\n    user(id: $id) {\n      following(followingPage: $followingPage) {\n        pagination {\n          totalPages\n        }\n        data {\n          id\n          nickname\n          link {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default userFollowingQuery;\n","import { gql } from \"graphql-request\";\n\nconst userMusicsQuery = gql`\n  query getUserMusics($id: Int!, $musicPage: Int!, $locale: String!) {\n    user(id: $id) {\n      musics(musicPage: $musicPage) {\n        data {\n          id\n          title(locale: $locale)\n          band {\n            name(locale: $locale)\n          }\n          composers {\n            id\n            name(locale: $locale)\n          }\n          lyrists {\n            id\n            name(locale: $locale)\n          }\n          link {\n            itunes\n          }\n          user {\n            id\n            nickname\n          }\n        }\n        pagination {\n          totalPages\n        }\n      }\n    }\n  }\n`;\n\nexport default userMusicsQuery;\n","import { gql } from \"graphql-request\";\n\nconst userProfileQuery = gql`\n  query getUserMusics($id: Int!) {\n    user(id: $id) {\n      link {\n        id\n        twitter\n      }\n    }\n  }\n`;\n\nexport default userProfileQuery;\n","import { gql } from \"graphql-request\";\n\nconst usersQuery = gql`\n  query getUsers($page: Int!, $q: JSON) {\n    users(page: $page, q: $q) {\n      pagination {\n        totalPages\n      }\n      data {\n        id\n        nickname\n        link {\n          twitter\n        }\n      }\n    }\n  }\n`;\nexport default usersQuery;\n","import { gql } from \"graphql-request\";\n\nconst blobQuery = gql`\n  query getBlob($id: Int!, $oid: String!) {\n    music(id: $id) {\n      blob(oid: $oid)\n    }\n  }\n`;\n\nexport default blobQuery;\n","import { gql } from \"graphql-request\";\n\nconst treeQuery = gql`\n  query getBlob($id: Int!, $oid: String!) {\n    music(id: $id) {\n      tree(oid: $oid) {\n        oid\n        type\n        name\n        filemode\n      }\n    }\n  }\n`;\n\nexport default treeQuery;\n","const baseURL =\n  process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"test\"\n    ? \"https://localhost\"\n    : \"https://stave-service.com\";\n\nexport default baseURL;\n","import { gql } from \"graphql-request\";\n\nconst userNotificationsQuery = gql`\n  query getNotifications($id: Int!, $notificationPage: Int!, $locale: String!) {\n    user(id: $id) {\n      notifications(notificationPage: $notificationPage) {\n        data {\n          id\n          recipientType\n          recipientId\n          type\n          params {\n            userRelationship {\n              followed {\n                id\n                nickname\n              }\n              follower {\n                id\n                nickname\n              }\n            }\n            musicBookmark {\n              user {\n                id\n                nickname\n              }\n              music {\n                id\n                title(locale: $locale)\n              }\n            }\n          }\n          readAt\n          createdAt\n          updatedAt\n        }\n        pagination {\n          totalPages\n        }\n        notificationExist\n      }\n    }\n  }\n`;\n\nexport default userNotificationsQuery;\n","import { GraphQLClient } from \"graphql-request\";\nimport { UseQueryOptions } from \"react-query\";\nimport {\n  IAlbum,\n  IAlbumsType,\n  IAlbumType,\n  IArtist,\n  IArtistsType,\n  IArtistType,\n  IBand,\n  IBandsType,\n  IBandType,\n  IIndexType,\n  IIssue,\n  IIssuesType,\n  IIssueType,\n  IMusic,\n  IMusicsType,\n  IMusicType,\n  INotification,\n  IUser,\n  IUsersType,\n  IUserType,\n} from \"../interfaces\";\nimport albumQuery from \"./query/album\";\nimport albumMusicsQuery from \"./query/album/musics\";\nimport albumsQuery from \"./query/albums\";\nimport artistQuery from \"./query/artist\";\nimport artistAlbumsQuery from \"./query/artist/album\";\nimport artistMusicsQuery from \"./query/artist/musics\";\nimport artistsQuery from \"./query/artists\";\nimport bandQuery from \"./query/band\";\nimport bandAlbumsQuery from \"./query/band/albums\";\nimport bandMusicsQuery from \"./query/band/musics\";\nimport issueQuery from \"./query/issue\";\nimport bandsQuery from \"./query/bands\";\nimport issuesQuery from \"./query/issues\";\nimport musicQuery from \"./query/music\";\nimport rootTreeQuery from \"./query/music/rootTree\";\nimport musicScoreQuery from \"./query/music/score\";\nimport musicsQuery from \"./query/musics\";\nimport userQuery from \"./query/user\";\nimport userBookmarkedAlbumsQuery from \"./query/user/bookmarkedAlbums\";\nimport userBookmarkedArtistsQuery from \"./query/user/bookmarkedArtists\";\nimport userBookmarkedBandsQuery from \"./query/user/bookmarkedBands\";\nimport userBookmarkedMusicsQuery from \"./query/user/bookmarkedMusics\";\nimport userFollowerQuery from \"./query/user/followers\";\nimport userFollowingQuery from \"./query/user/following\";\nimport userMusicsQuery from \"./query/user/musics\";\nimport userProfileQuery from \"./query/user/profile\";\nimport usersQuery from \"./query/users\";\nimport blobQuery from \"./query/music/blob\";\nimport treeQuery from \"./query/music/tree\";\nimport baseURL from \"../constants/baseURL\";\nimport userNotificationsQuery from \"./query/user/notifications\";\nimport { ILocale } from \"../slices/language\";\n\nexport type IndexQueryFnArgs<T> = {\n  page: number;\n  locale?: ILocale;\n  q?: { s?: string; [key: string]: string | undefined };\n  options?: UseQueryOptions<T>;\n};\nexport type ResourcesIndexQueryFnArgs<T> = {\n  id: number | undefined;\n  page: number;\n  locale?: ILocale;\n  q?: { s?: string; [key: string]: string | undefined };\n  options?: UseQueryOptions<T>;\n};\n\nexport type ShowQueryFnArgs<T> = {\n  id: number;\n  locale?: ILocale;\n  currentUserId?: number | undefined;\n  oid?: string;\n  options?: UseQueryOptions<T>;\n};\nconst graphQLCilent = new GraphQLClient(`${baseURL}/graphql`);\nexport const getUsers =\n  ({ page, q }: IndexQueryFnArgs<IIndexType<IUser>>) =>\n  (): Promise<IIndexType<IUser>> =>\n    graphQLCilent\n      .request<IUsersType>(usersQuery, { page, q })\n      .then((res) => res.users);\nexport const getUser =\n  ({ id, currentUserId }: ShowQueryFnArgs<IUser>) =>\n  (): Promise<IUser> =>\n    graphQLCilent\n      .request<IUserType>(userQuery, { id, currentUserId })\n      .then((res) => res.user);\nexport const getUserProfile = (id: number) => (): Promise<IUser> =>\n  graphQLCilent\n    .request<IUserType>(userProfileQuery, { id })\n    .then((res) => res.user);\nexport const getUserMusics =\n  ({\n    id,\n    page: musicPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IUserType>(userMusicsQuery, {\n        id,\n        musicPage,\n        locale,\n      })\n      .then((res) => res.user.musics);\nexport const getUserNotifications =\n  ({\n    id,\n    page: notificationPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<INotification>>) =>\n  (): Promise<IIndexType<INotification>> =>\n    graphQLCilent\n      .request<IUserType>(userNotificationsQuery, {\n        id,\n        notificationPage,\n        locale,\n      })\n      .then((res) => res.user.notifications);\nexport const getUserBookmarkedMusics =\n  ({ id, page, locale }: ResourcesIndexQueryFnArgs<IMusic>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IUserType>(userBookmarkedMusicsQuery, {\n        id,\n        bookmarkedMusicPage: page,\n        locale,\n      })\n      .then((res) => res.user.bookmarkedMusics);\nexport const getUserBookmarkedArtists =\n  ({ id, page, locale }: ResourcesIndexQueryFnArgs<IIndexType<IArtist>>) =>\n  (): Promise<IIndexType<IArtist>> =>\n    graphQLCilent\n      .request<IUserType>(userBookmarkedArtistsQuery, {\n        id,\n        bookmarkedArtistPage: page,\n        locale,\n      })\n      .then((res) => res.user.bookmarkedArtists);\nexport const getUserBookmarkedBands =\n  ({ id, page, locale }: ResourcesIndexQueryFnArgs<IIndexType<IBand>>) =>\n  (): Promise<IIndexType<IBand>> =>\n    graphQLCilent\n      .request<IUserType>(userBookmarkedBandsQuery, {\n        id,\n        bookmarkedBandPage: page,\n        locale,\n      })\n      .then((res) => res.user.bookmarkedBands);\nexport const getUserBookmarkedAlbums =\n  ({ id, page, locale }: ResourcesIndexQueryFnArgs<IIndexType<IAlbum>>) =>\n  (): Promise<IIndexType<IAlbum>> =>\n    graphQLCilent\n      .request<IUserType>(userBookmarkedAlbumsQuery, {\n        id,\n        bookmarkedAlbumPage: page,\n        locale,\n      })\n      .then((res) => res.user.bookmarkedAlbums);\nexport const getUserFollower =\n  ({ id, page: followerPage }: ResourcesIndexQueryFnArgs<IIndexType<IUser>>) =>\n  (): Promise<IIndexType<IUser>> =>\n    graphQLCilent\n      .request<IUserType>(userFollowerQuery, {\n        id,\n        followerPage,\n      })\n      .then((res) => res.user.followers);\nexport const getUserFollowing =\n  ({ id, page: followingPage }: ResourcesIndexQueryFnArgs<IIndexType<IUser>>) =>\n  (): Promise<IIndexType<IUser>> =>\n    graphQLCilent\n      .request<IUserType>(userFollowingQuery, {\n        id,\n        followingPage,\n      })\n      .then((res) => res.user.following);\nexport const getMusics =\n  ({ page, locale, q }: IndexQueryFnArgs<IIndexType<IMusic>>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IMusicsType>(musicsQuery, {\n        page,\n        locale,\n        q,\n      })\n      .then((res) => res.musics);\nexport const getMusic =\n  ({ id, locale, currentUserId }: ShowQueryFnArgs<IMusic>) =>\n  (): Promise<IMusic> =>\n    graphQLCilent\n      .request<IMusicType>(musicQuery, {\n        id,\n        locale,\n        currentUserId,\n      })\n      .then((res) => res.music);\nexport const getMusicScore =\n  ({ id, locale }: ShowQueryFnArgs<IMusic>) =>\n  (): Promise<IMusic> =>\n    graphQLCilent\n      .request<IMusicType>(musicScoreQuery, {\n        id,\n        locale,\n      })\n      .then((res) => res.music);\nexport const getMusicRootTree =\n  ({ id }: ShowQueryFnArgs<IMusic>) =>\n  (): Promise<IMusic> =>\n    graphQLCilent\n      .request<IMusicType>(rootTreeQuery, {\n        id,\n      })\n      .then((res) => res.music);\nexport const getMusicTree =\n  ({ id, oid }: ShowQueryFnArgs<IMusic>) =>\n  (): Promise<IMusic> =>\n    graphQLCilent\n      .request<IMusicType>(treeQuery, {\n        id,\n        oid,\n      })\n      .then((res) => res.music);\nexport const getMusicBlob =\n  ({ id, oid }: ShowQueryFnArgs<IMusic>) =>\n  (): Promise<IMusic> =>\n    graphQLCilent\n      .request<IMusicType>(blobQuery, {\n        id,\n        oid,\n      })\n      .then((res) => res.music);\nexport const getIssues =\n  ({ id: musicId, page, q }: ResourcesIndexQueryFnArgs<IIndexType<IIssue>>) =>\n  (): Promise<IIndexType<IIssue>> =>\n    graphQLCilent\n      .request<IIssuesType>(issuesQuery, {\n        musicId,\n        page,\n        q,\n      })\n      .then((res) => res.issues);\nexport const getIssue =\n  ({ id }: ShowQueryFnArgs<IIssue>) =>\n  (): Promise<IIssue> =>\n    graphQLCilent\n      .request<IIssueType>(issueQuery, {\n        id,\n      })\n      .then((res) => res.issue);\nexport const getBands =\n  ({ page, locale, q }: IndexQueryFnArgs<IIndexType<IBand>>) =>\n  (): Promise<IIndexType<IBand>> =>\n    graphQLCilent\n      .request<IBandsType>(bandsQuery, {\n        page,\n        locale,\n        q,\n      })\n      .then((res) => res.bands);\nexport const getBand =\n  ({ id, locale, currentUserId }: ShowQueryFnArgs<IBand>) =>\n  (): Promise<IBand> =>\n    graphQLCilent\n      .request<IBandType>(bandQuery, {\n        id,\n        locale,\n        currentUserId,\n      })\n      .then((res) => res.band);\nexport const getBandAlbums =\n  ({\n    id,\n    page: albumPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IAlbum>>) =>\n  (): Promise<IIndexType<IAlbum>> =>\n    graphQLCilent\n      .request<IBandType>(bandAlbumsQuery, {\n        id,\n        albumPage,\n        locale,\n      })\n      .then((res) => res.band.albums);\nexport const getBandMusics =\n  ({\n    id,\n    page: musicPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IBandType>(bandMusicsQuery, {\n        id,\n        musicPage,\n        locale,\n      })\n      .then((res) => res.band.musics);\nexport const getArtists =\n  ({ page, locale, q }: IndexQueryFnArgs<IIndexType<IArtist>>) =>\n  (): Promise<IIndexType<IArtist>> =>\n    graphQLCilent\n      .request<IArtistsType>(artistsQuery, {\n        page,\n        locale,\n        q,\n      })\n      .then((res) => res.artists);\nexport const getArtist =\n  ({ id, locale, currentUserId }: ShowQueryFnArgs<IArtist>) =>\n  (): Promise<IArtist> =>\n    graphQLCilent\n      .request<IArtistType>(artistQuery, {\n        id,\n        locale,\n        currentUserId,\n      })\n      .then((res) => res.artist);\nexport const getArtistAlbums =\n  ({\n    id,\n    page: albumPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IAlbum>>) =>\n  (): Promise<IIndexType<IAlbum>> =>\n    graphQLCilent\n      .request<IArtistType>(artistAlbumsQuery, {\n        id,\n        albumPage,\n        locale,\n      })\n      .then((res) => res.artist.albums);\nexport const getArtistMusics =\n  ({\n    id,\n    page: musicPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IArtistType>(artistMusicsQuery, {\n        id,\n        musicPage,\n        locale,\n      })\n      .then((res) => res.artist.musics);\nexport const getAlbums =\n  ({ page, locale, q }: IndexQueryFnArgs<IIndexType<IAlbum>>) =>\n  (): Promise<IIndexType<IAlbum>> =>\n    graphQLCilent\n      .request<IAlbumsType>(albumsQuery, {\n        page,\n        locale,\n        q,\n      })\n      .then((res) => res.albums);\nexport const getAlbum =\n  ({ id, locale, currentUserId }: ShowQueryFnArgs<IAlbum>) =>\n  (): Promise<IAlbum> =>\n    graphQLCilent\n      .request<IAlbumType>(albumQuery, {\n        id,\n        locale,\n        currentUserId,\n      })\n      .then((res) => res.album);\nexport const getAlbumMusics =\n  ({\n    id,\n    page: musicPage,\n    locale,\n  }: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>) =>\n  (): Promise<IIndexType<IMusic>> =>\n    graphQLCilent\n      .request<IAlbumType>(albumMusicsQuery, {\n        id,\n        musicPage,\n        locale,\n      })\n      .then((res) => res.album.musics);\n","import { useQuery, UseQueryResult } from \"react-query\";\nimport {\n  getAlbum,\n  getAlbumMusics,\n  getAlbums,\n  getArtist,\n  getArtistAlbums,\n  getArtistMusics,\n  getArtists,\n  getBand,\n  getBandAlbums,\n  getBandMusics,\n  getBands,\n  getIssue,\n  getIssues,\n  getMusic,\n  getMusicBlob,\n  getMusicRootTree,\n  getMusics,\n  getMusicScore,\n  getMusicTree,\n  getUser,\n  getUserFollower,\n  getUserFollowing,\n  getUserMusics,\n  getUserNotifications,\n  getUsers,\n  IndexQueryFnArgs,\n  ResourcesIndexQueryFnArgs,\n  ShowQueryFnArgs,\n} from \"../gql\";\nimport useQuerySnackbar from \"../hooks/useQuerySnackbar\";\nimport {\n  IAlbum,\n  IArtist,\n  IBand,\n  IIndexType,\n  IIssue,\n  IMusic,\n  INotification,\n  IUser,\n} from \"../interfaces\";\n\nfunction useIndexQuery<T>(\n  query: {\n    key: string;\n    fn: (\n      fnArgs: IndexQueryFnArgs<IIndexType<T>>\n    ) => () => Promise<IIndexType<T>>;\n  },\n  args: IndexQueryFnArgs<IIndexType<T>>\n): UseQueryResult<IIndexType<T>> {\n  const { page, locale, q, options } = args;\n  const { key, fn } = query;\n  const { onError } = useQuerySnackbar();\n  return useQuery([key, page, locale, q], fn(args), {\n    ...options,\n    onError,\n  });\n}\n\nexport const useUsersQuery = (\n  args: IndexQueryFnArgs<IIndexType<IUser>>\n): UseQueryResult<IIndexType<IUser>> =>\n  useIndexQuery<IUser>({ key: \"users\", fn: getUsers }, args);\n\nexport const useMusicsQuery = (\n  args: IndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useIndexQuery({ key: \"musics\", fn: getMusics }, args);\n\nexport const useDescBookmarkMusicsQuery = (\n  args: IndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useIndexQuery({ key: \"descBookmarkMusics\", fn: getMusics }, args);\n\nexport const useAlbumsQuery = (\n  args: IndexQueryFnArgs<IIndexType<IAlbum>>\n): UseQueryResult<IIndexType<IAlbum>> =>\n  useIndexQuery({ key: \"albums\", fn: getAlbums }, args);\n\nexport const useArtistsQuery = (\n  args: IndexQueryFnArgs<IIndexType<IArtist>>\n): UseQueryResult<IIndexType<IArtist>> =>\n  useIndexQuery({ key: \"artists\", fn: getArtists }, args);\n\nexport const useBandsQuery = (\n  args: IndexQueryFnArgs<IIndexType<IBand>>\n): UseQueryResult<IIndexType<IBand>> =>\n  useIndexQuery({ key: \"bands\", fn: getBands }, args);\n\nfunction useResourcesIndexQuery<T>(\n  query: {\n    firstKey: string;\n    secondKey: string;\n    fn: (\n      fnArgs: ResourcesIndexQueryFnArgs<IIndexType<T>>\n    ) => () => Promise<IIndexType<T>>;\n  },\n  args: ResourcesIndexQueryFnArgs<IIndexType<T>>\n): UseQueryResult<IIndexType<T>> {\n  const { id, page, locale, q, options } = args;\n  const { firstKey, secondKey, fn } = query;\n  const { onError } = useQuerySnackbar();\n  return useQuery([firstKey, id, secondKey, locale, page, q], fn(args), {\n    ...options,\n    onError,\n  });\n}\n\nexport const useMusicIssuesQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IIssue>>\n): UseQueryResult<IIndexType<IIssue>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"music\", secondKey: \"issues\", fn: getIssues },\n    args\n  );\n\nexport const useBandMusicsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"band\", secondKey: \"musics\", fn: getBandMusics },\n    args\n  );\n\nexport const useBandAlbumsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IAlbum>>\n): UseQueryResult<IIndexType<IAlbum>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"band\", secondKey: \"albums\", fn: getBandAlbums },\n    args\n  );\n\nexport const useArtistAlbumsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IAlbum>>\n): UseQueryResult<IIndexType<IAlbum>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"artist\", secondKey: \"albums\", fn: getArtistAlbums },\n    args\n  );\n\nexport const useArtistMusicsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"artist\", secondKey: \"musics\", fn: getArtistMusics },\n    args\n  );\n\nexport const useUserFollowingQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IUser>>\n): UseQueryResult<IIndexType<IUser>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"user\", secondKey: \"following\", fn: getUserFollowing },\n    args\n  );\n\nexport const useUserFollowerQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IUser>>\n): UseQueryResult<IIndexType<IUser>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"user\", secondKey: \"follower\", fn: getUserFollower },\n    args\n  );\n\nexport const useUserMusicsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"user\", secondKey: \"musics\", fn: getUserMusics },\n    args\n  );\n\nexport const useUserNotificationsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<INotification>>\n): UseQueryResult<IIndexType<INotification>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"user\", secondKey: \"notifications\", fn: getUserNotifications },\n    args\n  );\n\nexport const useAlbumMusicsQuery = (\n  args: ResourcesIndexQueryFnArgs<IIndexType<IMusic>>\n): UseQueryResult<IIndexType<IMusic>> =>\n  useResourcesIndexQuery(\n    { firstKey: \"album\", secondKey: \"musics\", fn: getAlbumMusics },\n    args\n  );\n\nfunction useShowQuery<T>(\n  query: {\n    key: string;\n    fn: (fnArgs: ShowQueryFnArgs<T>) => () => Promise<T>;\n  },\n  args: ShowQueryFnArgs<T>\n): UseQueryResult<T> {\n  const { id, locale, options } = args;\n  const { key, fn } = query;\n  const { onError } = useQuerySnackbar();\n  return useQuery([key, id, locale], fn(args), {\n    ...options,\n    onError,\n  });\n}\n\nexport const useUserQuery = (\n  args: ShowQueryFnArgs<IUser>\n): UseQueryResult<IUser> => useShowQuery({ key: \"user\", fn: getUser }, args);\n\nexport const useMusicQuery = (\n  args: ShowQueryFnArgs<IMusic>\n): UseQueryResult<IMusic> => useShowQuery({ key: \"music\", fn: getMusic }, args);\n\nexport const useMusicScoreQuery = (\n  args: ShowQueryFnArgs<IMusic>\n): UseQueryResult<IMusic> =>\n  useShowQuery({ key: \"musicScore\", fn: getMusicScore }, args);\n\nexport const useMusicBlobQuery = (\n  args: ShowQueryFnArgs<IMusic>\n): UseQueryResult<IMusic> =>\n  useShowQuery({ key: \"musicBlob\", fn: getMusicBlob }, args);\n\nexport const useMusicTreeQuery = (\n  args: ShowQueryFnArgs<IMusic>\n): UseQueryResult<IMusic> =>\n  useShowQuery({ key: \"musicTree\", fn: getMusicTree }, args);\n\nexport const useMusicRootTreeQuery = (\n  args: ShowQueryFnArgs<IMusic>\n): UseQueryResult<IMusic> =>\n  useShowQuery({ key: \"musicRootTree\", fn: getMusicRootTree }, args);\n\nexport const useAlbumQuery = (\n  args: ShowQueryFnArgs<IAlbum>\n): UseQueryResult<IAlbum> => useShowQuery({ key: \"album\", fn: getAlbum }, args);\n\nexport const useArtistQuery = (\n  args: ShowQueryFnArgs<IArtist>\n): UseQueryResult<IArtist> =>\n  useShowQuery({ key: \"artist\", fn: getArtist }, args);\n\nexport const useBandQuery = (\n  args: ShowQueryFnArgs<IBand>\n): UseQueryResult<IBand> => useShowQuery({ key: \"band\", fn: getBand }, args);\n\nexport const useIssueQuery = (\n  args: ShowQueryFnArgs<IIssue>\n): UseQueryResult<IIssue> => useShowQuery({ key: \"issue\", fn: getIssue }, args);\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport AlbumIcon from \"@material-ui/icons/Album\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Image from \"material-ui-image\";\nimport { useSelector } from \"react-redux\";\nimport MusicsTable from \"../components/Table/Music\";\nimport AlbumsTable from \"../components/Table/Album\";\nimport ArtistsTable from \"../components/Table/Artist\";\nimport BandsTable from \"../components/Table/Band\";\nimport MenuCard from \"../components/Card/Menu\";\nimport MusicCards from \"../components/Cards/Musics\";\nimport DefaultLayout from \"../layout/Default\";\nimport usePaginate from \"../hooks/usePaginate\";\nimport img from \"../images/stave.png\";\nimport { selectLocale } from \"../slices/language\";\nimport {\n  useAlbumsQuery,\n  useArtistsQuery,\n  useBandsQuery,\n  useDescBookmarkMusicsQuery,\n  useMusicsQuery,\n} from \"../reactQuery/query\";\n\nconst Root: React.FC = () => {\n  const [musicPage, handleMusicPage] = usePaginate();\n  const [albumPage, handleAlbumPage] = usePaginate();\n  const [artistPage, handleArtistPage] = usePaginate();\n  const [bandPage, handleBandPage] = usePaginate();\n  const locale = useSelector(selectLocale);\n  const musics = useMusicsQuery({\n    page: musicPage,\n    locale,\n    q: { s: \"updated_at desc\" },\n  });\n  const albums = useAlbumsQuery({\n    page: albumPage,\n    locale,\n    q: { s: \"updated_at desc\" },\n  });\n  const artists = useArtistsQuery({\n    page: artistPage,\n    locale,\n    q: { s: \"updated_at desc\" },\n  });\n  const bands = useBandsQuery({\n    page: bandPage,\n    locale,\n    q: { s: \"updated_at desc\" },\n  });\n  const descBookmarkMusics = useDescBookmarkMusicsQuery({\n    page: 1,\n    locale,\n    q: {\n      s: \"bookmarks_count desc\",\n    },\n  });\n  useEffect(() => {\n    const params = new URL(window.location.href).searchParams;\n    const code = params.get(\"code\");\n    if (code) {\n      const prevWindow = window.opener as Window;\n      if (prevWindow) prevWindow.getSpotifyCode(code);\n      window.close();\n    }\n  }, []);\n  return (\n    <DefaultLayout>\n      <Box mb={3}>\n        <Link\n          href=\"https://staveservice.github.io/docs/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Image aspectRatio={16 / 9} src={img} />\n        </Link>\n      </Box>\n      <Box mb={3}>\n        <Grid container spacing={2}>\n          <Grid item xs={3}>\n            <MenuCard\n              icon={<MusicNoteIcon fontSize=\"large\" />}\n              title=\"music\"\n              messageId=\"createMusic\"\n              to=\"musics\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <MenuCard\n              icon={<AlbumIcon fontSize=\"large\" />}\n              title=\"album\"\n              messageId=\"createAlbum\"\n              to=\"albums\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <MenuCard\n              icon={<AccessibilityNewIcon fontSize=\"large\" />}\n              title=\"artist\"\n              messageId=\"createArtist\"\n              to=\"artists\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <MenuCard\n              icon={<GroupIcon fontSize=\"large\" />}\n              title=\"band\"\n              messageId=\"createBand\"\n              to=\"bands\"\n            />\n          </Grid>\n        </Grid>\n      </Box>\n      <Box mb={3}>\n        <MusicCards data={descBookmarkMusics.data?.data} />\n      </Box>\n      <Box mb={3}>\n        <Typography variant=\"h4\">Musics</Typography>\n        <MusicsTable\n          musics={musics.data?.data || []}\n          loading={musics.isLoading}\n          page={musicPage}\n          pageCount={musics.data?.pagination?.totalPages}\n          onPage={handleMusicPage}\n        />\n      </Box>\n      <Box mb={3}>\n        <Typography variant=\"h4\">Albums</Typography>\n        <AlbumsTable\n          albums={albums.data?.data || []}\n          loading={albums.isLoading}\n          page={albumPage}\n          pageCount={albums.data?.pagination?.totalPages}\n          onPage={handleAlbumPage}\n        />\n      </Box>\n      <Box mb={3}>\n        <Typography variant=\"h4\">Bands</Typography>\n        <BandsTable\n          bands={bands.data?.data || []}\n          loading={bands.isLoading}\n          page={bandPage}\n          pageCount={bands.data?.pagination?.totalPages}\n          onPage={handleBandPage}\n        />\n      </Box>\n      <Box mb={3}>\n        <Typography variant=\"h4\">Artists</Typography>\n        <ArtistsTable\n          artists={artists.data?.data || []}\n          loading={artists.isLoading}\n          page={artistPage}\n          pageCount={artists.data?.pagination?.totalPages}\n          onPage={handleArtistPage}\n        />\n      </Box>\n    </DefaultLayout>\n  );\n};\nexport default Root;\n","import React, { ChangeEvent } from \"react\";\nimport {\n  Control,\n  DeepMap,\n  FieldError,\n  FieldValues,\n  RegisterOptions,\n  useController,\n} from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\n\nexport type ControlTextFieldProps = TextFieldProps & {\n  name: string;\n  control: Control;\n  errors?: DeepMap<FieldValues, FieldError>;\n  rules?: RegisterOptions;\n};\n\nconst ControlTextField: React.FC<ControlTextFieldProps> = ({\n  name,\n  defaultValue,\n  onChange,\n  onKeyPress,\n  // react-hook-form props\n  errors,\n  control,\n  rules,\n  ...props\n}: ControlTextFieldProps) => {\n  const {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    field: { ref, value, onChange: onChangeController },\n    meta: { invalid },\n  } = useController({ name, control, rules, defaultValue });\n  const handleChange = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    if (onChange) onChange(e);\n    onChangeController(e.target.value);\n  };\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (onKeyPress) onKeyPress(e);\n  };\n\n  return (\n    <TextField\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      value={value as string}\n      inputRef={ref}\n      error={invalid}\n      helperText={errors && <ErrorMessage errors={errors} name={name} />}\n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n    />\n  );\n};\n\nControlTextField.defaultProps = {\n  rules: {},\n};\n\nexport default ControlTextField;\n","import React from \"react\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\ntype ILoadingButton = ButtonProps & { loading: boolean };\nconst LoadingButton: React.FC<ILoadingButton> = ({\n  disabled,\n  loading,\n  children,\n  ...props\n}: ILoadingButton) => (\n  <Button\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...props}\n    variant=\"contained\"\n    startIcon={loading && <CircularProgress size={20} />}\n    disabled={loading || disabled}\n    disableElevation\n  >\n    {children}\n  </Button>\n);\nexport default LoadingButton;\n","import * as yup from \"yup\";\n\nexport const signInSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\nexport const signUpSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  nickname: yup.string().required().min(4).max(30),\n  familyname: yup.string().required().max(35),\n  givenname: yup.string().required().max(35),\n  password: yup.string().required(),\n  passwordConfirmation: yup.string().oneOf([yup.ref(\"password\"), null]),\n});\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation } from \"react-query\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useSnackbar } from \"notistack\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../LoadingButton\";\nimport {\n  ISignErrorResponse,\n  ISignInFormValues,\n  ISignSuccessResponse,\n} from \"./interfaces\";\nimport { signInSchema } from \"./schema\";\nimport {\n  setHeaders,\n  setCurrentUser,\n} from \"../../slices/currentUser/currentUser\";\n\ninterface SignInProps {\n  onSuccess: () => void;\n}\nexport const signIn = (\n  data: ISignInFormValues\n): Promise<AxiosResponse<ISignSuccessResponse>> =>\n  axios.post<ISignSuccessResponse>(\"/auth/sign_in\", data);\nconst SignIn: React.FC<SignInProps> = ({ onSuccess }: SignInProps) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, setValue, handleSubmit } = useForm({\n    resolver: yupResolver(signInSchema),\n  });\n  const handleSuccess = (res: AxiosResponse<ISignSuccessResponse>) => {\n    dispatch(setCurrentUser(res.data.data));\n    dispatch(setHeaders(res.headers));\n    enqueueSnackbar(intl.formatMessage({ id: \"signinSuccessful\" }), {\n      variant: \"success\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      },\n    });\n    onSuccess();\n  };\n  const onError = (err: AxiosError<ISignErrorResponse<string[]>>) => {\n    if (err.response) {\n      enqueueSnackbar(err.response.data.errors, {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n      });\n    } else {\n      enqueueSnackbar(String(err), {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n      });\n    }\n  };\n  const { isLoading, mutate } = useMutation(\n    (user: ISignInFormValues) => signIn(user),\n    { onSuccess: handleSuccess, onError }\n  );\n  // TODO: ONLY DEVELOPMENT\n  useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      setValue(\"email\", \"test@test.com\");\n      setValue(\"password\", \"password\");\n    }\n  }, [setValue]);\n  const onSubmit = (data: ISignInFormValues) => mutate(data);\n  return (\n    <Box m={3}>\n      <Typography variant=\"h4\" align=\"center\">\n        <FormattedMessage id=\"signin\" />\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ControlTextField\n          type=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          autoComplete=\"on\"\n          label={intl.formatMessage({ id: \"email\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <ControlTextField\n          type=\"password\"\n          name=\"password\"\n          label={intl.formatMessage({ id: \"password\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          defaultValue=\"\"\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <LoadingButton\n          type=\"submit\"\n          color=\"primary\"\n          loading={isLoading}\n          fullWidth\n        >\n          <FormattedMessage id=\"signin\" />\n        </LoadingButton>\n      </form>\n    </Box>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useHistory } from \"react-router-dom\";\nimport DefaultLayout from \"../../layout/Default\";\nimport SignInForm from \"../../ui/Form/SignIn\";\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n  const handleSuccess = () => history.push(\"/\");\n  return (\n    <DefaultLayout>\n      <Container maxWidth=\"xs\">\n        <Paper variant=\"outlined\">\n          <SignInForm onSuccess={handleSuccess} />\n        </Paper>\n      </Container>\n    </DefaultLayout>\n  );\n};\n\nexport default SignIn;\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useMutation } from \"react-query\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { useSnackbar } from \"notistack\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../LoadingButton\";\nimport {\n  ISignErrorResponse,\n  ISignSuccessResponse,\n  ISignUpFormValues,\n} from \"./interfaces\";\nimport { signUpSchema } from \"./schema\";\nimport {\n  setHeaders,\n  setCurrentUser,\n} from \"../../slices/currentUser/currentUser\";\n\ninterface SignUpProps {\n  onSuccess: () => void;\n}\ndeclare module \"axios\" {\n  export interface AxiosRequestConfig {\n    \"Key-inflection\"?: string;\n  }\n}\nexport const signUp = (\n  data: ISignUpFormValues\n): Promise<AxiosResponse<ISignSuccessResponse>> =>\n  axios.post<ISignSuccessResponse>(\"/auth\", data, {\n    \"Key-inflection\": \"camel\",\n  });\nconst SignUp: React.FC<SignUpProps> = ({ onSuccess }: SignUpProps) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { errors, control, handleSubmit } = useForm({\n    resolver: yupResolver(signUpSchema),\n  });\n  const handleSuccess = (res: AxiosResponse<ISignSuccessResponse>) => {\n    dispatch(setCurrentUser(res.data.data));\n    dispatch(setHeaders(res.headers));\n    enqueueSnackbar(intl.formatMessage({ id: \"signupSuccessful\" }), {\n      variant: \"success\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      },\n    });\n    onSuccess();\n  };\n  const onError = (\n    err: AxiosError<ISignErrorResponse<{ [\"full_messages\"]: string[] }>>\n  ) => {\n    if (err.response) {\n      err.response.data.errors.full_messages.forEach((message) =>\n        enqueueSnackbar(message, {\n          variant: \"error\",\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          },\n        })\n      );\n    } else {\n      enqueueSnackbar(String(err), {\n        variant: \"error\",\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n      });\n    }\n  };\n  const { isLoading, mutate } = useMutation(\n    (newUser: ISignUpFormValues) => signUp(newUser),\n    { onSuccess: handleSuccess, onError }\n  );\n  const onSubmit = (data: ISignUpFormValues) => mutate(data);\n  return (\n    <Box m={3}>\n      <Typography variant=\"h4\" align=\"center\">\n        <FormattedMessage id=\"signup\" />\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ControlTextField\n          name=\"nickname\"\n          defaultValue=\"\"\n          label={intl.formatMessage({ id: \"nickname\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <ControlTextField\n              name=\"familyname\"\n              defaultValue=\"\"\n              label={intl.formatMessage({ id: \"familyname\" })}\n              variant=\"outlined\"\n              control={control}\n              errors={errors}\n              disabled={isLoading}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <ControlTextField\n              name=\"givenname\"\n              defaultValue=\"\"\n              label={intl.formatMessage({ id: \"givenname\" })}\n              variant=\"outlined\"\n              control={control}\n              errors={errors}\n              disabled={isLoading}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n        <ControlTextField\n          type=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          label={intl.formatMessage({ id: \"email\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <ControlTextField\n          type=\"password\"\n          name=\"password\"\n          defaultValue=\"\"\n          label={intl.formatMessage({ id: \"password\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <ControlTextField\n          type=\"password\"\n          name=\"password_confirmation\"\n          defaultValue=\"\"\n          label={intl.formatMessage({ id: \"passwordConfirmation\" })}\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          disabled={isLoading}\n          fullWidth\n        />\n        <LoadingButton\n          type=\"submit\"\n          loading={isLoading}\n          color=\"primary\"\n          fullWidth\n        >\n          <FormattedMessage id=\"signup\" />\n        </LoadingButton>\n      </form>\n    </Box>\n  );\n};\n\nexport default SignUp;\n","import Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SignUpForm from \"../../ui/Form/SignUp\";\nimport DefaultLayout from \"../../layout/Default\";\n\nconst SignUp: React.FC = () => {\n  const history = useHistory();\n  const handleSuccess = () => history.push(\"/\");\n  return (\n    <DefaultLayout>\n      <Container maxWidth=\"xs\">\n        <Paper variant=\"outlined\">\n          <SignUpForm onSuccess={handleSuccess} />\n        </Paper>\n      </Container>\n    </DefaultLayout>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport CircularProgress, {\n  CircularProgressProps,\n} from \"@material-ui/core/CircularProgress\";\n\ninterface ILoadingCircularProgress extends CircularProgressProps {\n  loading: boolean;\n}\nconst LoadingCircularProgress: React.FC<ILoadingCircularProgress> = ({\n  loading,\n  ...props\n}: ILoadingCircularProgress) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <>{loading ? <CircularProgress {...props} /> : null}</>\n);\n\nexport default LoadingCircularProgress;\n","import React from \"react\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LoadingCircularProgress from \"../Loading/LoadingCircularProgress\";\n\ntype SearchTextFieldProps = TextFieldProps & {\n  loading: boolean;\n};\nconst SearchTextField: React.FC<SearchTextFieldProps> = ({\n  loading,\n  ...props\n}: SearchTextFieldProps) => {\n  return (\n    <TextField\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      variant=\"outlined\"\n      InputProps={{\n        startAdornment: <SearchIcon />,\n        endAdornment: (\n          <LoadingCircularProgress\n            color=\"inherit\"\n            size={20}\n            loading={loading}\n          />\n        ),\n      }}\n      fullWidth\n    />\n  );\n};\nexport default SearchTextField;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { useSelector } from \"react-redux\";\nimport ArtistsTable from \"../../components/Table/Artist\";\nimport SearchTextField from \"../../components/TextField/SearchTextField\";\nimport DefaultLayout from \"../../layout/Default\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useArtistsQuery } from \"../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [page, handlePage] = usePaginate();\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  const locale = useSelector(selectLocale);\n  const { isLoading, data } = useArtistsQuery({\n    page,\n    locale,\n    q: {\n      name_cont: debouncedInputValue,\n    },\n  });\n  // handlers\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputValue(e.target.value);\n  return (\n    <DefaultLayout>\n      <SearchTextField\n        onChange={handleChange}\n        loading={isLoading || isPending()}\n      />\n      <ArtistsTable\n        artists={data?.data}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Layout: React.FC<ButtonProps> = ({\n  children,\n  href,\n  startIcon,\n}: ButtonProps) => {\n  return (\n    <Button\n      startIcon={startIcon}\n      component={Link}\n      href={href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      disabled={!href}\n    >\n      {children}\n    </Button>\n  );\n};\nexport default Layout;\n","import SvgIcon from \"@material-ui/core/SvgIcon\";\n// import { Theme } from \"@material-ui/core/styles\";\n// import createStyles from \"@material-ui/core/styles/createStyles\";\n// import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport { SiItunes } from \"react-icons/si\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     colorPrimary: {\n//       color: theme.palette.itunes.main,\n//     },\n//   })\n// );\nconst Itunes: React.FC = () => {\n  // const classes = useStyles();\n  return (\n    <SvgIcon\n    // classes={{ root: classes.colorPrimary }}\n    >\n      <SiItunes size={23} />\n    </SvgIcon>\n  );\n};\nexport default Itunes;\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\nimport { FaYoutube } from \"react-icons/fa\";\n\nconst Itunes: React.FC = ({ color }: SvgIconProps) => {\n  return (\n    <SvgIcon color={color}>\n      <FaYoutube />\n    </SvgIcon>\n  );\n};\nexport default Itunes;\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nimport React from \"react\";\nimport { FaWikipediaW } from \"react-icons/fa\";\n\nconst Itunes: React.FC = ({ color }: SvgIconProps) => {\n  return (\n    <SvgIcon color={color}>\n      <FaWikipediaW />\n    </SvgIcon>\n  );\n};\nexport default Itunes;\n","import SvgIcon from \"@material-ui/core/SvgIcon\";\n// import { Theme } from \"@material-ui/core/styles\";\n// import createStyles from \"@material-ui/core/styles/createStyles\";\n// import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport { FaSpotify } from \"react-icons/fa\";\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     colorPrimary: {\n//       color: theme.palette.spotify.main,\n//     },\n//   })\n// );\nconst Itunes: React.FC = () => {\n  // const classes = useStyles();\n  return (\n    <SvgIcon\n    // classes={{ root: classes.colorPrimary }}\n    >\n      <FaSpotify size={24} />\n    </SvgIcon>\n  );\n};\nexport default Itunes;\n","import { useCallback, useState } from \"react\";\n\nconst useOpen = (): [boolean, () => void, () => void] => {\n  const [open, setOpen] = useState(false);\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n  return [open, onOpen, onClose];\n};\n\nexport default useOpen;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport { Box, LinearProgress } from \"@material-ui/core\";\nimport { FormattedMessage } from \"react-intl\";\nimport LinkButton from \"../Button/Link\";\nimport TwitterIcon from \"../Icon/Twitter\";\nimport ItunesIcon from \"../Icon/Itunes\";\nimport YoutubeIcon from \"../Icon/Youtube\";\nimport WikipediaIcon from \"../Icon/Wikipedia\";\nimport SpotifyIcon from \"../Icon/Spotify\";\nimport useOpen from \"../../hooks/useOpen\";\n\ninterface RenderAndLink<T> {\n  link?: T;\n  renderDialog: (open: boolean, handleClose: () => void) => React.ReactNode;\n}\ninterface LinkProps {\n  itunes?: RenderAndLink<string>;\n  twitter?: RenderAndLink<string | null>;\n  spotify?: RenderAndLink<string | null> & { type: string };\n  wikipedia?: RenderAndLink<number | null>;\n  musixmatch?: RenderAndLink<number>;\n  youtube?: {\n    type: \"v\" | \"channel\";\n    link?: string | null;\n    renderDialog: (open: boolean, handleClose: () => void) => React.ReactNode;\n  };\n  loading?: boolean;\n}\nconst Link: React.FC<LinkProps> = ({\n  itunes,\n  twitter,\n  spotify,\n  wikipedia,\n  musixmatch,\n  youtube,\n  loading,\n}: LinkProps) => {\n  const [itunesOpen, onItunesOpen, onItunesClose] = useOpen();\n  const [twitterOpen, onTwitterOpen, onTwitterClose] = useOpen();\n  const [spotifyOpen, onSpotifyOpen, onSpotifyClose] = useOpen();\n  const [wikipediaOpen, onWikipediaOpen, onWikipediaClose] = useOpen();\n  const [musixmatchOpen, onMusixmatchOpen, onMusixmatchClose] = useOpen();\n  const [youtubeOpen, onYoutubeOpen, onYoutubeClose] = useOpen();\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <FormattedMessage id=\"link\" />\n            </TableCell>\n            <TableCell>\n              <FormattedMessage id=\"edit\" />\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {twitter && (\n            <TableRow>\n              <TableCell>\n                <LinkButton\n                  startIcon={<TwitterIcon />}\n                  href={\n                    twitter.link\n                      ? `https://twitter.com/${twitter.link}`\n                      : undefined\n                  }\n                >\n                  twitter\n                </LinkButton>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onTwitterOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n                {twitter.renderDialog(twitterOpen, onTwitterClose)}\n              </TableCell>\n            </TableRow>\n          )}\n          {itunes && (\n            <TableRow>\n              <TableCell>\n                <LinkButton startIcon={<ItunesIcon />} href={itunes.link}>\n                  itunes\n                </LinkButton>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onItunesOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n\n                {itunes.renderDialog(itunesOpen, onItunesClose)}\n              </TableCell>\n            </TableRow>\n          )}\n          {spotify && (\n            <TableRow>\n              <TableCell>\n                <LinkButton\n                  startIcon={<SpotifyIcon />}\n                  href={\n                    spotify.link\n                      ? `https://open.spotify.com/${spotify.type}/${spotify.link}`\n                      : undefined\n                  }\n                >\n                  spotify\n                </LinkButton>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onSpotifyOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n\n                {spotify.renderDialog(spotifyOpen, onSpotifyClose)}\n              </TableCell>\n            </TableRow>\n          )}\n          {musixmatch && (\n            <TableRow>\n              <TableCell>\n                <Box display=\"flex\" alignItems=\"cneter\">\n                  <Box mr={1}>\n                    <TextFieldsIcon\n                      color={musixmatch.link ? undefined : \"action\"}\n                    />\n                  </Box>\n                  MUSIXMATCH\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onMusixmatchOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n\n                {musixmatch.renderDialog(musixmatchOpen, onMusixmatchClose)}\n              </TableCell>\n            </TableRow>\n          )}\n          {wikipedia && (\n            <TableRow>\n              <TableCell>\n                <LinkButton\n                  startIcon={<WikipediaIcon />}\n                  href={\n                    wikipedia.link\n                      ? `https://ja.wikipedia.org/?curid=${wikipedia.link}`\n                      : undefined\n                  }\n                >\n                  wikipedia\n                </LinkButton>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onWikipediaOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n\n                {wikipedia.renderDialog(wikipediaOpen, onWikipediaClose)}\n              </TableCell>\n            </TableRow>\n          )}\n          {youtube && (\n            <TableRow>\n              <TableCell>\n                <LinkButton\n                  startIcon={<YoutubeIcon />}\n                  href={youtube.link || undefined}\n                >\n                  youtube\n                </LinkButton>\n              </TableCell>\n              <TableCell>\n                <Button variant=\"text\" onClick={onYoutubeOpen}>\n                  <FormattedMessage id=\"edit\" />\n                </Button>\n\n                {youtube.renderDialog(youtubeOpen, onYoutubeClose)}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {loading && <LinearProgress />}\n    </TableContainer>\n  );\n};\nLink.defaultProps = {\n  itunes: undefined,\n  twitter: undefined,\n  spotify: undefined,\n  wikipedia: undefined,\n  musixmatch: undefined,\n  youtube: undefined,\n  loading: false,\n};\n\nLink.whyDidYouRender = true;\nexport default Link;\n","import React from \"react\";\nimport IconButton, { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Typography from \"@material-ui/core/Typography\";\n\ntype BookmarkProps = IconButtonProps & {\n  bookmarked: boolean;\n  count: number | undefined;\n  onCreate: () => void;\n  onDestroy: () => void;\n};\nconst Bookmark: React.FC<BookmarkProps> = ({\n  count,\n  bookmarked,\n  onCreate,\n  onDestroy,\n  ...props\n}: BookmarkProps) => {\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <IconButton {...props} onClick={bookmarked ? onDestroy : onCreate}>\n      {bookmarked ? (\n        <>\n          <Typography>{count || 0}</Typography>\n          <StarIcon color=\"error\" />\n        </>\n      ) : (\n        <>\n          <Typography>{count || 0}</Typography>\n          <StarBorderIcon color=\"error\" />\n        </>\n      )}\n    </IconButton>\n  );\n};\n\nexport default Bookmark;\n","import React, { MouseEvent } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { IItunesArtist } from \"../../../interfaces\";\n\ninterface IItunesArtistCard {\n  artist: IItunesArtist;\n}\nconst ItunesArtist: React.FC<IItunesArtistCard> = ({\n  artist: { artistName, artistLinkUrl },\n}: IItunesArtistCard) => {\n  const handleClick = (e: MouseEvent<HTMLAnchorElement>) => e.stopPropagation();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box flex=\"1\" overflow=\"hidden\">\n          <CardContent>\n            <Typography>{artistName}</Typography>\n            <Button\n              href={artistLinkUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              onClick={handleClick}\n            >\n              itunes\n            </Button>\n          </CardContent>\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ItunesArtist;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { useQuery, UseQueryOptions } from \"react-query\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport {\n  IItunesAlbum,\n  IItunesArtist,\n  IItunesMusic,\n  IMusixmatchTrack,\n  ISpotifyAlbum,\n  ISpotifyArtist,\n  ISpotifyTrack,\n  ISpotifyTypes,\n  IWikipedia,\n} from \"../../interfaces\";\nimport usePaginate from \"../../hooks/usePaginate\";\n\ntype TCardTypes =\n  | IItunesAlbum\n  | IItunesArtist\n  | IItunesMusic\n  | ISpotifyAlbum\n  | ISpotifyArtist\n  | ISpotifyTrack\n  | IMusixmatchTrack\n  | IWikipedia;\ninterface FnValue<TCard> {\n  data: TCard[] | undefined;\n  page?: number;\n  pageCount?: number;\n}\nexport interface LayoutProps<TCard> {\n  defaultValue?: string;\n  open: boolean;\n  title: string;\n  showSearchBar?: boolean;\n  useQueryArgs: {\n    key: string[];\n    fn: (\n      variables: {\n        term: string;\n        page: number;\n      },\n      spotifyType?: ISpotifyTypes,\n      spotifyAccessToken?: string\n    ) => Promise<FnValue<TCard>>;\n    options?: UseQueryOptions<FnValue<TCard>>;\n  };\n  children: (card: TCard, handleSelect: () => void) => React.ReactNode;\n  onClose: () => void;\n  onSelect: (selectedCard: TCard) => void;\n}\nexport type DialogProps<TCard extends TCardTypes> = Omit<\n  LayoutProps<TCard>,\n  \"useQueryArgs\" | \"title\" | \"children\"\n>;\n\nfunction Layout<TCard extends TCardTypes>({\n  defaultValue,\n  open,\n  title,\n  showSearchBar,\n  useQueryArgs,\n  children,\n  onClose,\n  onSelect,\n}: LayoutProps<TCard>): JSX.Element {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [page, handlePage] = usePaginate();\n  const [debouncedSearchValue, { isPending }] = useDebounce(searchValue, 1000);\n  const { onError } = useQuerySnackbar();\n  const searched = useQuery(\n    [...useQueryArgs.key, debouncedSearchValue, page],\n    () => useQueryArgs.fn({ term: debouncedSearchValue, page }),\n    {\n      enabled: !!debouncedSearchValue && !isPending() && open,\n      onError,\n      ...useQueryArgs.options,\n    }\n  );\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setSearchValue(e.target.value);\n  const handleSelect = (i: number): (() => void) => {\n    const select = () => {\n      onClose();\n      if (searched.data?.data) onSelect(searched.data.data[i]);\n    };\n    return select;\n  };\n  useEffect(() => {\n    if (defaultValue) setSearchValue(defaultValue);\n  }, [defaultValue]);\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Choose {title}</DialogTitle>\n      <Box p={3}>\n        {showSearchBar && (\n          <TextField\n            id=\"\"\n            label=\"\"\n            defaultValue={defaultValue}\n            value={searchValue}\n            variant=\"outlined\"\n            onChange={handleChange}\n            fullWidth\n          />\n        )}\n        {searched.isLoading && <LinearProgress />}\n        {searched.data?.data?.map((card, i) => {\n          return children(card, handleSelect(i));\n        })}\n        <Box display=\"flex\" justifyContent=\"center\">\n          {searched.data?.pageCount && (\n            <Pagination\n              page={page}\n              count={searched.data?.pageCount}\n              onChange={handlePage}\n            />\n          )}\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\nLayout.defaultProps = {\n  value: \"\",\n  showSearchBar: false,\n  onChange: undefined,\n};\nexport default Layout;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport ItunesArtistCard from \"../../Card/Itunes/Artist\";\nimport { IItunesArtist } from \"../../../interfaces\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport { searchItunesArtists } from \"../../../axios/itunes\";\n\nfunction Artist({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<IItunesArtist>): JSX.Element {\n  return (\n    <CardSearchDialogTest<IItunesArtist>\n      defaultValue={defaultValue}\n      title=\"Album\"\n      open={open}\n      showSearchBar={showSearchBar}\n      useQueryArgs={{\n        key: [queryKey.ITUNES, queryKey.ALBUMS],\n        fn: ({ term, page }) =>\n          searchItunesArtists(term, page).then((res) => ({\n            data: res.results,\n          })),\n      }}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.artistId} mb={2} onClick={handleSelect}>\n          <ItunesArtistCard artist={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\nexport default Artist;\n","import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport SpotifyIcon from \"../Icon/Spotify\";\n\nconst Spotify: React.FC = () => {\n  const handleClick = () => {\n    window.open(\n      `https://accounts.spotify.com/authorize?response_type=code&client_id=${\n        process.env.REACT_APP_SPOTIFY_KEY || \"\"\n      }&redirect_uri=${encodeURIComponent(\n        window.location.origin\n      )}&scope=${encodeURIComponent(\"user-read-email\")}`,\n      undefined,\n      \"top=100,left=100,width=500,height=700\"\n    );\n  };\n  return (\n    <Button\n      startIcon={<SpotifyIcon />}\n      component={Link}\n      onClick={handleClick}\n      rel=\"noopener noreferrer\"\n    >\n      Sign in Spotify\n    </Button>\n  );\n};\nexport default Spotify;\n","import axios from \"axios\";\nimport {\n  ISpotifySearchResponse,\n  ISpotifySearchTypes,\n  ISpotifyTrack,\n  ISpotifyTypes,\n} from \"../interfaces\";\n\nconst { REACT_APP_SPOTIFY_KEY, REACT_APP_SPOTIFY_SECRET_KEY } = process.env;\nconst authorization: string = btoa(\n  `${REACT_APP_SPOTIFY_KEY || \"\"}:${REACT_APP_SPOTIFY_SECRET_KEY || \"\"}`\n);\n\nexport const spotify = axios.create({\n  baseURL: \"https://api.spotify.com/v1/\",\n});\nexport const spotifyAccount = axios.create({\n  baseURL: \"https://accounts.spotify.com/api\",\n  headers: {\n    Authorization: `Basic ${authorization}`,\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n  },\n});\nexport function searchSpotify<T extends ISpotifyTypes>(\n  type: ISpotifySearchTypes,\n  q: string,\n  offset: number,\n  accessToken: string | undefined\n): Promise<ISpotifySearchResponse<T>> {\n  return spotify\n    .get<ISpotifySearchResponse<T>>(\"/search\", {\n      params: { q, type, offset: offset - 1 },\n      headers: {\n        ...{ Authorization: `Bearer ${accessToken || \"\"}` },\n      },\n    })\n    .then((res) => res.data);\n}\n\nexport const getSpotifyTrack = (\n  id: string | null | undefined,\n  accessToken: string | undefined\n): Promise<ISpotifyTrack> =>\n  spotify\n    .get<ISpotifyTrack>(`/tracks/${id || \"\"}`, {\n      headers: {\n        ...{ Authorization: `Bearer ${accessToken || \"\"}` },\n      },\n    })\n    .then((res) => res.data);\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SpotifyButton from \"../../Button/Spotify\";\nimport { remove, selectSpotifyToken, setToken } from \"../../../slices/spotify\";\nimport { DialogProps } from \"../CardSearchDialog\";\nimport { spotifyAccount } from \"../../../axios/spotify\";\nimport { ISpotifyToken, ISpotifyTypes } from \"../../../interfaces\";\n\ninterface LayoutProps<T extends ISpotifyTypes> extends DialogProps<T> {\n  children: (props: { handleError: (err: unknown) => void }) => React.ReactNode;\n}\nfunction Layout<T extends ISpotifyTypes>({\n  open,\n  onClose,\n  children,\n}: Omit<LayoutProps<T>, \"onSelect\">): JSX.Element {\n  const spotifyToken = useSelector(selectSpotifyToken);\n  const dispatch = useDispatch();\n  const handleError = () => {\n    dispatch(remove());\n  };\n  const getSpotifyCode = useCallback(\n    async (code: string) => {\n      const params = new URLSearchParams();\n      params.append(\"code\", code);\n      params.append(\"grant_type\", \"authorization_code\");\n      params.append(\"redirect_uri\", window.location.origin);\n      const res = await spotifyAccount.post<ISpotifyToken>(\"/token\", params);\n      dispatch(setToken(res.data));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    window.getSpotifyCode = getSpotifyCode;\n  }, [getSpotifyCode]);\n\n  if (!spotifyToken)\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>Spotify need SignIn</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <SpotifyButton />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"default\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  return <>{children({ handleError })}</>;\n}\n\nexport default Layout;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { ISpotifyArtist } from \"../../../interfaces\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface ISpotifyArtistCard {\n  artist: ISpotifyArtist;\n}\nconst SpotifyTrackCard: React.FC<ISpotifyArtistCard> = ({\n  artist,\n}: ISpotifyArtistCard) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box display=\"flex\" justifyItems=\"center\" alignItems=\"center\" m={1}>\n          <CardMedia image={artist.images[0].url} className={classes.media} />\n        </Box>\n        <CardContent>\n          <Typography noWrap>{artist.name}</Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {}\n          </Typography>\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n\nexport default SpotifyTrackCard;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport Layout from \"./Layout\";\nimport SpotifyArtistCard from \"../../Card/Spotify/Artist\";\nimport { selectSpotifyToken } from \"../../../slices/spotify\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport { searchSpotify } from \"../../../axios/spotify\";\nimport { ISpotifyArtist } from \"../../../interfaces\";\n\nfunction Track({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<ISpotifyArtist>): JSX.Element {\n  const spotifyToken = useSelector(selectSpotifyToken);\n  return (\n    <Layout open={open} onClose={onClose}>\n      {({ handleError }) => (\n        <CardSearchDialogTest<ISpotifyArtist>\n          defaultValue={defaultValue}\n          title=\"Spotify\"\n          open={open}\n          useQueryArgs={{\n            key: [queryKey.SPOTIFY, queryKey.ALBUMS],\n            fn: ({ term, page }) =>\n              searchSpotify<ISpotifyArtist>(\n                \"artist\",\n                term,\n                page,\n                spotifyToken?.access_token\n              ).then((res) => ({\n                data: res.artists.items,\n                page: res.artists.offset,\n                pageCount: Math.floor(res.artists.total / res.artists.limit),\n              })),\n            options: { onError: handleError },\n          }}\n          showSearchBar={showSearchBar}\n          onSelect={onSelect}\n          onClose={onClose}\n        >\n          {(card, handleSelect) => (\n            <Box key={card.id} mb={2} onClick={handleSelect}>\n              <SpotifyArtistCard artist={card} />\n            </Box>\n          )}\n        </CardSearchDialogTest>\n      )}\n    </Layout>\n  );\n}\n\nexport default Track;\n","//  http://example.com/:ID\n\nconst getIDfromURL = (url: string): string =>\n  new URL(url).pathname.replace(/\\//g, \"\");\n\nexport default getIDfromURL;\n","import Dialog, { DialogProps } from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport getIDfromURL from \"../../helpers/getIDfromURL\";\n\ntype TwitterProps = DialogProps & {\n  defaultValue: string | undefined;\n  loading: boolean;\n  onPatch: (value: string) => void;\n  onClose: () => void;\n};\nconst Twitter: React.FC<TwitterProps> = ({\n  loading,\n  open,\n  defaultValue,\n  onPatch,\n  onClose,\n}: TwitterProps) => {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(e.target.value);\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setValue(getIDfromURL(e.clipboardData.getData(\"text\")));\n  };\n  const handleClick = () => {\n    onClose();\n    onPatch(value);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Twitter</DialogTitle>\n      <Box p={3}>\n        <TextField\n          name=\"twitter\"\n          label=\"https://twitter.com\"\n          variant=\"outlined\"\n          value={value}\n          defaultValue={defaultValue}\n          onChange={handleChange}\n          onPaste={handlePaste}\n          fullWidth\n        />\n        <LoadingButton\n          fullWidth\n          color=\"primary\"\n          loading={loading}\n          disabled={!value}\n          onClick={handleClick}\n        >\n          UPDATE\n        </LoadingButton>\n      </Box>\n    </Dialog>\n  );\n};\nexport default Twitter;\n","import React from \"react\";\nimport { IWikipedia } from \"../../interfaces\";\n\ninterface WikipediaProps {\n  wikipedia: IWikipedia;\n}\nconst Wikipedia: React.FC<WikipediaProps> = ({\n  wikipedia: { title },\n}: WikipediaProps) => {\n  return (\n    <div>\n      <p>{title}</p>\n    </div>\n  );\n};\nexport default Wikipedia;\n","import axios from \"axios-jsonp-pro\";\nimport {\n  IWikipedia,\n  IWikipediaGet,\n  IWikipediaResponse,\n  IWikipediaSearch,\n} from \"../interfaces\";\nimport { store } from \"../store\";\n\nconst getLocale = () => store.getState().language.locale;\n\nexport const searchWikipedia = (\n  srsearch: string,\n  sroffset: number\n): Promise<IWikipediaResponse<IWikipediaSearch>> =>\n  axios.jsonp<null, IWikipediaResponse<IWikipediaSearch>>(\n    `https://${getLocale()}.wikipedia.org/w/api.php`,\n    {\n      params: {\n        format: \"json\",\n        action: \"query\",\n        list: \"search\",\n        srsearch,\n        sroffset,\n      },\n    }\n  );\nexport const getWikipedia = (\n  pageid: number | undefined | null\n): Promise<IWikipedia> =>\n  axios\n    .jsonp<null, IWikipediaResponse<IWikipediaGet>>(\n      `https://${getLocale()}.wikipedia.org/w/api.php`,\n      {\n        params: {\n          format: \"json\",\n          action: \"query\",\n          prop: \"extracts\",\n          explaintext: true,\n          exintro: true,\n          pageids: pageid,\n        },\n      }\n    )\n    .then((res) => res.query.pages[pageid || 0]);\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport CardSearchDialogTest, { DialogProps } from \"./CardSearchDialog\";\nimport WikipediaCard from \"../Card/Wikipedia\";\nimport { IWikipedia } from \"../../interfaces\";\nimport queryKey from \"../../constants/queryKey.json\";\nimport { searchWikipedia } from \"../../axios/wikipedia\";\n\nfunction Wikipedia({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<IWikipedia>): JSX.Element {\n  return (\n    <CardSearchDialogTest<IWikipedia>\n      defaultValue={defaultValue}\n      title=\"Wikipedia\"\n      open={open}\n      showSearchBar={showSearchBar}\n      useQueryArgs={{\n        key: [queryKey.WIKIPEDIA],\n        fn: ({ term, page }) =>\n          searchWikipedia(term, page).then((res) => ({\n            data: res.query.search,\n            pageCount: res.query.search.length\n              ? Math.floor(\n                  res.query.searchinfo.totalhits / res.continue.sroffset\n                )\n              : 1,\n          })),\n      }}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.pageid} mb={2} onClick={handleSelect}>\n          <WikipediaCard wikipedia={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\n\nexport default Wikipedia;\n","import React from \"react\";\nimport { AxiosResponse } from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UnpackNestedValue, useForm } from \"react-hook-form\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport { IAlbumParams, IArtistParams, IMusicParams } from \"../../axios/axios\";\nimport ControlTextField from \"../ControlTextField/ControlTextField\";\nimport LoadingCircularProgress from \"../Loading/LoadingCircularProgress\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport { IAlbum, IArtist, IMusic } from \"../../interfaces\";\nimport useOpen from \"../../hooks/useOpen\";\nimport { setHeaders } from \"../../slices/currentUser/currentUser\";\nimport { selectLocale } from \"../../slices/language\";\n\ninterface TranslateProps<IModel, IModelParams> {\n  queryKey: string;\n  name: string;\n  inputLabel: string;\n  buttonLabel: string;\n  patchFn: (id: number, params: IModelParams) => Promise<AxiosResponse<IModel>>;\n}\n\nfunction Translate<\n  IModel extends IAlbum | IArtist | IMusic,\n  IModelParams extends IAlbumParams | IArtistParams | IMusicParams\n>({\n  queryKey,\n  name,\n  inputLabel,\n  buttonLabel,\n  patchFn,\n}: TranslateProps<IModel, IModelParams>): JSX.Element {\n  const [open, handleOpen, handleClose] = useOpen();\n  const { onError } = useQuerySnackbar();\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  // react-hook-form\n  const { errors, control, handleSubmit } = useForm();\n  // react-query\n  const queryClient = useQueryClient();\n  const onSuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IModel | undefined>(\n      [queryKey, id, locale],\n      (prev) => prev && { ...prev }\n    );\n  };\n  const updateMutation = useMutation(\n    (data: IModelParams) => patchFn(id, data),\n    {\n      onSuccess,\n      onError,\n    }\n  );\n  const onSubmit = (data: UnpackNestedValue<IModelParams>) =>\n    updateMutation.mutate(data as IModelParams);\n  return (\n    <>\n      <IconButton onClick={handleOpen}>\n        <TranslateIcon />\n      </IconButton>\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle>Translate</DialogTitle>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent>\n            <ControlTextField\n              name={name}\n              defaultValue=\"\"\n              label={inputLabel}\n              variant=\"outlined\"\n              control={control}\n              errors={errors}\n              disabled={updateMutation.isLoading}\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <LoadingCircularProgress\n                    color=\"inherit\"\n                    size={20}\n                    loading={updateMutation.isLoading}\n                  />\n                ),\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <LoadingButton\n              type=\"submit\"\n              color=\"primary\"\n              disabled={!name}\n              loading={updateMutation.isLoading}\n              fullWidth\n            >\n              {buttonLabel}\n            </LoadingButton>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\nexport default Translate;\n","import Dialog, { DialogProps } from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LoadingButton from \"../../ui/LoadingButton\";\n\ntype YoutubeProps = DialogProps & {\n  id: string;\n  loading: boolean;\n  onPatch: (value: string) => void;\n  onClose: () => void;\n};\nconst Youtube: React.FC<YoutubeProps> = ({\n  id,\n  loading,\n  open,\n  onPatch,\n  onClose,\n}: YoutubeProps) => {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setValue(e.target.value);\n  const handleClick = () => {\n    onClose();\n    onPatch(value);\n  };\n  const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setValue(e.clipboardData.getData(\"text\"));\n  };\n  useEffect(() => {\n    if (id) setValue(id);\n  }, [id]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Youtube</DialogTitle>\n      <Box p={3}>\n        <TextField\n          name=\"youtube\"\n          label=\"Full URL\"\n          variant=\"outlined\"\n          value={value}\n          onChange={handleChange}\n          onPaste={handlePaste}\n          fullWidth\n        />\n        <LoadingButton\n          fullWidth\n          color=\"primary\"\n          loading={loading}\n          disabled={!value}\n          onClick={handleClick}\n        >\n          UPDATE\n        </LoadingButton>\n      </Box>\n    </Dialog>\n  );\n};\nexport default Youtube;\n","import axios, { AxiosResponse } from \"axios\";\nimport {\n  IAlbum,\n  IAlbumBookmark,\n  IAlbumLink,\n  IAlbumMusic,\n  IArtist,\n  IArtistBookmark,\n  IArtistLink,\n  IBand,\n  IBandBookmark,\n  IBandLink,\n  IContact,\n  IIssue,\n  IMusic,\n  IMusicBookmark,\n  IMusicLink,\n  IUser,\n  IUserLink,\n  IUserRelationship,\n  INotification,\n} from \"../interfaces\";\nimport routes from \"../constants/routes.json\";\nimport baseURL from \"../constants/baseURL\";\nimport { store } from \"../store\";\n\naxios.defaults.baseURL = baseURL;\nconst getLocale = () => store.getState().language.locale;\nconst getHeaders = () => store.getState().currentUser.headers;\n\nexport interface IMusicParams {\n  title: string;\n  [\"link_attributes\"]?: Omit<IMusicLink, \"id\">;\n}\nexport interface IAlbumParams {\n  title: string;\n  [\"link_attributes\"]?: Omit<IAlbumLink, \"id\">;\n}\nexport interface IBandParams {\n  name: string;\n  [\"link_attributes\"]?: Omit<IBandLink, \"id\">;\n}\nexport interface IArtistParams {\n  name: string;\n  [\"link_attributes\"]?: Omit<IArtistLink, \"id\">;\n}\nexport interface IUserParams {\n  email: string;\n  nickname: string;\n  familyname: string;\n  givenname: string;\n  introduction: string | null;\n}\nexport const patchUserNotification = (\n  id: number,\n  userId: number | undefined\n): Promise<AxiosResponse<INotification>> =>\n  axios.patch<INotification>(\n    `${routes.USERS}/${userId || \"undefined\"}/notifications/${id}`,\n    undefined,\n    getHeaders()\n  );\n\nexport const patchUser = (\n  id: number | undefined,\n  data: IUserParams\n): Promise<AxiosResponse<IUser>> =>\n  axios.patch<IUser>(\n    `${routes.USERS}/${id || \"undefined\"}`,\n    data,\n    getHeaders()\n  );\n\nexport const deleteUser = (id: number): Promise<AxiosResponse> =>\n  axios.delete(`/users/${id}`, getHeaders());\nexport const postUserRelationship = (\n  userId: number\n): Promise<AxiosResponse<IUserRelationship>> =>\n  axios.post(\n    `${routes.USERS}/${userId}${routes.RELATIONSHIPS}`,\n    undefined,\n    getHeaders()\n  );\nexport const deleteUserRelationship = (\n  userId: number,\n  followedId: number | undefined\n): Promise<AxiosResponse> =>\n  axios.delete(\n    `${routes.USERS}/${userId}${routes.RELATIONSHIPS}/${\n      followedId || \"undefined\"\n    }`,\n    getHeaders()\n  );\n\nexport const postMusic = (\n  userId: number | undefined,\n  music: IMusicParams\n): Promise<AxiosResponse<IMusic>> =>\n  axios.post<IMusic>(\n    `${routes.USERS}/${userId || \"undefined\"}${routes.MUSICS}`,\n    { music, locale: getLocale() },\n    getHeaders()\n  );\nexport const patchMusic =\n  (userId: number | undefined) =>\n  (musicId: number, music: IMusicParams): Promise<AxiosResponse<IMusic>> =>\n    axios.patch<IMusic>(\n      `${routes.USERS}/${userId || \"undefined\"}${routes.MUSICS}/${musicId}`,\n      { music, locale: getLocale() },\n      getHeaders()\n    );\nexport const deleteMusic = (\n  userId: number,\n  musicId: number\n): Promise<AxiosResponse<IMusic>> =>\n  axios.delete(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}`,\n    getHeaders()\n  );\n\nexport const postAlbum = (\n  album: IAlbumParams\n): Promise<AxiosResponse<IAlbum>> =>\n  axios.post<IAlbum>(\n    routes.ALBUMS,\n    { album, locale: getLocale() },\n    getHeaders()\n  );\nexport const patchAlbum = (\n  albumId: number,\n  album: IAlbumParams\n): Promise<AxiosResponse<IAlbum>> =>\n  axios.patch<IAlbum>(\n    `${routes.ALBUMS}/${albumId}`,\n    {\n      album,\n      locale: getLocale(),\n    },\n    getHeaders()\n  );\nexport const deleteAlbum = (albumId: number): Promise<AxiosResponse<IAlbum>> =>\n  axios.delete(`${routes.ALBUMS}/${albumId}`, getHeaders());\n\nexport const postBand = (band: IBandParams): Promise<AxiosResponse<IBand>> =>\n  axios.post<IBand>(routes.BANDS, { band, locale: getLocale() }, getHeaders());\nexport const patchBand = (\n  bandId: number,\n  band: IBandParams\n): Promise<AxiosResponse<IBand>> =>\n  axios.patch<IBand>(\n    `${routes.BANDS}/${bandId}`,\n    {\n      band,\n      locale: getLocale(),\n    },\n    getHeaders()\n  );\nexport const deleteBand = (bandId: number): Promise<AxiosResponse<IBand>> =>\n  axios.delete(`${routes.BANDS}/${bandId}`, getHeaders());\n\nexport const postArtist = (\n  artist: IArtistParams\n): Promise<AxiosResponse<IArtist>> =>\n  axios.post<IArtist>(\n    routes.ARTISTS,\n    { artist, locale: getLocale() },\n    getHeaders()\n  );\nexport const patchArtist = (\n  artistId: number,\n  artist: IArtistParams\n): Promise<AxiosResponse<IArtist>> =>\n  axios.patch<IArtist>(\n    `${routes.ARTISTS}/${artistId}`,\n    {\n      artist,\n      locale: getLocale(),\n    },\n    getHeaders()\n  );\nexport const deleteArtist = (\n  artistId: number\n): Promise<AxiosResponse<IArtist>> =>\n  axios.delete(`${routes.ARTISTS}/${artistId}`, getHeaders());\n\nexport const postIssue = (\n  userId: number,\n  musicId: number,\n  newIssue: Omit<IIssue, \"id\">\n): Promise<AxiosResponse<IIssue>> =>\n  axios.post(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.ISSUES}`,\n    newIssue,\n    getHeaders()\n  );\n\nexport const postAlbumMusic = (\n  userId: number,\n  musicId: number,\n  newAlbum: Omit<IAlbum, \"id\">\n): Promise<AxiosResponse<IAlbumMusic>> =>\n  axios.post<IAlbumMusic>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.ALBUMS}`,\n    newAlbum,\n    {\n      ...getHeaders(),\n      \"Key-inflection\": \"camel\",\n    }\n  );\nexport const deleteAlbumMusic = (\n  userId: number,\n  musicId: number,\n  albumId: number\n): Promise<AxiosResponse<IAlbumMusic>> =>\n  axios.delete<IAlbumMusic>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.ALBUMS}/${albumId}`,\n    getHeaders()\n  );\n\nexport const postLyristMusic = (\n  userId: number,\n  musicId: number,\n  newLyrist: IArtist\n): Promise<AxiosResponse<IArtist>> =>\n  axios.post<IArtist>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.LYRISTS}`,\n    newLyrist,\n    getHeaders()\n  );\nexport const deleteLyristMusic = (\n  userId: number,\n  musicId: number,\n  lyristId: number\n): Promise<AxiosResponse<IArtist>> =>\n  axios.delete<IArtist>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.LYRISTS}/${lyristId}`,\n    getHeaders()\n  );\n\nexport const postComposerMusic = (\n  userId: number,\n  musicId: number,\n  newComposer: IArtist\n): Promise<AxiosResponse<IArtist>> =>\n  axios.post<IArtist>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.COMPOSERS}`,\n    newComposer,\n    getHeaders()\n  );\nexport const deleteComposerMusic = (\n  userId: number,\n  musicId: number,\n  composerId: number\n): Promise<AxiosResponse<IArtist>> =>\n  axios.delete<IArtist>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.COMPOSERS}/${composerId}`,\n    getHeaders()\n  );\n\nexport const postMusicBookmark = (\n  userId: number,\n  musicId: number\n): Promise<AxiosResponse<IMusicBookmark>> =>\n  axios.post<IMusicBookmark>(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.BOOKMARKS}`,\n    undefined,\n    getHeaders()\n  );\nexport const deleteMusicBookmark = (\n  userId: number,\n  musicId: number,\n  bookmarkId: number | undefined\n): Promise<AxiosResponse<IMusicBookmark>> =>\n  axios.delete(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.BOOKMARKS}/${\n      bookmarkId || \"undefined\"\n    }`,\n    getHeaders()\n  );\nexport const postBandBookmark = (\n  bandId: number\n): Promise<AxiosResponse<IBandBookmark>> =>\n  axios.post<IBandBookmark>(\n    `${routes.BANDS}/${bandId}${routes.BOOKMARKS}`,\n    undefined,\n    getHeaders()\n  );\nexport const deleteBandBookmark = (\n  bandId: number,\n  bookmarkId: number | undefined\n): Promise<AxiosResponse<IBandBookmark>> =>\n  axios.delete(\n    `${routes.BANDS}/${bandId}${routes.BOOKMARKS}/${bookmarkId || \"undefined\"}`,\n    getHeaders()\n  );\nexport const postArtistBookmark = (\n  artistId: number\n): Promise<AxiosResponse<IArtistBookmark>> =>\n  axios.post<IBandBookmark>(\n    `${routes.ARTISTS}/${artistId}${routes.BOOKMARKS}`,\n    undefined,\n    getHeaders()\n  );\nexport const deleteArtistBookmark = (\n  artistId: number,\n  bookmarkId: number | undefined\n): Promise<AxiosResponse<IArtistBookmark>> =>\n  axios.delete(\n    `${routes.ARTISTS}/${artistId}${routes.BOOKMARKS}/${\n      bookmarkId || \"undefined\"\n    }`,\n    getHeaders()\n  );\nexport const postAlbumBookmark = (\n  albumId: number\n): Promise<AxiosResponse<IAlbumBookmark>> =>\n  axios.post<IBandBookmark>(\n    `${routes.ALBUMS}/${albumId}${routes.BOOKMARKS}`,\n    undefined,\n    getHeaders()\n  );\nexport const deleteAlbumBookmark = (\n  albumId: number,\n  bookmarkId: number | undefined\n): Promise<AxiosResponse<IAlbumBookmark>> =>\n  axios.delete(\n    `${routes.ALBUMS}/${albumId}${routes.BOOKMARKS}/${\n      bookmarkId || \"undefined\"\n    }`,\n    getHeaders()\n  );\n\nexport const patchMusicLink = (\n  userId: number,\n  musicId: number,\n  linkId: number | undefined,\n  link: Partial<Omit<IMusicLink, \"id\">>\n): Promise<AxiosResponse<IMusicLink>> =>\n  axios.patch(\n    `${routes.USERS}/${userId}${routes.MUSICS}/${musicId}${routes.LINKS}/${\n      linkId || \"undefined\"\n    }`,\n    link,\n    {\n      ...getHeaders(),\n    }\n  );\nexport const patchBandLink = (\n  bandId: number,\n  linkId: number | undefined,\n  link: Partial<Omit<IBandLink, \"id\">>\n): Promise<AxiosResponse<IBandLink>> =>\n  axios.patch(\n    `${routes.BANDS}/${bandId}${routes.LINKS}/${linkId || \"undefined\"}`,\n    { band_link: link, locale: getLocale() },\n    {\n      ...getHeaders(),\n    }\n  );\nexport const patchArtistLink = (\n  artistId: number,\n  linkId: number | undefined,\n  link: Partial<Omit<IArtistLink, \"id\">>\n): Promise<AxiosResponse<IArtistLink>> =>\n  axios.patch(\n    `${routes.ARTISTS}/${artistId}${routes.LINKS}/${linkId || \"undefined\"}`,\n    link,\n    {\n      ...getHeaders(),\n    }\n  );\nexport const patchAlbumLink = (\n  albumId: number,\n  linkId: number | undefined,\n  link: Partial<Omit<IArtistLink, \"id\">>\n): Promise<AxiosResponse<IAlbumLink>> =>\n  axios.patch(\n    `${routes.ALBUMS}/${albumId}${routes.LINKS}/${linkId || \"undefined\"}`,\n    link,\n    {\n      ...getHeaders(),\n    }\n  );\n\nexport const patchUserLink = (\n  userId: number,\n  linkId: number | undefined,\n  twitterId: string\n): Promise<AxiosResponse<IUserLink>> =>\n  axios.patch(\n    `${routes.USERS}/${userId}${routes.LINKS}/${linkId || \"undefined\"}`,\n    { twitter: twitterId },\n    {\n      ...getHeaders(),\n    }\n  );\nexport const postContact = (\n  newContact: IContact\n): Promise<AxiosResponse<IContact>> =>\n  axios.post<IContact>(routes.CONTACTS, newContact);\n","import { useQuery, UseQueryResult } from \"react-query\";\nimport { getWikipedia } from \"../axios/wikipedia\";\nimport useQuerySnackbar from \"../hooks/useQuerySnackbar\";\nimport { IWikipedia } from \"../interfaces\";\n\nexport const useWikipediaQuery = (\n  id: number | null | undefined\n): UseQueryResult<IWikipedia> => {\n  const { onError } = useQuerySnackbar();\n  return useQuery<IWikipedia>([\"wikipedia\", id], () => getWikipedia(id), {\n    enabled: !!id,\n    onError,\n  });\n};\nexport default null;\n","import { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport MusicsTable from \"../../components/Table/Music\";\nimport BandsTable from \"../../components/Table/Band\";\nimport AlbumsTable from \"../../components/Table/Album\";\nimport LinkTable from \"../../components/Table/Link\";\nimport BookmarkButton from \"../../components/Button/Icon/Bookmark\";\nimport ItunesArtistDialog from \"../../components/Dialog/Itunes/Artist\";\nimport SpotifyArtistDialog from \"../../components/Dialog/Spotify/Artist\";\nimport TwitterDialog from \"../../components/Dialog/Twitter\";\nimport WikipediaDialog from \"../../components/Dialog/Wikipedia\";\nimport TranslateDialog from \"../../components/Dialog/Translate\";\nimport YoutubeDialog from \"../../components/Dialog/Youtube\";\nimport DefaultLayout from \"../../layout/Default\";\nimport {\n  IArtist,\n  IArtistBookmark,\n  IArtistLink,\n  IItunesArtist,\n  ISpotifyArtist,\n  IWikipedia,\n} from \"../../interfaces\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../slices/currentUser/currentUser\";\nimport queryKey from \"../../constants/queryKey.json\";\nimport {\n  deleteArtistBookmark,\n  IArtistParams,\n  patchArtist,\n  patchArtistLink,\n  postArtistBookmark,\n} from \"../../axios/axios\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport {\n  useArtistAlbumsQuery,\n  useArtistMusicsQuery,\n  useArtistQuery,\n} from \"../../reactQuery/query\";\nimport { useWikipediaQuery } from \"../../reactQuery/wikipedia\";\nimport { useLookupItunesArtist } from \"../../reactQuery/itunes\";\n\nconst Show: React.FC = () => {\n  const [albumPage, handleAlbumPage] = usePaginate();\n  const [musicPage, handleMusicPage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const { onError } = useQuerySnackbar();\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IArtistBookmark>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IArtist | undefined>(\n      [\"artist\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: res.data,\n          bookmarksCount: prev.bookmarksCount + 1,\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IArtist | undefined>(\n      [\"artist\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: undefined,\n          bookmarksCount: prev.bookmarksCount - 1,\n        }\n    );\n  };\n  const handleUpdateSuccess = (res: AxiosResponse<IArtistLink>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IArtist | undefined>(\n      [\"artist\", id, locale],\n      (prev) => prev && { ...prev, link: res.data }\n    );\n  };\n  const artist = useArtistQuery({ id, locale, currentUserId: currentUser?.id });\n  const artistAlbums = useArtistAlbumsQuery({ id, page: albumPage, locale });\n  const artistMusics = useArtistMusicsQuery({ id, page: musicPage, locale });\n  const wikipedia = useWikipediaQuery(artist.data?.link.wikipedia);\n  const itunesArtist = useLookupItunesArtist({ id: artist.data?.link.itunes });\n  const createMutation = useMutation(() => postArtistBookmark(id), {\n    onSuccess: handleCreateSuccess,\n    onError,\n  });\n  const destroyMutation = useMutation(\n    () => deleteArtistBookmark(id, artist.data?.bookmark?.id),\n    {\n      onSuccess: handleDestroySuccess,\n      onError,\n    }\n  );\n  const updateLinkMutation = useMutation(\n    (link: Partial<Omit<IArtistLink, \"id\">>) =>\n      patchArtistLink(id, artist.data?.link.id, link),\n    { onSuccess: handleUpdateSuccess, onError }\n  );\n  // handlers\n  const handleCreateMutation = () => createMutation.mutate();\n  const handleDestroyMutation = () => destroyMutation.mutate();\n  const handleSelect = (selectedArtist: IItunesArtist) =>\n    updateLinkMutation.mutate({ itunes: selectedArtist.artistId });\n  const handleWikipediaSelect = (selectedWikipedia: IWikipedia) =>\n    updateLinkMutation.mutate({ wikipedia: selectedWikipedia.pageid });\n  const handleSpotifySelect = (selectedArtist: ISpotifyArtist) =>\n    updateLinkMutation.mutate({ spotify: selectedArtist.id });\n  const handleYoutubeSelect = (value: string) =>\n    updateLinkMutation.mutate({ youtube: value });\n  const handleSubmit = (value: string) =>\n    updateLinkMutation.mutate({ twitter: value });\n\n  return (\n    <DefaultLayout>\n      {artist.data?.localed && (\n        <Box mb={3}>\n          <Alert severity=\"warning\">\n            <AlertTitle>\n              <FormattedMessage id=\"untranslation\" />\n            </AlertTitle>\n            <strong>\n              <FormattedMessage id=\"pleaseTranslate\" />\n            </strong>\n          </Alert>\n        </Box>\n      )}\n      <Grid container>\n        <Grid item xs={10}>\n          <Typography variant=\"h5\">\n            <AccessibilityNewIcon />\n            {artist.data?.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={1}>\n          <BookmarkButton\n            count={artist.data?.bookmarksCount}\n            bookmarked={!!artist.data?.bookmark || false}\n            onCreate={handleCreateMutation}\n            onDestroy={handleDestroyMutation}\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <TranslateDialog<IArtist, IArtistParams>\n            queryKey={queryKey.ARTIST}\n            name=\"name\"\n            inputLabel={intl.formatMessage({ id: \"name\" })}\n            buttonLabel={intl.formatMessage({ id: \"translateName\" })}\n            patchFn={patchArtist}\n          />\n        </Grid>\n      </Grid>\n      <Box>\n        <Typography variant=\"body1\" color=\"initial\">\n          {wikipedia.data?.extract}\n        </Typography>\n      </Box>\n      <Box mb={3}>\n        <LinkTable\n          twitter={{\n            link: artist.data?.link.twitter,\n            renderDialog(open, handleClose) {\n              return (\n                <TwitterDialog\n                  defaultValue={artist.data?.link.twitter || undefined}\n                  open={open}\n                  loading={updateLinkMutation.isLoading}\n                  onClose={handleClose}\n                  onPatch={handleSubmit}\n                />\n              );\n            },\n          }}\n          itunes={{\n            link: itunesArtist.data ? itunesArtist.data[0].artistLinkUrl : \"\",\n            renderDialog(open, handleClose) {\n              return (\n                <ItunesArtistDialog\n                  defaultValue={artist.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          wikipedia={{\n            link: artist.data?.link.wikipedia,\n            renderDialog(open, handleClose) {\n              return (\n                <WikipediaDialog\n                  defaultValue={artist.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleWikipediaSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          spotify={{\n            type: \"artist\",\n            link: artist.data?.link.spotify,\n            renderDialog(open, handleClose) {\n              return (\n                <SpotifyArtistDialog\n                  defaultValue={artist.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSpotifySelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          youtube={{\n            type: \"channel\",\n            link: artist.data?.link.youtube,\n            renderDialog(open, handleClose) {\n              return (\n                <YoutubeDialog\n                  id={artist.data?.link.youtube || \"\"}\n                  open={open}\n                  onClose={handleClose}\n                  onPatch={handleYoutubeSelect}\n                  loading={updateLinkMutation.isLoading}\n                />\n              );\n            },\n          }}\n        />\n      </Box>\n      <Box mb={3}>\n        <BandsTable\n          bands={artist.data?.bands || []}\n          loading={artist.isLoading}\n        />\n      </Box>\n      <Box mb={3}>\n        <AlbumsTable\n          albums={artistAlbums.data?.data || []}\n          loading={artistAlbums.isLoading}\n          page={albumPage}\n          pageCount={artistAlbums.data?.pagination.totalPages}\n          onPage={handleAlbumPage}\n        />\n      </Box>\n      <MusicsTable\n        musics={artistMusics.data?.data || []}\n        loading={artistMusics.isLoading}\n        page={musicPage}\n        pageCount={artistMusics.data?.pagination.totalPages}\n        onPage={handleMusicPage}\n      />\n    </DefaultLayout>\n  );\n};\n\nexport default Show;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\n\nconst Itunes: React.FC<ButtonProps> = (props: ButtonProps) => {\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Button variant=\"contained\" color=\"secondary\" {...props}>\n      <FormattedMessage id=\"searchByItunes\" />\n    </Button>\n  );\n};\nexport default Itunes;\n","import Box from \"@material-ui/core/Box\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport React from \"react\";\nimport { IAlbum, IArtist, IBand, IMusic } from \"../../interfaces\";\n\ninterface ExistProps<T> {\n  data: T[] | undefined;\n  children: React.ReactChild;\n}\nfunction Exist<T extends IArtist | IAlbum | IBand | IMusic>({\n  data,\n  children,\n}: ExistProps<T>): JSX.Element {\n  if (!data?.length) return <></>;\n  return (\n    <>\n      <Box my={3}>\n        <Alert severity=\"warning\">\n          <AlertTitle>Warning</AlertTitle>\n          Already Existed — <strong>check it out!</strong>\n        </Alert>\n      </Box>\n      <Box mb={3}>{children}</Box>\n    </>\n  );\n}\nexport default Exist;\n","import { AxiosResponse } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDebounce } from \"use-debounce\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { IArtistParams, postArtist } from \"../../axios/axios\";\nimport SearchItunesButton from \"../../components/Button/Search/Itunes\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport LoadingCircularProgress from \"../../components/Loading/LoadingCircularProgress\";\nimport ArtistTable from \"../../components/Table/Artist\";\nimport ExistAlert from \"../../components/Alert/Exist\";\nimport ItunesArtistDialog from \"../../components/Dialog/Itunes/Artist\";\nimport DefaultLayout from \"../../layout/Default\";\nimport { setHeaders } from \"../../slices/currentUser/currentUser\";\nimport { IArtist, IItunesArtist } from \"../../interfaces\";\nimport useOpen from \"../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useArtistsQuery } from \"../../reactQuery/query\";\n\nconst New: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const [open, handleOpen, handleClose] = useOpen();\n  const [selectedItunesArtist, setSelectedItunesArtist] =\n    useState<IItunesArtist>();\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, setValue, register, watch, handleSubmit } =\n    useForm<IArtist>();\n  const { name } = watch();\n  // use-debounce\n  const [debouncedInputValue] = useDebounce(name, 1000);\n  // react-router-dom\n  const history = useHistory();\n  const match = useRouteMatch();\n  const route = match.url.replace(\"/new\", \"\");\n  const locale = useSelector(selectLocale);\n  // react-redux\n  const dispatch = useDispatch();\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IArtist>) => {\n    dispatch(setHeaders(res.headers));\n    history.push(`${route}/${res.data.id}`);\n    queryClient.setQueryData(\n      [\"artist\", res.data.id, { musicPage: 1, albumPage: 1 }],\n      res.data\n    );\n    if (selectedItunesArtist)\n      queryClient.setQueryData(\n        [\"itunes\", \"artist\", selectedItunesArtist.artistId],\n        selectedItunesArtist\n      );\n  };\n  const createMutation = useMutation(\n    (newArtist: IArtistParams) => postArtist(newArtist),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const searchQuery = useArtistsQuery({\n    page: 1,\n    locale,\n    q: {\n      name_cont: debouncedInputValue,\n    },\n    options: { enabled: !!debouncedInputValue, onError },\n  });\n  // handlers\n  const onSubmit = (data: IArtistParams) => createMutation.mutate(data);\n  const handleSelect = (selectedItem: IItunesArtist) =>\n    setSelectedItunesArtist(selectedItem);\n\n  useEffect(() => {\n    register(\"link_attributes.itunes\");\n    if (selectedItunesArtist) {\n      const { artistName, artistId } = selectedItunesArtist;\n      setValue(\"link_attributes.itunes\", artistId);\n      setValue(\"name\", artistName);\n    }\n  }, [register, selectedItunesArtist, setValue]);\n\n  return (\n    <DefaultLayout>\n      <Paper>\n        <Box p={3}>\n          <ControlTextField\n            name=\"name\"\n            defaultValue=\"\"\n            autoComplete=\"on\"\n            label={intl.formatMessage({ id: \"name\" })}\n            variant=\"outlined\"\n            control={control}\n            errors={errors}\n            disabled={createMutation.isLoading}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <LoadingCircularProgress\n                  color=\"inherit\"\n                  size={20}\n                  loading={searchQuery.isLoading}\n                />\n              ),\n            }}\n          />\n          <SearchItunesButton\n            onClick={handleOpen}\n            disabled={!name}\n            fullWidth\n            disableElevation\n          />\n          <ItunesArtistDialog\n            defaultValue={name}\n            open={open}\n            onClose={handleClose}\n            onSelect={handleSelect}\n          />\n          <ExistAlert<IArtist> data={searchQuery.data?.data}>\n            <ArtistTable\n              artists={searchQuery.data?.data}\n              page={page}\n              pageCount={searchQuery.data?.pagination.totalPages}\n              onPage={handlePage}\n              loading={searchQuery.isLoading}\n            />\n          </ExistAlert>\n          <LoadingButton\n            color=\"primary\"\n            disabled={!name}\n            loading={createMutation.isLoading}\n            onClick={handleSubmit(onSubmit)}\n            fullWidth\n          >\n            <FormattedMessage id=\"createArtist\" />\n          </LoadingButton>\n        </Box>\n      </Paper>\n    </DefaultLayout>\n  );\n};\n\nexport default New;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { useSelector } from \"react-redux\";\nimport MusicsTable from \"../../components/Table/Music\";\nimport DefaultLayout from \"../../layout/Default\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport SearchTextField from \"../../components/TextField/SearchTextField\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useMusicsQuery } from \"../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [page, handlePage] = usePaginate();\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  const locale = useSelector(selectLocale);\n  const { isLoading, data } = useMusicsQuery({\n    page,\n    locale,\n    q: {\n      title_cont: debouncedInputValue,\n    },\n  });\n  // handlers\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputValue(e.target.value);\n  return (\n    <DefaultLayout>\n      <SearchTextField\n        onChange={handleChange}\n        loading={isLoading || isPending()}\n      />\n      <MusicsTable\n        musics={data?.data || []}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\nexport default Index;\n","import React, { MouseEvent } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { IItunesMusic } from \"../../../interfaces\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface IItunesMusicCard {\n  music: IItunesMusic;\n}\nconst ItunesMusicCard: React.FC<IItunesMusicCard> = ({\n  music: {\n    artworkUrl100,\n    artistName,\n    collectionCensoredName,\n    trackCensoredName,\n    trackViewUrl,\n  },\n}: IItunesMusicCard) => {\n  const classes = useStyles();\n  const handleClick = (e: MouseEvent<HTMLAnchorElement>) => e.stopPropagation();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box display=\"flex\" justifyItems=\"center\" alignItems=\"center\" mx={1}>\n          <CardMedia image={artworkUrl100} className={classes.media} />\n        </Box>\n        <CardContent>\n          <Typography noWrap>{trackCensoredName}</Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {artistName}\n          </Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {collectionCensoredName}\n          </Typography>\n          <Button\n            href={trackViewUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            onClick={handleClick}\n          >\n            itunes\n          </Button>\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ItunesMusicCard;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport ItunesMusicCard from \"../../Card/Itunes/Music\";\nimport { IItunesMusic } from \"../../../interfaces\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport { searchItunesMusics } from \"../../../axios/itunes\";\nimport queryKey from \"../../../constants/queryKey.json\";\n\nfunction Music({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<IItunesMusic>): JSX.Element {\n  return (\n    <CardSearchDialogTest<IItunesMusic>\n      defaultValue={defaultValue}\n      title=\"Music\"\n      open={open}\n      showSearchBar={showSearchBar}\n      useQueryArgs={{\n        key: [queryKey.ITUNES, queryKey.MUSICS],\n        fn: ({ term, page }) =>\n          searchItunesMusics(term, page).then((res) => {\n            return {\n              data: res.results,\n            };\n          }),\n      }}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.trackId} mb={2} onClick={handleSelect}>\n          <ItunesMusicCard music={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\nexport default Music;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IMusixmatchTrack } from \"../../interfaces\";\n\ninterface IMusixmatchProps {\n  music: IMusixmatchTrack;\n}\nconst Musixmatch: React.FC<IMusixmatchProps> = ({\n  music: { track },\n}: IMusixmatchProps) => {\n  return (\n    <Card>\n      <CardContent>\n        <Typography>{track.track_name}</Typography>\n        <Typography>{track.album_name}</Typography>\n        <Typography>{track.artist_name}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Musixmatch;\n","import axios from \"axios-jsonp-pro\";\nimport {\n  IGetTrackLyric,\n  IMusixmatchResponse,\n  ISearchTrack,\n} from \"../interfaces\";\n\nexport const musixmatch = axios.create({\n  baseURL: \"https://api.musixmatch.com/ws/1.1\",\n  params: {\n    apikey: process.env.REACT_APP_MUSIXMATCH_KEY,\n  },\n});\nexport const searchTracks = (\n  query: string\n): Promise<IMusixmatchResponse<ISearchTrack>> =>\n  musixmatch.jsonp<null, IMusixmatchResponse<ISearchTrack>>(\"track.search\", {\n    params: { q_track: query },\n  });\nexport const getTrackLyric = (\n  trackId: number | null | undefined\n): Promise<IMusixmatchResponse<IGetTrackLyric>> =>\n  musixmatch.jsonp<null, IMusixmatchResponse<IGetTrackLyric>>(\n    \"track.lyrics.get\",\n    {\n      params: {\n        track_id: trackId,\n      },\n    }\n  );\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport CardSearchDialogTest, { DialogProps } from \"./CardSearchDialog\";\nimport { IMusixmatchTrack } from \"../../interfaces\";\nimport MusixmatchCard from \"../Card/Musixcmatch\";\nimport queryKey from \"../../constants/queryKey.json\";\nimport { searchTracks } from \"../../axios/musixmatch\";\n\nfunction Musixmatch({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<IMusixmatchTrack>): JSX.Element {\n  return (\n    <CardSearchDialogTest<IMusixmatchTrack>\n      defaultValue={defaultValue}\n      title=\"Musixmatch\"\n      open={open}\n      useQueryArgs={{\n        key: [queryKey.MUSIXMATCH],\n        fn: ({ term }) =>\n          searchTracks(term).then((res) => ({\n            data: res.message.body.track_list,\n          })),\n      }}\n      showSearchBar={showSearchBar}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.track.track_id} mb={2} onClick={handleSelect}>\n          <MusixmatchCard music={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\n\nexport default Musixmatch;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ISpotifyTrack } from \"../../../interfaces\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface ISpotifyTrackCard {\n  track: ISpotifyTrack;\n}\nconst SpotifyTrackCard: React.FC<ISpotifyTrackCard> = ({\n  track,\n}: ISpotifyTrackCard) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box display=\"flex\" justifyItems=\"center\" alignItems=\"center\" m={1}>\n          <CardMedia\n            image={track.album.images[0].url}\n            className={classes.media}\n          />\n        </Box>\n        <CardContent>\n          <Typography noWrap>{track.name}</Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {}\n          </Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {track.artists.map((artist) => artist.name)}\n          </Typography>\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n\nexport default SpotifyTrackCard;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport SpotifyTrackCard from \"../../Card/Spotify/Track\";\nimport Layout from \"./Layout\";\nimport { selectSpotifyToken } from \"../../../slices/spotify\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport { searchSpotify } from \"../../../axios/spotify\";\nimport { ISpotifyTrack } from \"../../../interfaces\";\n\nfunction Track({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<ISpotifyTrack>): JSX.Element {\n  const spotifyToken = useSelector(selectSpotifyToken);\n  return (\n    <Layout open={open} onClose={onClose}>\n      {({ handleError }) => (\n        <CardSearchDialogTest<ISpotifyTrack>\n          defaultValue={defaultValue}\n          title=\"Spotify\"\n          open={open}\n          useQueryArgs={{\n            key: [queryKey.SPOTIFY, queryKey.ALBUMS],\n            fn: ({ term, page }) =>\n              searchSpotify<ISpotifyTrack>(\n                \"track\",\n                term,\n                page,\n                spotifyToken?.access_token\n              ).then((res) => ({\n                data: res.tracks.items,\n                page: res.tracks.offset,\n                pageCount: Math.floor(res.tracks.total / res.tracks.limit),\n              })),\n            options: { onError: handleError },\n          }}\n          showSearchBar={showSearchBar}\n          onSelect={onSelect}\n          onClose={onClose}\n        >\n          {(card, handleSelect) => (\n            <Box key={card.id} mb={2} onClick={handleSelect}>\n              <SpotifyTrackCard track={card} />\n            </Box>\n          )}\n        </CardSearchDialogTest>\n      )}\n    </Layout>\n  );\n}\n\nexport default Track;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Autocomplete, { AutocompleteProps } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport useOpen from \"../../hooks/useOpen\";\n\ntype ControlAutocompleteTextFieldProps<T> = {\n  maxLength?: number;\n  onSelectOption?: (selectOption: T, options: T[]) => void;\n  onRemoveOption?: (removeOption: T, options: T[]) => void;\n  // material-ui\n  textFieldProps: TextFieldProps;\n  autocompleteProps: Omit<\n    AutocompleteProps<T, true, false, false>,\n    \"renderInput\"\n  >;\n};\n\nfunction ControlAutocompleteTextField<T>({\n  maxLength,\n  onSelectOption,\n  onRemoveOption,\n  textFieldProps,\n  autocompleteProps,\n}: ControlAutocompleteTextFieldProps<T>): JSX.Element {\n  const [disabled, setDisabled] = useState(false);\n  const [tags, setTags] = useState<T[]>([]);\n  const [open, onOpen, onClose] = useOpen();\n  // handlers\n  const handleChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: T | T[] | null,\n    reason: string\n  ) => {\n    if (!value || !Array.isArray(value)) return;\n    setDisabled(true);\n    switch (reason) {\n      case \"select-option\":\n        if (onSelectOption) onSelectOption(value[value.length - 1], value);\n        break;\n      case \"remove-option\": {\n        const removeTag = tags.filter((tag) => !value.includes(tag))[0];\n        if (onRemoveOption) onRemoveOption(removeTag, value);\n        break;\n      }\n      default:\n        break;\n    }\n    setDisabled(false);\n    setTags(value);\n  };\n  useEffect(() => {\n    setTags(autocompleteProps?.value || []);\n  }, [autocompleteProps.inputValue, autocompleteProps?.value]);\n  return (\n    <Autocomplete\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...autocompleteProps}\n      open={open}\n      disabled={disabled}\n      getOptionDisabled={() => (maxLength ? tags.length >= maxLength : false)}\n      noOptionsText=\"No Results\"\n      onChange={handleChange}\n      onOpen={onOpen}\n      onClose={onClose}\n      renderInput={(params) => {\n        return (\n          <TextField\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...params}\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...textFieldProps}\n            InputProps={{\n              ...textFieldProps.InputProps,\n              ...params.InputProps,\n              endAdornment: (\n                <>\n                  {autocompleteProps.loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </>\n              ),\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nControlAutocompleteTextField.defaultProps = {\n  onSelectOption: undefined,\n  onRemoveOption: undefined,\n  maxLength: undefined,\n};\n\nexport default ControlAutocompleteTextField;\n","import { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport { useIntl } from \"react-intl\";\nimport AutocompleteTextField from \"../../../../../../../../components/TextField/AutocompleteTextField\";\nimport { IArtist, IMusic } from \"../../../../../../../../interfaces\";\nimport queryKey from \"../../../../../../../../constants/queryKey.json\";\nimport { setHeaders } from \"../../../../../../../../slices/currentUser/currentUser\";\nimport useQuerySnackbar from \"../../../../../../../../hooks/useQuerySnackbar\";\nimport {\n  deleteComposerMusic,\n  postComposerMusic,\n} from \"../../../../../../../../axios/axios\";\nimport { selectLocale } from \"../../../../../../../../slices/language\";\nimport { useArtistsQuery } from \"../../../../../../../../reactQuery/query\";\n\ninterface MutateVariables {\n  option: IArtist;\n  options: IArtist[];\n}\nconst Composer: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const { onError } = useQuerySnackbar();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const params = useParams<{ userId: string; id: string }>();\n  const id = Number(params.id);\n  const userId = Number(params.userId);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const handleCreateSuccess = (\n    res: AxiosResponse<IArtist>,\n    { options }: MutateVariables\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          composers: options,\n        }\n    );\n  };\n  const handleDestroySuccess = (\n    res: AxiosResponse<IArtist>,\n    { options }: MutateVariables\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) => prev && { ...prev, composers: options }\n    );\n  };\n  const createMutation = useMutation(\n    ({ option }: MutateVariables) => postComposerMusic(userId, id, option),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const handleSelectOption = (option: IArtist, options: IArtist[]) =>\n    createMutation.mutate({ option, options });\n  const destroyMutation = useMutation(\n    ({ option }: MutateVariables) => deleteComposerMusic(userId, id, option.id),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const handleRemoveOption = (option: IArtist, options: IArtist[]) =>\n    destroyMutation.mutate({ option, options });\n  const composers = useArtistsQuery({\n    page: 1,\n    locale,\n    q: {\n      name_cont: debouncedInputValue,\n    },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const onInputChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: string\n  ) => setInputValue(value);\n  const getOptionSelected = (option: IArtist, value: IArtist) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IArtist) => option.name;\n  return (\n    <AutocompleteTextField<IArtist>\n      onSelectOption={handleSelectOption}\n      onRemoveOption={handleRemoveOption}\n      textFieldProps={{\n        label: intl.formatMessage({ id: \"composers\" }),\n        variant: \"outlined\",\n        margin: \"normal\",\n      }}\n      autocompleteProps={{\n        multiple: true,\n        value: music?.composers || [],\n        options: composers.data?.data || [],\n        loading:\n          createMutation.isLoading || destroyMutation.isLoading || isPending(),\n        getOptionSelected,\n        getOptionLabel,\n        onInputChange,\n      }}\n    />\n  );\n};\nexport default Composer;\n","import { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { useParams } from \"react-router-dom\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport AutocompleteTextField from \"../../../../../../../../components/TextField/AutocompleteTextField\";\nimport { IArtist, IMusic } from \"../../../../../../../../interfaces\";\nimport queryKey from \"../../../../../../../../constants/queryKey.json\";\nimport { setHeaders } from \"../../../../../../../../slices/currentUser/currentUser\";\nimport useQuerySnackbar from \"../../../../../../../../hooks/useQuerySnackbar\";\nimport {\n  deleteLyristMusic,\n  postLyristMusic,\n} from \"../../../../../../../../axios/axios\";\nimport { selectLocale } from \"../../../../../../../../slices/language\";\nimport { useArtistsQuery } from \"../../../../../../../../reactQuery/query\";\n\ninterface MutateVariables {\n  option: IArtist;\n  options: IArtist[];\n}\nconst Lyrist: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const { onError } = useQuerySnackbar();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const params = useParams<{ userId: string; id: string }>();\n  const id = Number(params.id);\n  const userId = Number(params.userId);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const handleCreateSuccess = (\n    res: AxiosResponse<IArtist>,\n    { options }: MutateVariables\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) => {\n        return (\n          prev && {\n            ...prev,\n            lyrists: options,\n          }\n        );\n      }\n    );\n  };\n  const handleDestroySuccess = (\n    res: AxiosResponse<IArtist>,\n    { options }: MutateVariables\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) => prev && { ...prev, lyrists: options }\n    );\n  };\n  const createMutation = useMutation(\n    ({ option }: MutateVariables) => postLyristMusic(userId, id, option),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const handleSelectOption = (option: IArtist, options: IArtist[]) =>\n    createMutation.mutate({ option, options });\n  const destroyMutation = useMutation(\n    ({ option }: MutateVariables) => deleteLyristMusic(userId, id, option.id),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const handleRemoveOption = (option: IArtist, options: IArtist[]) =>\n    destroyMutation.mutate({ option, options });\n  const lyrists = useArtistsQuery({\n    page: 1,\n    locale,\n    q: { name_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const onInputChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: string\n  ) => setInputValue(value);\n  const getOptionSelected = (option: IArtist, value: IArtist) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IArtist) => option.name;\n  return (\n    <AutocompleteTextField<IArtist>\n      onSelectOption={handleSelectOption}\n      onRemoveOption={handleRemoveOption}\n      textFieldProps={{\n        label: intl.formatMessage({ id: \"lyrists\" }),\n        variant: \"outlined\",\n        margin: \"normal\",\n      }}\n      autocompleteProps={{\n        multiple: true,\n        value: music?.lyrists || [],\n        options: lyrists.data?.data || [],\n        loading:\n          createMutation.isLoading || destroyMutation.isLoading || isPending(),\n        getOptionSelected,\n        getOptionLabel,\n        onInputChange,\n      }}\n    />\n  );\n};\nexport default Lyrist;\n","import axios, { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport AutocompleteTextField from \"../../../../../../../../components/TextField/AutocompleteTextField\";\nimport { IBand, IMusic } from \"../../../../../../../../interfaces\";\nimport routes from \"../../../../../../../../constants/routes.json\";\nimport queryKey from \"../../../../../../../../constants/queryKey.json\";\nimport {\n  selectHeaders,\n  setHeaders,\n} from \"../../../../../../../../slices/currentUser/currentUser\";\nimport useQuerySnackbar from \"../../../../../../../../hooks/useQuerySnackbar\";\nimport { selectLocale } from \"../../../../../../../../slices/language\";\nimport { useBandsQuery } from \"../../../../../../../../reactQuery/query\";\n\ninterface MutateVariables {\n  option: IBand;\n  options: IBand[];\n}\nconst Band: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const { onError } = useQuerySnackbar();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const headers = useSelector(selectHeaders);\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const handleCreateSuccess = (\n    res: AxiosResponse<IBand>,\n    { option }: MutateVariables\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          band: option,\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse<IBand>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) => prev && { ...prev, band: null }\n    );\n  };\n  const createMutation = useMutation(\n    ({ option }: MutateVariables) =>\n      axios.post<IBand>(match.url + routes.BANDS, option, headers),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const handleSelectOption = (option: IBand, options: IBand[]) =>\n    createMutation.mutate({ option, options });\n  const destroyMutation = useMutation(\n    ({ option }: MutateVariables) =>\n      axios.delete<IBand>(`${match.url + routes.BANDS}/${option.id}`, headers),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const handleRemoveOption = (option: IBand, options: IBand[]) =>\n    destroyMutation.mutate({ option, options });\n  const bands = useBandsQuery({\n    page: 1,\n    locale,\n    q: { name_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const onInputChange = (\n    e: ChangeEvent<Record<string, unknown>>,\n    value: string,\n    reason: string\n  ) => reason === \"input\" && setInputValue(value);\n  const getOptionSelected = (option: IBand, value: IBand) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IBand) => option.name;\n  return (\n    <AutocompleteTextField<IBand>\n      maxLength={1}\n      onSelectOption={handleSelectOption}\n      onRemoveOption={handleRemoveOption}\n      textFieldProps={{\n        label: intl.formatMessage({ id: \"band\" }),\n        variant: \"outlined\",\n        margin: \"normal\",\n      }}\n      autocompleteProps={{\n        multiple: true,\n        options: bands.data?.data || [],\n        value: music?.band ? [music.band] : [],\n        inputValue,\n        loading:\n          createMutation.isLoading || destroyMutation.isLoading || isPending(),\n        getOptionSelected,\n        getOptionLabel,\n        onInputChange,\n      }}\n    />\n  );\n};\nexport default Band;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\nimport ComposerAutocomplete from \"./Autocomplete/Composer\";\nimport LyristAutocomplete from \"./Autocomplete/Lyrist\";\nimport BandAutocomplete from \"./Autocomplete/Band\";\nimport useOpen from \"../../../../../../../hooks/useOpen\";\n\nconst Edit: React.FC = () => {\n  const [open, handleOpen, handleClose] = useOpen();\n  return (\n    <>\n      <Button onClick={handleOpen}>\n        <FormattedMessage id=\"edit\" />\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth>\n        <Container>\n          <Box mb={3}>\n            <DialogTitle>\n              <FormattedMessage id=\"editInfo\" />\n            </DialogTitle>\n            <ComposerAutocomplete />\n            <LyristAutocomplete />\n            <BandAutocomplete />\n          </Box>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Edit;\n","import React, { ChangeEvent } from \"react\";\nimport { Control, RegisterOptions, useController } from \"react-hook-form\";\nimport Select, { SelectProps } from \"@material-ui/core/Select\";\n\ntype ControlSelectProps = SelectProps & {\n  name: string;\n  control: Control;\n  rules?: RegisterOptions;\n};\n\nconst ControlSelect: React.FC<ControlSelectProps> = ({\n  name,\n  defaultValue,\n  onChange,\n  onKeyPress,\n  // react-hook-form props\n  control,\n  rules,\n  children,\n  ...props\n}: ControlSelectProps) => {\n  const {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    field: { ref, value, onChange: onChangeController },\n    meta: { invalid },\n  } = useController({ name, control, rules, defaultValue });\n  const handleChange = (\n    e: ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => {\n    if (onChange) onChange(e, child);\n    onChangeController(e.target.value);\n  };\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (onKeyPress) onKeyPress(e);\n  };\n\n  return (\n    <Select\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n      value={value as string}\n      inputRef={ref}\n      error={invalid}\n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n    >\n      {children}\n    </Select>\n  );\n};\n\nControlSelect.defaultProps = {\n  rules: {},\n};\n\nexport default ControlSelect;\n","import * as yup from \"yup\";\n\nconst addRoleSchema = yup.object().shape({\n  artist_id: yup.number().required(),\n  role: yup.number().required(),\n});\nconst userSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  nickname: yup.string().required().min(4).max(30),\n  familyname: yup.string().required().max(35),\n  givenname: yup.string().required().max(35),\n  introduction: yup.string(),\n});\nconst issueSchema = yup.object().shape({\n  title: yup.string().required(),\n  description: yup.string().required(),\n});\nconst contactSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  description: yup.string().required(),\n});\n\nexport { issueSchema, addRoleSchema, userSchema, contactSchema };\n","import axios, { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport AutocompleteTextField from \"../../../../../../components/TextField/AutocompleteTextField\";\nimport ControlSelect from \"../../../../../../components/ControlSelect\";\nimport LoadingButton from \"../../../../../../ui/LoadingButton\";\nimport { IArtist, IMusic, IArtistMusic } from \"../../../../../../interfaces\";\nimport { addRoleSchema } from \"../../../../../../schema\";\nimport {\n  selectHeaders,\n  setHeaders,\n} from \"../../../../../../slices/currentUser/currentUser\";\nimport useOpen from \"../../../../../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../../../../../hooks/useQuerySnackbar\";\nimport routes from \"../../../../../../constants/routes.json\";\nimport queryKey from \"../../../../../../constants/queryKey.json\";\nimport { selectLocale } from \"../../../../../../slices/language\";\nimport { useArtistsQuery } from \"../../../../../../reactQuery/query\";\n\nconst Artist: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [open, handleOpen, handleClose] = useOpen();\n  // use-debounce\n  const [debouncedInputValue] = useDebounce(inputValue, 1000);\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { control, handleSubmit, setValue, register } = useForm<IArtistMusic>({\n    defaultValues: { artist_id: undefined },\n    resolver: yupResolver(addRoleSchema),\n  });\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-router-dom\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  const route = match.url + routes.ARTISTS;\n  // react-redux\n  const dispatch = useDispatch();\n  const headers = useSelector(selectHeaders);\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const handleSelectOption = (option: IArtist) =>\n    setValue(\"artist_id\", option.id);\n  const handleRemoveOption = () => setValue(\"artist_id\", \"\");\n  const handleCreateSuccess = (res: AxiosResponse<IArtistMusic>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artistMusics: [...(prev.artistMusics || []), res.data],\n        }\n    );\n  };\n  const handleDestroySuccess = (\n    res: AxiosResponse<IArtistMusic>,\n    artist: IArtistMusic\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artistMusics:\n            prev.artistMusics &&\n            prev.artistMusics.filter((prevArtist) => prevArtist !== artist),\n        }\n    );\n  };\n  const createRoleMutation = useMutation(\n    (newRole: IArtistMusic) =>\n      axios.post<IArtistMusic>(route, newRole, headers),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const destroyRoleMutation = useMutation(\n    (role: IArtistMusic) =>\n      axios.delete<IArtistMusic>(`${route}/${role.id}`, headers),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const artists = useArtistsQuery({\n    page: 1,\n    locale,\n    q: { name_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const onInputChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: string,\n    reason: string\n  ) => reason === \"input\" && setInputValue(value);\n  const onSubmit = (data: IArtistMusic) => createRoleMutation.mutate(data);\n  const getOptionSelected = (option: IArtist, value: IArtist) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IArtist) => option.name;\n  useEffect(() => {\n    register(\"artist_id\");\n  }, [register]);\n  return (\n    <>\n      <Button onClick={handleOpen}>\n        <FormattedMessage id=\"edit\" />\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth>\n        <DialogTitle>\n          <FormattedMessage id=\"role\" />\n        </DialogTitle>\n        <Container>\n          <Box mb={3}>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <FormattedMessage id=\"role\" />\n                    </TableCell>\n                    <TableCell>\n                      <FormattedMessage id=\"artist\" />\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <FormattedMessage id=\"delete\" />\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {music?.artistMusics?.map((artistMusic) => {\n                    const handleClick = () =>\n                      destroyRoleMutation.mutate(artistMusic);\n                    return (\n                      <TableRow key={artistMusic.id}>\n                        <TableCell>\n                          <Link component={RouterLink} to=\"/\">\n                            {artistMusic.role}\n                          </Link>\n                        </TableCell>\n                        <TableCell>\n                          <Link\n                            component={RouterLink}\n                            to={`${routes.ARTISTS}/${artistMusic.artist.id}`}\n                          >\n                            {artistMusic.artist.name}\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton onClick={handleClick}>\n                            <CloseIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n          <Box mb={3}>\n            <Grid container spacing={1}>\n              <Grid item xs={3}>\n                <ControlSelect\n                  defaultValue={0}\n                  control={control}\n                  name=\"role\"\n                  variant=\"outlined\"\n                  fullWidth\n                >\n                  <MenuItem value={0}>Vocal</MenuItem>\n                  <MenuItem value={1}>Guitar</MenuItem>\n                  <MenuItem value={2}>Base</MenuItem>\n                  <MenuItem value={3}>Drum</MenuItem>\n                  <MenuItem value={4}>Vocal&Guitar</MenuItem>\n                  <MenuItem value={5}>Vocal&Base</MenuItem>\n                </ControlSelect>\n              </Grid>\n              <Grid item xs={9}>\n                <AutocompleteTextField<IArtist>\n                  maxLength={1}\n                  onSelectOption={handleSelectOption}\n                  onRemoveOption={handleRemoveOption}\n                  textFieldProps={{\n                    label: intl.formatMessage({ id: \"artist\" }),\n                    variant: \"outlined\",\n                  }}\n                  autocompleteProps={{\n                    multiple: true,\n                    options: artists.data?.data || [],\n                    inputValue,\n                    getOptionSelected,\n                    getOptionLabel,\n                    onInputChange,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mb={3}>\n            <LoadingButton\n              color=\"primary\"\n              loading={createRoleMutation.isLoading}\n              onClick={handleSubmit(onSubmit)}\n              fullWidth\n            >\n              <FormattedMessage id=\"addArtist\" />\n            </LoadingButton>\n          </Box>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Artist;\n","import { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport LoadingButton from \"../../../../../../ui/LoadingButton\";\nimport AutocompleteTextField from \"../../../../../../components/TextField/AutocompleteTextField\";\nimport { setHeaders } from \"../../../../../../slices/currentUser/currentUser\";\nimport { IAlbum, IAlbumMusic, IMusic } from \"../../../../../../interfaces\";\nimport useOpen from \"../../../../../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../../../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../../../../constants/queryKey.json\";\nimport {\n  deleteAlbumMusic,\n  postAlbumMusic,\n} from \"../../../../../../axios/axios\";\nimport { selectLocale } from \"../../../../../../slices/language\";\nimport { useAlbumsQuery } from \"../../../../../../reactQuery/query\";\n\nconst Album: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [open, handleOpen, handleClose] = useOpen();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { register, handleSubmit, setValue } = useForm();\n  // react-router-dom\n  const params = useParams<{\n    userId: string;\n    id: string;\n  }>();\n  const userId = Number(params.userId);\n  const id = Number(params.id);\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const handleCreateSuccess = (res: AxiosResponse<IAlbumMusic>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          albums: [...(prev.albums || []), res.data.album],\n        }\n    );\n  };\n  const handleDestroySuccess = (\n    res: AxiosResponse<IAlbumMusic>,\n    album: IAlbum\n  ) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          albums:\n            prev.albums &&\n            prev.albums.filter((prevAlbum) => prevAlbum !== album),\n        }\n    );\n  };\n  const createMutation = useMutation(\n    (newAlbum: IAlbum) => postAlbumMusic(userId, id, newAlbum),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const destroyMutation = useMutation(\n    (album: IAlbum) => deleteAlbumMusic(userId, id, album.id),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const albums = useAlbumsQuery({\n    page: 1,\n    locale,\n    q: { title_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const handleRemoveOption = () => setValue(\"album_id\", \"\");\n  const handleSelectOption = (option: IAlbum) =>\n    setValue(\"album_id\", option.id);\n  const getOptionSelected = (option: IAlbum, value: IAlbum) =>\n    option.title === value.title;\n  const getOptionLabel = (option: IAlbum) => option.title;\n  const onInputChange = (\n    e: ChangeEvent<Record<string, unknown>>,\n    value: string\n  ) => setInputValue(value);\n  const onSubmit = (data: IAlbum) => createMutation.mutate(data);\n  useEffect(() => {\n    register(\"album_id\");\n  }, [register]);\n  return (\n    <>\n      <Button onClick={handleOpen}>\n        <FormattedMessage id=\"edit\" />\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth>\n        <DialogTitle>\n          <FormattedMessage id=\"editAlbum\" />\n        </DialogTitle>\n        <Container>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <FormattedMessage id=\"artist\" />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <FormattedMessage id=\"delete\" />\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {music?.albums?.map((album) => {\n                  const handleClick = () => destroyMutation.mutate(album);\n                  return (\n                    <TableRow key={album.id}>\n                      <TableCell>\n                        <Link component={RouterLink} to=\"/\">\n                          {album.title}\n                        </Link>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton onClick={handleClick}>\n                          <CloseIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Box mb={3}>\n            <AutocompleteTextField\n              maxLength={1}\n              onSelectOption={handleSelectOption}\n              onRemoveOption={handleRemoveOption}\n              textFieldProps={{\n                label: intl.formatMessage({ id: \"albums\" }),\n                variant: \"outlined\",\n                margin: \"normal\",\n              }}\n              autocompleteProps={{\n                options: albums.data?.data || [],\n                multiple: true,\n                loading:\n                  createMutation.isLoading ||\n                  destroyMutation.isLoading ||\n                  isPending(),\n                getOptionSelected,\n                getOptionLabel,\n                onInputChange,\n              }}\n            />\n          </Box>\n          <Box mb={3}>\n            <LoadingButton\n              color=\"primary\"\n              loading={createMutation.isLoading}\n              onClick={handleSubmit(onSubmit)}\n              fullWidth\n            >\n              <FormattedMessage id=\"addAlbum\" />\n            </LoadingButton>\n          </Box>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Album;\n","//  https://www.youtube.com/watch?v=:ID\n//  https://www.youtube.com/channel/:ID\n\nconst getIDfromYoutubeURL = (url: string): string | null => {\n  const newURL = new URL(url);\n  const { pathname } = newURL;\n  if (pathname.includes(\"watch\")) return newURL.searchParams.get(\"v\");\n  if (pathname.includes(\"channel\")) return pathname.split(\"/\")[2];\n  return null;\n};\n\nexport default getIDfromYoutubeURL;\n","import React from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { format } from \"date-fns\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AxiosResponse } from \"axios\";\nimport AlbumsTable from \"../../../../../components/Table/Album\";\nimport LinkTable from \"../../../../../components/Table/Link\";\nimport ItunesMusicDialog from \"../../../../../components/Dialog/Itunes/Music\";\nimport MusixmatchDialog from \"../../../../../components/Dialog/Musixmatch\";\nimport SpotifyTrackDialog from \"../../../../../components/Dialog/Spotify/Track\";\nimport YoutubeDialog from \"../../../../../components/Dialog/Youtube\";\nimport MainDialog from \"./Dialog/Main\";\nimport RoleDialog from \"./Dialog/Artist\";\nimport AlbumDialog from \"./Dialog/Album\";\nimport routes from \"../../../../../constants/routes.json\";\nimport { setHeaders } from \"../../../../../slices/currentUser/currentUser\";\nimport {\n  IItunesMusic,\n  IMusic,\n  IMusicLink,\n  IMusixmatchTrack,\n  ISpotifyTrack,\n} from \"../../../../../interfaces\";\nimport queryKey from \"../../../../../constants/queryKey.json\";\nimport { patchMusicLink } from \"../../../../../axios/axios\";\nimport useQuerySnackbar from \"../../../../../hooks/useQuerySnackbar\";\nimport { selectLocale } from \"../../../../../slices/language\";\nimport styles from \"./index.module.css\";\nimport getIDfromYoutubeURL from \"../../../../../helpers/getIDfromYoutubeURL\";\n\nconst Info: React.FC = () => {\n  const { onError } = useQuerySnackbar();\n  // react-router\n  const params = useParams<{ userId: string; id: string }>();\n  const id = Number(params.id);\n  const userId = Number(params.userId);\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id, locale]);\n  const itunesMusics = queryClient.getQueryData<IItunesMusic[]>([\n    queryKey.ITUNES,\n    queryKey.MUSIC,\n    music?.link?.itunes,\n  ]);\n  const handleUpdateSuccess = (res: AxiosResponse<IMusicLink>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [queryKey.MUSIC, id, locale],\n      (prev) => prev && { ...prev, link: res.data }\n    );\n  };\n  const patchMutation = useMutation(\n    (link: Partial<Omit<IMusicLink, \"id\">>) =>\n      patchMusicLink(userId, id, music?.link.id, link),\n    {\n      onSuccess: handleUpdateSuccess,\n      onError,\n    }\n  );\n  // handlers\n  const handleSpotifySelect = (selectedMusic: ISpotifyTrack) =>\n    patchMutation.mutate({ spotify: selectedMusic.id });\n  const handleItunesSelect = (selectedMusic: IItunesMusic) =>\n    patchMutation.mutate({ itunes: selectedMusic.trackId });\n  const handleMusixmatchSelect = (selectedMusic: IMusixmatchTrack) =>\n    patchMutation.mutate({ musixmatch: selectedMusic.track.track_id });\n  const handleYoutubeSelect = (value: string) =>\n    patchMutation.mutate({ youtube: value });\n  return (\n    <>\n      <Box mb={3}>\n        <LinkTable\n          itunes={{\n            link:\n              itunesMusics && itunesMusics[0]\n                ? itunesMusics[0].trackViewUrl\n                : undefined,\n            renderDialog(open, handleClose) {\n              return (\n                <ItunesMusicDialog\n                  defaultValue={music?.title}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleItunesSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          spotify={{\n            type: \"track\",\n            link: music?.link?.spotify,\n            renderDialog(open, handleClose) {\n              return (\n                <SpotifyTrackDialog\n                  defaultValue={music?.title}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSpotifySelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          musixmatch={{\n            renderDialog(open, handleClose) {\n              return (\n                <MusixmatchDialog\n                  defaultValue={music?.title}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleMusixmatchSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          youtube={{\n            type: \"v\",\n            link: music?.link.youtube,\n            renderDialog(open, handleClose) {\n              return (\n                <YoutubeDialog\n                  id={music?.link.youtube || \"\"}\n                  open={open}\n                  onClose={handleClose}\n                  onPatch={handleYoutubeSelect}\n                  loading={patchMutation.isLoading}\n                />\n              );\n            },\n          }}\n        />\n      </Box>\n      {music?.link.youtube && (\n        <Box\n          mb={3}\n          display=\"block\"\n          position=\"relative\"\n          width=\"100%\"\n          height=\"0\"\n          pt=\"56.25%\"\n        >\n          <iframe\n            className={styles.iframe}\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${\n              getIDfromYoutubeURL(music?.link.youtube) || \"undefined\"\n            }`}\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        </Box>\n      )}\n      <Box mb={3}>\n        <MainDialog />\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"main\" />\n                </TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"releaseDate\" />\n                </TableCell>\n                <TableCell>\n                  {itunesMusics &&\n                    itunesMusics[0] &&\n                    itunesMusics[0].releaseDate &&\n                    format(new Date(itunesMusics[0].releaseDate), \"yyyy/MM/dd\")}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"composers\" />\n                </TableCell>\n                <TableCell>\n                  {music?.composers?.map((composer) => (\n                    <Link\n                      key={composer.id}\n                      component={RouterLink}\n                      to={`${routes.ARTISTS}/${composer.id}`}\n                    >\n                      {composer.name}\n                    </Link>\n                  ))}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"lyrists\" />\n                </TableCell>\n                <TableCell>\n                  {music?.lyrists?.map((lyrists) => (\n                    <Link\n                      key={lyrists.id}\n                      component={RouterLink}\n                      to={`${routes.ARTISTS}/${lyrists.id}`}\n                    >\n                      {lyrists.name}\n                    </Link>\n                  ))}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"band\" />\n                </TableCell>\n                <TableCell>\n                  {music?.band && (\n                    <Link\n                      component={RouterLink}\n                      to={`${routes.BANDS}/${music.band.id}`}\n                    >\n                      {music.band.name}\n                    </Link>\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"user\" />\n                </TableCell>\n                <TableCell>\n                  {music?.user && (\n                    <Link\n                      component={RouterLink}\n                      to={`${routes.USERS}/${music.user.id}`}\n                    >\n                      {music.user.nickname}\n                    </Link>\n                  )}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n      <Box mb={3}>\n        <RoleDialog />\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <FormattedMessage id=\"role\" />\n                </TableCell>\n                <TableCell>\n                  <FormattedMessage id=\"artist\" />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {music?.artistMusics?.map((artistMusic) => (\n                <TableRow key={artistMusic.id}>\n                  <TableCell>{artistMusic.role}</TableCell>\n                  <TableCell>\n                    <Link\n                      component={RouterLink}\n                      to={`${routes.ARTISTS}/${artistMusic.artist.id}`}\n                    >\n                      {artistMusic.artist.name}\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n      <AlbumDialog />\n      <AlbumsTable albums={music?.albums || []} />\n    </>\n  );\n};\nexport default Info;\n","import { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ControlTextField from \"../../../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../../../../ui/LoadingButton\";\nimport { setHeaders } from \"../../../../slices/currentUser/currentUser\";\nimport routes from \"../../../../constants/routes.json\";\nimport { IMusic } from \"../../../../interfaces\";\nimport useOpen from \"../../../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../../constants/queryKey.json\";\nimport { deleteMusic } from \"../../../../axios/axios\";\nimport { selectLocale } from \"../../../../slices/language\";\n\nconst Setting: React.FC = () => {\n  const [open, handleOpen, handleClose] = useOpen();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, handleSubmit } = useForm();\n  const history = useHistory();\n  const match = useRouteMatch<{ userId: string; id: string }>();\n  const id = Number(match.params.id);\n  const userId = Number(match.params.userId);\n  const locale = useSelector(selectLocale);\n  const queryClient = useQueryClient();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id, locale]);\n  const { onError } = useQuerySnackbar();\n  const dispatch = useDispatch();\n  const onSuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.removeQueries([queryKey.MUSIC, id, locale]);\n    history.push(routes.ROOT);\n  };\n  const destroyMusicMutation = useMutation(() => deleteMusic(userId, id), {\n    onSuccess,\n    onError,\n  });\n  const onSubmit = () => destroyMusicMutation.mutate();\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open}>\n        <Box m={3}>\n          <DialogTitle>\n            <FormattedMessage id=\"alertDelete\" />\n          </DialogTitle>\n          <Typography>\n            Please type{\" \"}\n            <Box display=\"inline\" fontWeight=\"Bold\">\n              {music?.title}\n            </Box>{\" \"}\n            to confirm.\n          </Typography>\n          <ControlTextField\n            name=\"title\"\n            defaultValue=\"\"\n            autoComplete=\"on\"\n            label=\"Title\"\n            variant=\"outlined\"\n            control={control}\n            errors={errors}\n            disabled={destroyMusicMutation.isLoading}\n            fullWidth\n            rules={{ validate: (value) => value === music?.title }}\n          />\n          <LoadingButton\n            type=\"button\"\n            color=\"secondary\"\n            loading={destroyMusicMutation.isLoading}\n            onClick={handleSubmit(onSubmit)}\n            fullWidth\n          >\n            Delete Music\n          </LoadingButton>\n        </Box>\n      </Dialog>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleOpen}>\n        Delete this music\n      </Button>\n    </>\n  );\n};\nSetting.defaultProps = {\n  music: undefined,\n};\n\nexport default Setting;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport { IIssue } from \"../../interfaces\";\nimport Layout, { LayoutProps } from \"./Layout\";\n\ninterface IssueProps extends LayoutProps {\n  issues: IIssue[];\n}\nconst Issue: React.FC<IssueProps> = ({\n  issues,\n  page,\n  pageCount,\n  onPage,\n  loading,\n}: IssueProps) => {\n  const match = useRouteMatch();\n  return (\n    <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <FormattedMessage id=\"title\" />\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {issues?.map((issue) => (\n            <TableRow key={issue.id}>\n              <TableCell>\n                <Link component={RouterLink} to={`${match.url}/${issue.id}`}>\n                  {issue.title}\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Layout>\n  );\n};\nexport default Issue;\n","import React from \"react\";\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport routes from \"../../../../../constants/routes.json\";\nimport IssueTable from \"../../../../../components/Table/Issue\";\nimport usePaginate from \"../../../../../hooks/usePaginate\";\nimport { useMusicIssuesQuery } from \"../../../../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  // const [searchValue, setSearchValue] = useState(\"\");\n  const match = useRouteMatch<{ id: string }>();\n  const intl = useIntl();\n  const handleKeyPress = () =>\n    /* e: React.KeyboardEvent<HTMLDivElement> */\n    {\n      // if (e.key === \"Enter\") setSearchValue((e.target as HTMLInputElement).value);\n    };\n  const { data, isLoading } = useMusicIssuesQuery({\n    id: Number(match.params.id),\n    page,\n  });\n  return (\n    <>\n      <Box mb={3}>\n        <Grid container>\n          <Grid item xs={10}>\n            <TextField\n              variant=\"outlined\"\n              label={intl.formatMessage({ id: \"searchIssues\" })}\n              onKeyPress={handleKeyPress}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={match.url + routes.NEW}\n            >\n              <FormattedMessage id=\"create\" />\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <IssueTable\n        issues={data?.data || []}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </>\n  );\n};\nexport default Index;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport Link from \"@material-ui/core/Link\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { ITree } from \"../../interfaces\";\n\ninterface FilesProps {\n  files: ITree[];\n  blobPath: string;\n  treePath: string;\n}\nconst Files: React.FC<FilesProps> = ({\n  files,\n  blobPath,\n  treePath,\n}: FilesProps) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>\n              <FormattedMessage id=\"file\" />\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {files.map((file) => (\n            <TableRow key={file.oid}>\n              <TableCell>\n                {file.type === \"blob\" ? (\n                  <DescriptionIcon color=\"action\" />\n                ) : (\n                  <FolderIcon color=\"action\" />\n                )}\n              </TableCell>\n              <TableCell>\n                {file.type === \"blob\" ? (\n                  <Link\n                    to={{\n                      pathname: `${blobPath}/${file.name}`,\n                      state: {\n                        oid: file.oid,\n                        path: file.name,\n                      },\n                    }}\n                    component={RouterLink}\n                  >\n                    {file.name}\n                  </Link>\n                ) : (\n                  <Link\n                    to={{\n                      pathname: `${treePath}/${file.name}`,\n                      state: {\n                        oid: file.oid,\n                        path: file.name,\n                      },\n                    }}\n                    component={RouterLink}\n                  >\n                    {file.name}\n                  </Link>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nexport default Files;\n","import React from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useSelector } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport FileTable from \"../../../../../components/Table/File\";\nimport baseURL from \"../../../../../constants/baseURL\";\nimport queryKey from \"../../../../../constants/queryKey.json\";\nimport { IMusic } from \"../../../../../interfaces\";\nimport { useMusicRootTreeQuery } from \"../../../../../reactQuery/query\";\nimport { selectLocale } from \"../../../../../slices/language\";\n\nconst Files: React.FC = () => {\n  const match = useRouteMatch<{ userId: string; id: string }>();\n  const id = Number(match.params.id);\n  const userId = Number(match.params.userId);\n  const locale = useSelector(selectLocale);\n  const queryClient = useQueryClient();\n  const music = queryClient.getQueryData<IMusic | undefined>([\n    queryKey.MUSIC,\n    id,\n    locale,\n  ]);\n  const musicTree = useMusicRootTreeQuery({ id });\n  return (\n    <div>\n      <p>\n        {baseURL}/git/{userId}/{music?.title}\n        .git\n      </p>\n      <p>Files</p>\n      <FileTable\n        files={musicTree.data?.rootTree || []}\n        treePath={`${match.url}/tree`}\n        blobPath={`${match.url}/blob`}\n      />\n    </div>\n  );\n};\nexport default Files;\n","import React from \"react\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router-dom\";\nimport FileTable from \"../../../../../components/Table/File\";\nimport { useMusicTreeQuery } from \"../../../../../reactQuery/query\";\n\nconst Show: React.FC = () => {\n  const params = useParams<{ userId: string; id: string }>();\n  const match = useRouteMatch<{ id: string }>();\n  const {\n    state: { oid },\n  } = useLocation<{ oid: string; path: string }>();\n  const id = Number(params.id);\n  const musicTree = useMusicTreeQuery({ id, oid });\n  return (\n    <div>\n      <pre>{musicTree.data?.blob}</pre>\n      <FileTable\n        files={musicTree.data?.tree || []}\n        treePath={match.url.replace(\"tree\", \"blob\")}\n        blobPath={match.url.replace(\"tree\", \"blob\")}\n      />\n    </div>\n  );\n};\nexport default Show;\n","import React from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { github } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useMusicBlobQuery } from \"../../../../../reactQuery/query\";\n\nconst Blob: React.FC = () => {\n  const params = useParams<{ id: string }>();\n  const {\n    state: { oid },\n  } = useLocation<{ oid: string; path: string }>();\n  const id = Number(params.id);\n  const musicBlob = useMusicBlobQuery({ id, oid });\n  return (\n    <Paper>\n      <SyntaxHighlighter style={github as unknown}>\n        {musicBlob.data?.blob || \"\"}\n      </SyntaxHighlighter>\n    </Paper>\n  );\n};\nexport default Blob;\n","import { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"react-query\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport ControlTextField from \"../../../../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../../../../../ui/LoadingButton\";\nimport { issueSchema } from \"../../../../../schema\";\nimport { setHeaders } from \"../../../../../slices/currentUser/currentUser\";\nimport { IIssue } from \"../../../../../interfaces\";\nimport useQuerySnackbar from \"../../../../../hooks/useQuerySnackbar\";\nimport { postIssue } from \"../../../../../axios/axios\";\n\nconst New: React.FC = () => {\n  const { errors, control, handleSubmit } = useForm({\n    resolver: yupResolver(issueSchema),\n  });\n  const match = useRouteMatch();\n  const route = match.url.replace(\"/new\", \"\");\n  const params = useParams<{ userId: string; id: string }>();\n  const userId = Number(params.userId);\n  const id = Number(params.id);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { onError } = useQuerySnackbar();\n  const intl = useIntl();\n  const onSuccess = (res: AxiosResponse<IIssue>) => {\n    dispatch(setHeaders(res.headers));\n    history.push(`${route}/${res.data.id}`);\n  };\n  const { isLoading, mutate } = useMutation(\n    (newIssue: IIssue) => postIssue(userId, id, newIssue),\n    {\n      onSuccess,\n      onError,\n    }\n  );\n  const onSubmit = (data: IIssue) => mutate(data);\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <ControlTextField\n        name=\"title\"\n        defaultValue=\"\"\n        autoComplete=\"on\"\n        label={intl.formatMessage({ id: \"title\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        fullWidth\n      />\n      <ControlTextField\n        name=\"description\"\n        defaultValue=\"\"\n        autoComplete=\"on\"\n        label={intl.formatMessage({ id: \"description\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        rows={10}\n        fullWidth\n        multiline\n      />\n      <LoadingButton type=\"submit\" loading={isLoading}>\n        <FormattedMessage id=\"createIssue\" />\n      </LoadingButton>\n    </form>\n  );\n};\nexport default New;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useParams } from \"react-router-dom\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {\n  CodeComponent,\n  ReactMarkdownNames,\n} from \"react-markdown/src/ast-to-react\";\nimport { dark } from \"@material-ui/core/styles/createPalette\";\nimport { useIssueQuery } from \"../../../../../reactQuery/query\";\n\nconst Show: React.FC = () => {\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const { data, isLoading } = useIssueQuery({ id });\n\n  const CodeBlock: CodeComponent | ReactMarkdownNames = ({\n    // eslint-disable-next-line react/prop-types\n    inline,\n    // eslint-disable-next-line react/prop-types\n    className,\n    // eslint-disable-next-line react/prop-types\n    children,\n    ...props\n  }) => {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n      <SyntaxHighlighter\n        style={dark}\n        language={match[1]}\n        PreTag=\"div\"\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n      >\n        {String(children).replace(/\\n$/, \"\")}\n      </SyntaxHighlighter>\n    ) : (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <code className={className} {...props}>\n        {children}\n      </code>\n    );\n  };\n\n  const components = {\n    code: CodeBlock,\n  };\n  return (\n    <>\n      {isLoading && <LinearProgress />}\n      <Typography variant=\"h3\">{data?.title}</Typography>\n      <ReactMarkdown components={components}>\n        {data?.description || \"\"}\n      </ReactMarkdown>\n    </>\n  );\n};\nexport default Show;\n","import React from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { getTrackLyric } from \"../../../../../axios/musixmatch\";\nimport queryKey from \"../../../../../constants/queryKey.json\";\nimport useQuerySnackbar from \"../../../../../hooks/useQuerySnackbar\";\nimport { IMusic } from \"../../../../../interfaces\";\nimport style from \"./index.module.css\";\n\nconst Lyric: React.FC = () => {\n  const { onError } = useQuerySnackbar();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const queryClient = useQueryClient();\n  const music = queryClient.getQueryData<IMusic>([queryKey.MUSIC, id]);\n  const { data, isLoading } = useQuery(\n    [queryKey.MUSIXMATCH, music?.link.id],\n    () => getTrackLyric(music?.link.musixmatch),\n    { onError }\n  );\n  if (isLoading) return <CircularProgress />;\n  return (\n    <div className={style.lyric}>\n      {data?.message?.body?.lyrics?.lyrics_body || \"\"}\n    </div>\n  );\n};\nexport default Lyric;\n","import React, { ChangeEvent, MouseEvent } from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport VolumeMuteIcon from \"@material-ui/icons/VolumeMute\";\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\nimport { Box } from \"@material-ui/core\";\n\ninterface VolumeIconProps {\n  value?: number;\n  muted?: boolean;\n}\nconst VolumeIcon: React.FC<VolumeIconProps> = ({\n  value,\n  muted,\n}: VolumeIconProps) => {\n  // eslint-disable-next-line no-console\n  if (muted || !value) return <VolumeOffIcon />;\n  if (value >= 0.6) return <VolumeUpIcon />;\n  if (value >= 0.3) return <VolumeDownIcon />;\n  return <VolumeMuteIcon />;\n};\nVolumeIcon.defaultProps = {\n  value: undefined,\n  muted: false,\n};\ninterface VolumeProps {\n  className?: string;\n  volume: number;\n  muted?: boolean;\n  onMute?: () => void;\n  onVolume?: (\n    _e: ChangeEvent<Record<string, unknown>>,\n    newValue: number | number[]\n  ) => void;\n}\nconst Volume: React.FC<VolumeProps> = ({\n  className,\n  volume,\n  muted,\n  onMute,\n  onVolume,\n}: VolumeProps) => {\n  // handlers\n  const handleClickValue = (e: MouseEvent) => e.stopPropagation();\n  const handleMute = () => {\n    if (onMute) onMute();\n  };\n  return (\n    <ToggleButton\n      className={className}\n      value=\"\"\n      selected={muted}\n      onChange={handleMute}\n    >\n      <Box width={200} display=\"flex\" alignItems=\"center\">\n        <VolumeIcon value={volume} muted={muted} />\n        <Slider\n          className={className}\n          disabled={muted}\n          value={volume}\n          onClick={handleClickValue}\n          onChange={onVolume}\n        />\n      </Box>\n    </ToggleButton>\n  );\n};\nVolume.defaultProps = {\n  className: \"\",\n  muted: false,\n  onVolume: undefined,\n  onMute: undefined,\n};\n\nexport default Volume;\n","import React from \"react\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\n\ninterface PlayProps {\n  className?: string;\n  paused?: boolean;\n  disabled?: boolean;\n  onPause?: () => void;\n}\nconst Play: React.FC<PlayProps> = ({\n  className,\n  paused,\n  disabled,\n  onPause,\n}: PlayProps) => {\n  const handlePlay = () => {\n    if (disabled) return;\n    if (onPause) onPause();\n  };\n  return (\n    <ToggleButton\n      className={className}\n      value=\"check\"\n      disabled={disabled}\n      onClick={handlePlay}\n    >\n      {paused ? <PlayArrowIcon /> : <PauseIcon />}\n    </ToggleButton>\n  );\n};\nPlay.defaultProps = {\n  className: \"\",\n  paused: true,\n  disabled: false,\n  onPause: undefined,\n};\nexport default Play;\n","import React, { ChangeEvent } from \"react\";\nimport { useAudio } from \"react-use\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  HTMLMediaControls,\n  HTMLMediaState,\n} from \"react-use/lib/factory/createHTMLMediaHook\";\nimport Volume from \"../../../../ui/Volume\";\nimport Pause from \"../../../../ui/Pause\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n    },\n    itunes: {\n      color: theme.palette.itunes.main,\n    },\n    colorPrimary: {\n      background: theme.palette.itunes.light,\n    },\n    barColorPrimary: {\n      backgroundColor: theme.palette.itunes.main,\n    },\n  })\n);\ninterface PlayerProps {\n  src: string;\n  selectInput: React.ReactNode;\n  onVolume: (newValue: number, controls: HTMLMediaControls) => void;\n  onPlay: (state: HTMLMediaState, controls: HTMLMediaControls) => void;\n  onMute: (state: HTMLMediaState, controls: HTMLMediaControls) => void;\n}\nconst Player: React.FC<PlayerProps> = ({\n  src,\n  selectInput,\n  onVolume,\n  onPlay,\n  onMute,\n}: PlayerProps) => {\n  const [audio, state, controls] = useAudio({\n    src: src || \"\",\n  });\n  const handleVolume = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    newValue: number | number[]\n  ) => {\n    if (!Array.isArray(newValue)) onVolume(newValue, controls);\n  };\n  const handlePlay = () => onPlay(state, controls);\n  const handleMute = () => onMute(state, controls);\n  const classes = useStyles();\n  return (\n    <AppBar position=\"fixed\" color=\"inherit\" className={classes.appBar}>\n      {audio}\n      <LinearProgress\n        classes={{\n          colorPrimary: classes.colorPrimary,\n          barColorPrimary: classes.barColorPrimary,\n        }}\n        variant=\"determinate\"\n        value={(state.time / state.duration) * 100}\n      />\n      <Toolbar>\n        <Box width=\"100%\">\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <ToggleButtonGroup>\n              <Volume\n                className={classes.itunes}\n                muted={state.muted}\n                volume={state.volume * 100}\n                onVolume={handleVolume}\n                onMute={handleMute}\n              />\n              <Pause\n                className={classes.itunes}\n                paused={state.paused}\n                onPause={handlePlay}\n              />\n            </ToggleButtonGroup>\n            <Box display=\"flex\" alignItems=\"center\">\n              {selectInput}\n            </Box>\n          </Box>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Player;\n","import React, { ChangeEvent } from \"react\";\nimport { useAudio } from \"react-use\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  HTMLMediaControls,\n  HTMLMediaState,\n} from \"react-use/lib/factory/createHTMLMediaHook\";\nimport { useSelector } from \"react-redux\";\nimport SpotifyButton from \"../../../../components/Button/Spotify\";\nimport Volume from \"../../../../ui/Volume\";\nimport Pause from \"../../../../ui/Pause\";\nimport { selectSpotifyToken } from \"../../../../slices/spotify\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n      color: \"#191414\",\n    },\n    spotify: {\n      color: theme.palette.spotify.main,\n    },\n    colorPrimary: {\n      background: theme.palette.spotify.light,\n    },\n    barColorPrimary: {\n      backgroundColor: theme.palette.spotify.main,\n    },\n  })\n);\ninterface PlayerProps {\n  src: string;\n  selectInput: React.ReactNode;\n  onVolume: (newValue: number, controls: HTMLMediaControls) => void;\n  onPlay: (state: HTMLMediaState, controls: HTMLMediaControls) => void;\n  onMute: (state: HTMLMediaState, controls: HTMLMediaControls) => void;\n}\nconst Player: React.FC<PlayerProps> = ({\n  src,\n  selectInput,\n  onVolume,\n  onPlay,\n  onMute,\n}: PlayerProps) => {\n  const [audio, state, controls] = useAudio({\n    src,\n  });\n  const spotifyToken = useSelector(selectSpotifyToken);\n  const handleVolume = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    newValue: number | number[]\n  ) => {\n    if (!Array.isArray(newValue)) onVolume(newValue, controls);\n  };\n  const handlePlay = () => onPlay(state, controls);\n  const handleMute = () => onMute(state, controls);\n  const classes = useStyles();\n  return (\n    <AppBar position=\"fixed\" color=\"inherit\" className={classes.appBar}>\n      {audio}\n      <LinearProgress\n        classes={{\n          colorPrimary: classes.colorPrimary,\n          barColorPrimary: classes.barColorPrimary,\n        }}\n        variant=\"determinate\"\n        value={(state.time / state.duration) * 100}\n      />\n      <Toolbar>\n        <Box width=\"100%\">\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <ToggleButtonGroup>\n              <Volume\n                className={classes.spotify}\n                muted={state.muted}\n                volume={state.volume * 100}\n                onVolume={handleVolume}\n                onMute={handleMute}\n              />\n              <Pause\n                className={classes.spotify}\n                paused={state.paused}\n                onPause={handlePlay}\n                disabled={!spotifyToken}\n              />\n            </ToggleButtonGroup>\n            {!spotifyToken && <SpotifyButton />}\n            <Box display=\"flex\" alignItems=\"center\">\n              {selectInput}\n            </Box>\n          </Box>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Box from \"@material-ui/core/Box\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport {\n  HTMLMediaControls,\n  HTMLMediaState,\n} from \"react-use/lib/factory/createHTMLMediaHook\";\nimport ItunesPlayer from \"./Itunes\";\nimport SpotifyPlayer from \"./Spotify\";\n\ntype PlayerProps = {\n  src: {\n    itunes: string | undefined;\n    spotify: string | undefined;\n    [key: string]: string | undefined;\n  };\n};\nconst Player: React.FC<PlayerProps> = ({ src }: PlayerProps) => {\n  const srcTypes = Object.entries(src)\n    .filter(([, value]) => !!value)\n    .map(([key]) => key);\n  const [selectedSrcType, setSelectedSrcType] = useState(\"\");\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) =>\n    setSelectedSrcType(event.target.value as string);\n  const handleMute = (state: HTMLMediaState, controls: HTMLMediaControls) =>\n    state.muted ? controls.unmute() : controls.mute();\n  const handlePlay = (state: HTMLMediaState, controls: HTMLMediaControls) =>\n    state.paused ? controls.play() : controls.pause();\n  const handleVolume = (\n    newValue: number | number[],\n    controls: HTMLMediaControls\n  ) => {\n    if (!Array.isArray(newValue)) controls.volume(newValue / 100);\n  };\n  useEffect(() => {\n    if (src) {\n      setSelectedSrcType(srcTypes[0]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [src]);\n  const SelectInput = () => (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Select value={selectedSrcType} onChange={handleChange}>\n        {srcTypes.map((srcType) => {\n          return (\n            <MenuItem key={srcType} value={srcType}>\n              {srcType}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </Box>\n  );\n  if (selectedSrcType === \"itunes\") {\n    return (\n      <>\n        {src.itunes && (\n          <ItunesPlayer\n            src={src.itunes}\n            selectInput={<SelectInput />}\n            onMute={handleMute}\n            onVolume={handleVolume}\n            onPlay={handlePlay}\n          />\n        )}\n        <Toolbar />\n      </>\n    );\n  }\n  if (selectedSrcType === \"spotify\") {\n    return (\n      <>\n        {src.spotify && (\n          <SpotifyPlayer\n            src={src.spotify}\n            selectInput={<SelectInput />}\n            onMute={handleMute}\n            onVolume={handleVolume}\n            onPlay={handlePlay}\n          />\n        )}\n        <Toolbar />\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default Player;\n","import { useQuery, UseQueryOptions, UseQueryResult } from \"react-query\";\nimport { getSpotifyTrack } from \"../axios/spotify\";\nimport { ISpotifyTrack } from \"../interfaces\";\n\nexport const useSpotifyTrackQuery = (\n  query: {\n    options: UseQueryOptions<ISpotifyTrack>;\n  },\n  id: string | null | undefined,\n  token: string | undefined\n): UseQueryResult<ISpotifyTrack> => {\n  const { options } = query;\n  return useQuery([\"spotify\", \"music\", id], () => getSpotifyTrack(id, token), {\n    ...options,\n    enabled: !!id && !!token,\n  });\n};\n\nexport default null;\n","import { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Link as RouterLink,\n  Route,\n  Switch,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Image from \"material-ui-image\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport InfoTabPanel from \"./TabPanel/Info\";\nimport SettingTabPanel from \"./TabPanel/Setting\";\nimport IssuesTabPanel from \"./TabPanel/Issue/Index\";\nimport TreeTabPanel from \"./TabPanel/Tree/Index\";\nimport TreeShow from \"./TabPanel/Tree/Show\";\nimport BlobShow from \"./TabPanel/Tree/Blob\";\nimport IssueNew from \"./TabPanel/Issue/New\";\nimport Issue from \"./TabPanel/Issue/Show\";\nimport LyricTabPanel from \"./TabPanel/Lyric\";\nimport Player from \"./Player\";\nimport BookmarkButton from \"../../../components/Button/Icon/Bookmark\";\nimport TranslateDialog from \"../../../components/Dialog/Translate\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../../slices/currentUser/currentUser\";\nimport { IMusic, IMusicBookmark } from \"../../../interfaces\";\nimport useQuerySnackbar from \"../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport routes from \"../../../constants/routes.json\";\nimport {\n  deleteMusicBookmark,\n  IMusicParams,\n  patchMusic,\n  postMusicBookmark,\n} from \"../../../axios/axios\";\nimport { remove, selectSpotifyToken } from \"../../../slices/spotify\";\nimport { selectLocale } from \"../../../slices/language\";\nimport { useMusicQuery } from \"../../../reactQuery/query\";\nimport { useLookupItunesMusic } from \"../../../reactQuery/itunes\";\nimport { useSpotifyTrackQuery } from \"../../../reactQuery/spotify\";\n\nconst Show: React.FC = () => {\n  // react-hook-form\n  const match = useRouteMatch<{ id: string; userId: string }>();\n  const id = Number(match.params.id);\n  const userId = Number(match.params.userId);\n  const location = useLocation();\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const spotifyToken = useSelector(selectSpotifyToken);\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IMusicBookmark>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [\"music\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: res.data,\n          bookmarksCount: prev.bookmarksCount + 1,\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IMusic | undefined>(\n      [\"music\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: undefined,\n          bookmarksCount: prev.bookmarksCount - 1,\n        }\n    );\n  };\n  const handleError = (err: unknown) => {\n    dispatch(remove());\n    onError(err);\n  };\n  const music = useMusicQuery({ id, locale, currentUserId: currentUser?.id });\n  const itunesMusics = useLookupItunesMusic({ id: music.data?.link?.itunes });\n  const spotifyTrack = useSpotifyTrackQuery(\n    { options: { onError: handleError } },\n    music.data?.link.spotify,\n    spotifyToken?.access_token\n  );\n  const createMutation = useMutation(() => postMusicBookmark(userId, id), {\n    onSuccess: handleCreateSuccess,\n    onError,\n  });\n  const destroyMutation = useMutation(\n    () => deleteMusicBookmark(userId, id, music.data?.bookmark?.id),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  // handlers\n  const handleCreateMutation = () => createMutation.mutate();\n  const handleDestroyMutation = () => destroyMutation.mutate();\n  const tabsValue = () => {\n    if (location.pathname.includes(\"issues\")) return match.url + routes.ISSUES;\n    if (location.pathname.includes(\"files\")) return match.url + routes.FILES;\n    return location.pathname;\n  };\n  return (\n    <>\n      <DefaultLayout>\n        {music.data?.localed && (\n          <Box mb={3}>\n            <Alert severity=\"warning\">\n              <AlertTitle>\n                <FormattedMessage id=\"untranslation\" />\n              </AlertTitle>\n              <strong>\n                <FormattedMessage id=\"pleaseTranslate\" />\n              </strong>\n            </Alert>\n          </Box>\n        )}\n        <Grid container>\n          <Grid item xs={11}>\n            <Typography variant=\"h5\">\n              <MusicNoteIcon />\n              {music.data?.title}\n            </Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <BookmarkButton\n              count={music.data?.bookmarksCount}\n              bookmarked={!!music.data?.bookmark || false}\n              onCreate={handleCreateMutation}\n              onDestroy={handleDestroyMutation}\n            />\n          </Grid>\n          <Grid item xs={1}>\n            <TranslateDialog<IMusic, IMusicParams>\n              queryKey={queryKey.MUSIC}\n              name=\"title\"\n              inputLabel={intl.formatMessage({ id: \"title\" })}\n              buttonLabel={intl.formatMessage({ id: \"translateTitle\" })}\n              patchFn={patchMusic(userId)}\n            />\n          </Grid>\n        </Grid>\n        <Box height=\"100px\" width=\"100px\" m=\"auto\">\n          {itunesMusics.data && itunesMusics.data[0] && (\n            <Image src={itunesMusics.data[0].artworkUrl100} />\n          )}\n        </Box>\n        <Box my={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={music.data ? !music.data.scoreExist : false}\n            component={RouterLink}\n            to={match.url + routes.TAB}\n            fullWidth\n            disableElevation\n          >\n            <FormattedMessage id=\"watchScore\" />\n          </Button>\n        </Box>\n        <Tabs value={tabsValue()}>\n          <Tab\n            label={intl.formatMessage({ id: \"info\" })}\n            value={match.url}\n            component={RouterLink}\n            to={match.url}\n          />\n          <Tab\n            label={intl.formatMessage({ id: \"file\" })}\n            value={match.url + routes.FILES}\n            component={RouterLink}\n            to={match.url + routes.FILES}\n          />\n          <Tab\n            label={intl.formatMessage({ id: \"lyric\" })}\n            value={match.url + routes.LYRIC}\n            component={RouterLink}\n            to={match.url + routes.LYRIC}\n            disabled\n          />\n          <Tab\n            label={intl.formatMessage({ id: \"issues\" })}\n            value={match.url + routes.ISSUES}\n            component={RouterLink}\n            to={match.url + routes.ISSUES}\n          />\n          <Tab\n            label={intl.formatMessage({ id: \"setting\" })}\n            value={match.url + routes.SETTING}\n            component={RouterLink}\n            to={match.url + routes.SETTING}\n            disabled={currentUser?.id !== Number(match.params.userId)}\n          />\n        </Tabs>\n        <Switch>\n          <Route exact path={match.path} component={InfoTabPanel} />\n          <Route\n            exact\n            path={match.path + routes.FILES}\n            component={TreeTabPanel}\n          />\n          <Route\n            exact\n            path={match.path + routes.SETTING}\n            component={SettingTabPanel}\n          />\n          <Route\n            exact\n            path={match.path + routes.LYRIC}\n            component={LyricTabPanel}\n          />\n          <Route\n            exact\n            path={match.path + routes.FILES}\n            component={TreeTabPanel}\n          />\n          <Route\n            exact\n            path={`${match.path + routes.FILES + routes.TREE}/:filename`}\n            component={TreeShow}\n          />\n          <Route\n            strict\n            path={`${match.path + routes.FILES + routes.BLOB}/:filename`}\n            component={BlobShow}\n          />\n          <Route\n            exact\n            path={match.path + routes.ISSUES}\n            component={IssuesTabPanel}\n          />\n          <Route\n            exact\n            path={match.path + routes.ISSUES + routes.NEW}\n            component={IssueNew}\n          />\n          <Route\n            exact\n            path={`${match.path}${routes.ISSUES}/:id`}\n            component={Issue}\n          />\n        </Switch>\n      </DefaultLayout>\n      <Player\n        src={{\n          itunes:\n            itunesMusics.data && itunesMusics.data[0]\n              ? itunesMusics.data[0].previewUrl\n              : undefined,\n          spotify: spotifyTrack.data?.preview_url,\n        }}\n      />\n    </>\n  );\n};\nexport default Show;\n","import { AxiosResponse } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDebounce } from \"use-debounce\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport Image from \"material-ui-image\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport SearchItunesButton from \"../../components/Button/Search/Itunes\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport LoadingCircularProgress from \"../../components/Loading/LoadingCircularProgress\";\nimport MusicTable from \"../../components/Table/Music\";\nimport ExistAlert from \"../../components/Alert/Exist\";\nimport DefaultLayout from \"../../layout/Default\";\nimport ItunesMusicDialog from \"../../components/Dialog/Itunes/Music\";\nimport { IItunesMusic, IMusic } from \"../../interfaces\";\nimport { IMusicParams, postMusic } from \"../../axios/axios\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../slices/currentUser/currentUser\";\nimport useOpen from \"../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport routes from \"../../constants/routes.json\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useMusicsQuery } from \"../../reactQuery/query\";\n\nconst New: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const [open, handleOpen, handleClose] = useOpen();\n  const [selectedItunesMusic, setSelectedItunesMusic] =\n    useState<IItunesMusic>();\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, watch, register, setValue, handleSubmit } =\n    useForm<IMusic>();\n  const { title } = watch();\n  // use-debounce\n  const [debouncedTitle, { isPending }] = useDebounce(title, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const history = useHistory();\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  const route = `${routes.USERS}/${currentUser?.id || \"undefinde\"}${\n    routes.MUSICS\n  }`;\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IMusic>) => {\n    dispatch(setHeaders(res.headers));\n    history.push(`${route}/${res.data.id}`);\n    queryClient.setQueryData([\"music\", id], res.data);\n    if (selectedItunesMusic)\n      queryClient.setQueryData(\n        [\"itunes\", \"music\", selectedItunesMusic.trackId],\n        selectedItunesMusic\n      );\n  };\n  const createMusicMutation = useMutation(\n    (newMusic: IMusicParams) => postMusic(currentUser?.id, newMusic),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const searchQuery = useMusicsQuery({\n    page,\n    locale,\n    q: {\n      title_cont: debouncedTitle,\n    },\n    options: { enabled: !isPending() && !!debouncedTitle, onError },\n  });\n  // handlers\n  const onSubmit = (data: IMusicParams) => createMusicMutation.mutate(data);\n  const handleSelect = (selectedCard: IItunesMusic) =>\n    setSelectedItunesMusic(selectedCard);\n  useEffect(() => {\n    register(\"link_attributes.itunes\");\n    if (selectedItunesMusic) {\n      const { trackCensoredName, trackId } = selectedItunesMusic;\n      setValue(\"title\", trackCensoredName);\n      setValue(\"link_attributes.itunes\", trackId);\n    }\n  }, [register, selectedItunesMusic, setValue]);\n\n  return (\n    <DefaultLayout>\n      <Paper>\n        <Box p={3}>\n          <Box height=\"100px\" width=\"100px\" m=\"auto\">\n            <Image src={selectedItunesMusic?.artworkUrl100 || \"undefiend\"} />\n          </Box>\n          <ControlTextField\n            name=\"title\"\n            defaultValue=\"\"\n            autoComplete=\"on\"\n            label={intl.formatMessage({ id: \"title\" })}\n            variant=\"outlined\"\n            control={control}\n            errors={errors}\n            disabled={createMusicMutation.isLoading}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <LoadingCircularProgress\n                  color=\"inherit\"\n                  size={20}\n                  loading={searchQuery.isLoading}\n                />\n              ),\n            }}\n          />\n          <SearchItunesButton\n            disabled={!debouncedTitle}\n            onClick={handleOpen}\n            fullWidth\n            disableElevation\n          />\n          <ItunesMusicDialog\n            defaultValue={debouncedTitle}\n            open={open}\n            onClose={handleClose}\n            onSelect={handleSelect}\n          />\n          <ExistAlert<IMusic> data={searchQuery.data?.data}>\n            <MusicTable\n              musics={searchQuery.data?.data || []}\n              page={page}\n              pageCount={searchQuery.data?.pagination.totalPages}\n              onPage={handlePage}\n              loading={searchQuery.isLoading}\n            />\n          </ExistAlert>\n          <LoadingButton\n            color=\"primary\"\n            loading={createMusicMutation.isLoading}\n            disabled={!debouncedTitle}\n            onClick={handleSubmit(onSubmit)}\n            fullWidth\n          >\n            <FormattedMessage id=\"createMusic\" />\n          </LoadingButton>\n        </Box>\n      </Paper>\n    </DefaultLayout>\n  );\n};\nexport default New;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\ninterface SongInfoProps {\n  title: string;\n  artist: string;\n}\nconst SongInfo: React.FC<SongInfoProps> = ({\n  title,\n  artist,\n}: SongInfoProps) => {\n  return (\n    <Box className=\"SongInfo\" display=\"flex\" alignItems=\"center\" height=\"100%\">\n      <Box className=\"at-song-title\" mx={3}>\n        <Typography variant=\"body1\">{title}</Typography>\n      </Box>\n      -\n      <Box className=\"at-song-artist\" mx={3}>\n        <Typography variant=\"body2\">{artist}</Typography>\n      </Box>\n    </Box>\n  );\n};\nexport default SongInfo;\n","import React from \"react\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\n\ninterface StopProps {\n  className?: string;\n  disabled?: boolean;\n  onStop?: () => void;\n}\nconst Stop: React.FC<StopProps> = ({\n  className,\n  disabled,\n  onStop,\n}: StopProps) => {\n  const handleStop = () => {\n    if (disabled) return;\n    if (onStop) onStop();\n  };\n  return (\n    <ToggleButton\n      className={className}\n      value=\"check\"\n      disabled={disabled}\n      onClick={handleStop}\n    >\n      <SkipPreviousIcon />\n    </ToggleButton>\n  );\n};\nStop.defaultProps = {\n  className: \"\",\n  disabled: false,\n  onStop: undefined,\n};\nexport default Stop;\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\n\ninterface CountInProps {\n  className?: string;\n  selected?: boolean;\n  onClick?: () => void;\n}\nconst CountIn: React.FC<CountInProps> = ({\n  className,\n  selected,\n  onClick,\n}: CountInProps) => {\n  return (\n    <ToggleButton\n      className={className}\n      value=\"check\"\n      selected={selected}\n      onClick={onClick}\n    >\n      <TimerIcon />\n    </ToggleButton>\n  );\n};\nCountIn.defaultProps = {\n  className: \"\",\n  selected: false,\n  onClick: undefined,\n};\nexport default CountIn;\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\n\ninterface LoopProps {\n  className?: string;\n  selected?: boolean;\n  onClick?: () => void;\n}\nconst Loop: React.FC<LoopProps> = ({\n  className,\n  selected,\n  onClick,\n}: LoopProps) => {\n  return (\n    <ToggleButton\n      className={className}\n      value=\"check\"\n      selected={selected}\n      onClick={onClick}\n    >\n      <RepeatIcon />\n    </ToggleButton>\n  );\n};\nLoop.defaultProps = {\n  className: \"\",\n  selected: false,\n  onClick: undefined,\n};\nexport default Loop;\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport { GiMetronome } from \"react-icons/gi\";\n\ninterface MetronomeProps {\n  className?: string;\n  selected?: boolean;\n  onClick?: () => void;\n}\nconst Metronome: React.FC<MetronomeProps> = ({\n  className,\n  selected,\n  onClick,\n}: MetronomeProps) => {\n  return (\n    <ToggleButton\n      value=\"check\"\n      className={className}\n      selected={selected}\n      onClick={onClick}\n    >\n      <GiMetronome size={24} />\n    </ToggleButton>\n  );\n};\nMetronome.defaultProps = {\n  className: \"\",\n  selected: false,\n  onClick: undefined,\n};\nexport default Metronome;\n","import React, { ChangeEvent } from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\ninterface LayoutProps {\n  layout?: 0 | 1;\n  onLayout?: (e: ChangeEvent<{ name?: string; value: unknown }>) => void;\n}\nconst Layout: React.FC<LayoutProps> = ({ onLayout, layout }: LayoutProps) => {\n  return (\n    <FormControl className=\"Layout\">\n      <InputLabel id=\"layout-select-label\">Layout</InputLabel>\n      <Select\n        id=\"layout-select\"\n        labelId=\"layout-select-label\"\n        value={layout}\n        onChange={onLayout}\n        autoWidth\n      >\n        <MenuItem value={0}>Horizontal</MenuItem>\n        <MenuItem value={1}>Page</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\nLayout.defaultProps = {\n  layout: 0,\n  onLayout: undefined,\n};\nexport default Layout;\n","import React, { ChangeEvent } from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\ninterface ZoomProps {\n  zoom?: number;\n  onZoom?: (e: ChangeEvent<{ name?: string; value: unknown }>) => void;\n}\nconst Zoom: React.FC<ZoomProps> = ({ zoom, onZoom }: ZoomProps) => {\n  const options = [25, 50, 75, 90, 100, 110, 125, 150, 200];\n  const optionItems = options.map((option) => (\n    <MenuItem key={option} value={option}>\n      {option}%\n    </MenuItem>\n  ));\n  return (\n    <FormControl className=\"Zoom\">\n      <InputLabel id=\"zoom-select-label\">Zoom</InputLabel>\n      <Select\n        id=\"zoom-select\"\n        labelId=\"zoom-select-label\"\n        value={zoom}\n        onChange={onZoom}\n      >\n        {optionItems}\n      </Select>\n    </FormControl>\n  );\n};\nZoom.defaultProps = {\n  zoom: 100,\n  onZoom: undefined,\n};\nexport default Zoom;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useToggle } from \"react-use\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { AlphaTabApi, LayoutMode } from \"@coderline/alphatab\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport SongInfo from \"../../../../ui/SongInfo\";\nimport Volume from \"../../../../ui/Volume\";\nimport Pause from \"../../../../ui/Pause\";\nimport Stop from \"../../../../ui/Stop\";\nimport CountIn from \"../../../../ui/CountIn\";\nimport Loop from \"../../../../ui/Loop\";\nimport Metronome from \"../../../../ui/Metronome\";\nimport Layout from \"../../../../ui/Layout\";\nimport Zoom from \"../../../../ui/Zoom\";\n\ninterface HeaderProps {\n  alphaTabApi?: AlphaTabApi;\n}\nconst Header: React.FC<HeaderProps> = ({ alphaTabApi }: HeaderProps) => {\n  const { Horizontal, Page } = LayoutMode;\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [masterVolume, setMasterVolume] = useState(100);\n  const [paused, setPaused] = useState(true);\n  const [playerReady, setPlayerReady] = useState(true);\n  const [muted, toggleMuted] = useToggle(false);\n  const [countIn, toggleCountIn] = useToggle(false);\n  const [loop, toggleLoop] = useToggle(false);\n  const [metronome, toggleMetronome] = useToggle(false);\n  const [layout, setLayout] = useState<typeof Horizontal | typeof Page>(Page);\n  const [zoom, setZoom] = useState(100);\n  const history = useHistory();\n  // handlers\n  const handleClick = () => history.goBack();\n  const handlePlayerReadySetFalse = () => setPlayerReady(false);\n  const handlePause = () => alphaTabApi?.playPause();\n  const handleStop = () => alphaTabApi?.stop();\n  const handleVolume = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    newValue: number | number[]\n  ) => {\n    if (!alphaTabApi) return;\n    if (!Array.isArray(newValue)) {\n      alphaTabApi.masterVolume = newValue / 100;\n      setMasterVolume(newValue);\n    }\n  };\n  const handleMute = () => {\n    if (!alphaTabApi) return;\n    toggleMuted();\n    if (alphaTabApi.masterVolume === 0) {\n      alphaTabApi.masterVolume = masterVolume / 100;\n    } else {\n      alphaTabApi.masterVolume = 0;\n    }\n  };\n  const handlePlayerState = ({ state }: { state: 0 | 1 }) =>\n    setPaused(state === 0);\n  const handleCountIn = () => {\n    if (!alphaTabApi) return;\n    toggleCountIn();\n    alphaTabApi.countInVolume = !countIn ? 1 : 0;\n  };\n  const handleLoop = () => {\n    if (!alphaTabApi) return;\n    toggleLoop();\n    alphaTabApi.isLooping = !loop;\n  };\n  const handleMetronome = () => {\n    if (!alphaTabApi) return;\n    toggleMetronome();\n    alphaTabApi.metronomeVolume = !metronome ? 1 : 0;\n  };\n  const handleScoreLoaded = (score: { title: string; artist: string }) => {\n    setTitle(score.title);\n    setArtist(score.artist);\n  };\n  const handleLayout = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!alphaTabApi) return;\n    switch (e.target.value) {\n      case Horizontal:\n        setLayout(Horizontal);\n        alphaTabApi.settings.display.layoutMode = Horizontal;\n        break;\n      case Page:\n        setLayout(Page);\n        alphaTabApi.settings.display.layoutMode = Page;\n        break;\n      default:\n        break;\n    }\n    alphaTabApi.updateSettings();\n    alphaTabApi.render();\n  };\n  const handleZoom = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!alphaTabApi) return;\n    setZoom(e.target.value as number);\n    const zoomLevel = parseInt(e.target.value as string, 10) / 100;\n    alphaTabApi.settings.display.scale = zoomLevel;\n    alphaTabApi.updateSettings();\n    alphaTabApi.render();\n  };\n  useEffect(() => {\n    alphaTabApi?.scoreLoaded.on(handleScoreLoaded);\n    alphaTabApi?.playerReady.on(handlePlayerReadySetFalse);\n    alphaTabApi?.playerStateChanged.on(handlePlayerState);\n    return () => {\n      alphaTabApi?.scoreLoaded.off(handleScoreLoaded);\n      alphaTabApi?.playerReady.off(handlePlayerReadySetFalse);\n      alphaTabApi?.playerStateChanged.off(handlePlayerState);\n    };\n  }, [alphaTabApi]);\n  return (\n    <>\n      <AppBar className=\"Header\" position=\"fixed\" color=\"default\">\n        <Toolbar>\n          <Grid container>\n            <Grid item xs={1}>\n              <IconButton onClick={handleClick}>\n                <ArrowBackIosIcon />\n              </IconButton>\n            </Grid>\n            <Grid className=\"at-controls-left\" item xs={3}>\n              <SongInfo title={title} artist={artist} />\n            </Grid>\n            <Grid item xs={5}>\n              <Box display=\"flex\" justifyContent=\"center\">\n                <ToggleButtonGroup>\n                  <Stop onStop={handleStop} />\n                  <Pause\n                    paused={paused}\n                    disabled={playerReady}\n                    onPause={handlePause}\n                  />\n                  <Volume\n                    volume={masterVolume}\n                    muted={muted}\n                    onMute={handleMute}\n                    onVolume={handleVolume}\n                  />\n                  <CountIn selected={countIn} onClick={handleCountIn} />\n                  <Loop selected={loop} onClick={handleLoop} />\n                  <Metronome selected={metronome} onClick={handleMetronome} />\n                </ToggleButtonGroup>\n              </Box>\n            </Grid>\n            <Grid item xs={3}>\n              <Grid className=\"at-controls-right\" container>\n                <Grid item xs={6} />\n                <Grid item xs={3}>\n                  <Zoom zoom={zoom} onZoom={handleZoom} />\n                </Grid>\n                <Grid item xs={3}>\n                  <Layout layout={layout} onLayout={handleLayout} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Toolbar>\n        {playerReady && <LinearProgress />}\n      </AppBar>\n    </>\n  );\n};\nHeader.defaultProps = {\n  alphaTabApi: undefined,\n};\nexport default Header;\n","import React, { useState, MouseEvent } from \"react\";\nimport { FaGuitar } from \"react-icons/fa\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { model } from \"@coderline/alphatab\";\n\nconst GuitarIcon = ({ color }: SvgIconProps) => (\n  <SvgIcon color={color}>\n    <FaGuitar />\n  </SvgIcon>\n);\nexport const ITrack = new model.Track();\n\ninterface TrackProps extends Omit<TracksProps, \"tracks\"> {\n  track: typeof ITrack;\n  i: number;\n}\nconst Track: React.FC<TrackProps> = ({\n  track,\n  selectedIndex,\n  i,\n  onListItemClick,\n  onMute,\n  onSolo,\n}: TrackProps) => {\n  const [mute, setMute] = useState(false);\n  const [solo, setSolo] = useState(false);\n  const selected = selectedIndex === i;\n  // handlers\n  const handleListItemClick = () => {\n    if (onListItemClick) onListItemClick(track, i);\n  };\n  const handleMute = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    if (onMute) onMute(mute, track);\n    setMute(!mute);\n  };\n  const handleSolo = (e: MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    if (onSolo) onSolo(solo, track);\n    setSolo(!solo);\n  };\n  return (\n    <ListItem\n      key={track.name}\n      id=\"at-track-template\"\n      button\n      selected={selected}\n      onClick={handleListItemClick}\n    >\n      <ListItemIcon>\n        <GuitarIcon color={selected ? \"primary\" : \"inherit\"} />\n      </ListItemIcon>\n      <ListItemText\n        primary={track.name}\n        secondary={\n          <ToggleButtonGroup>\n            <ToggleButton size=\"small\" selected={mute} onClick={handleMute}>\n              M\n            </ToggleButton>\n            <ToggleButton size=\"small\" selected={solo} onClick={handleSolo}>\n              S\n            </ToggleButton>\n          </ToggleButtonGroup>\n        }\n      />\n    </ListItem>\n  );\n};\ninterface TracksProps {\n  tracks?: typeof ITrack[];\n  selectedIndex?: number;\n  onListItemClick?: (track: typeof ITrack, index: number) => void;\n  onSolo?: (solo: boolean, soloTracks: typeof ITrack) => void;\n  onMute?: (mute: boolean, mutedTracks: typeof ITrack) => void;\n}\nconst Tracks: React.FC<TracksProps> = ({\n  tracks,\n  selectedIndex,\n  onListItemClick,\n  onSolo,\n  onMute,\n}: TracksProps) => (\n  <List className=\"at-track-list\" component={Paper}>\n    {tracks?.map((track, i) => (\n      <Track\n        key={track.index}\n        track={track}\n        selectedIndex={selectedIndex}\n        i={i}\n        onListItemClick={onListItemClick}\n        onSolo={onSolo}\n        onMute={onMute}\n      />\n    ))}\n  </List>\n);\nTracks.defaultProps = {\n  tracks: [],\n  selectedIndex: 0,\n  onMute: undefined,\n  onSolo: undefined,\n  onListItemClick: undefined,\n};\nexport default Tracks;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport useScript from \"react-script-hook\";\nimport { useSnackbar } from \"notistack\";\nimport { AlphaTabApi, model } from \"@coderline/alphatab\";\nimport Box from \"@material-ui/core/Box\";\nimport { useSelector } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Tracks, { ITrack } from \"../../../../ui/Tracks\";\nimport { IAlphaTab, IMusic } from \"../../../../interfaces\";\nimport styles from \"./index.module.css\";\nimport { selectLocale } from \"../../../../slices/language\";\nimport { useMusicScoreQuery } from \"../../../../reactQuery/query\";\n\nconst settings = {\n  tex: true,\n  player: {\n    enablePlayer: true,\n    soundFont:\n      \"https://cdn.jsdelivr.net/npm/@coderline/alphatab@latest/dist/soundfont/sonivox.sf2\",\n  },\n};\nconst Score = new model.Score();\nconst Tab: React.FC = () => {\n  const [tracks, setTracks] = useState<typeof ITrack[]>([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [alphaTabApi, setAlphaTabApi] = useState<AlphaTabApi>();\n  const ref = useRef<HTMLDivElement>(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, error] = useScript({\n    src: \"https://cdn.jsdelivr.net/npm/@coderline/alphatab@latest/dist/alphaTab.js\",\n  });\n  const match = useRouteMatch<{ id: string }>();\n  const locale = useSelector(selectLocale);\n  const id = Number(match.params.id);\n  const onSuccess = (res: IMusic) => {\n    alphaTabApi?.tex(res.score);\n  };\n  // react-query\n  useMusicScoreQuery({\n    id,\n    locale,\n    options: {\n      onSuccess,\n      enabled: loading,\n    },\n  });\n  // handlers\n  const handleListItemClick = (track: typeof ITrack, i: number) => {\n    setSelectedIndex(i);\n    alphaTabApi?.renderTracks([track]);\n  };\n  const handleMute = (mute: boolean, track: typeof ITrack) =>\n    alphaTabApi?.changeTrackMute([track], !mute);\n  const handleSolo = (solo: boolean, track: typeof ITrack) =>\n    alphaTabApi?.changeTrackSolo([track], !solo);\n  const scoreLoaded = (score: typeof Score) => setTracks(score.tracks);\n  const renderStarted = useCallback(() => {\n    if (alphaTabApi) setSelectedIndex(alphaTabApi.tracks[0].index);\n  }, [alphaTabApi]);\n  // init alphaTabApi\n  useEffect(() => {\n    if (!loading && ref.current)\n      setAlphaTabApi(new window.alphaTab.AlphaTabApi(ref.current, settings));\n  }, [loading]);\n  // mount\n  useEffect(() => {\n    alphaTabApi?.renderStarted.on(renderStarted);\n    alphaTabApi?.scoreLoaded.on(scoreLoaded);\n    return () => {\n      alphaTabApi?.renderStarted.off(renderStarted);\n      alphaTabApi?.scoreLoaded.off(scoreLoaded);\n      alphaTabApi?.destroy();\n    };\n  }, [\n    alphaTabApi,\n    alphaTabApi?.renderStarted,\n    alphaTabApi?.scoreLoaded,\n    renderStarted,\n  ]);\n  // useScript handleError\n  useEffect(() => {\n    if (error) enqueueSnackbar(error.type, { variant: \"error\" });\n  }, [enqueueSnackbar, error]);\n  return (\n    <Box\n      className=\"at-wrap\"\n      position=\"relative\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      height=\"93vh\"\n      overflow=\"hidden\"\n    >\n      <Header alphaTabApi={alphaTabApi} />\n      <Box\n        className=\"at-content\"\n        position=\"relative\"\n        overflow=\"hidden\"\n        flexGrow={1}\n      >\n        <Box\n          className={styles.atSidebar}\n          position=\"absolute\"\n          top=\"0\"\n          left=\"0\"\n          bottom=\"0\"\n          zIndex={1001}\n          display=\"flex\"\n          alignContent=\"stretch\"\n          width=\"auto\"\n          maxWidth=\"60px\"\n          overflow=\"hidden\"\n          border={1}\n          borderLeft={0}\n          borderTop={0}\n          borderBottom={0}\n          borderColor=\"divider\"\n        >\n          <Tracks\n            tracks={tracks}\n            selectedIndex={selectedIndex}\n            onMute={handleMute}\n            onSolo={handleSolo}\n            onListItemClick={handleListItemClick}\n          />\n        </Box>\n        <Box\n          className=\"at-viewport\"\n          overflow=\"auto\"\n          position=\"absolute\"\n          top={0}\n          left={70}\n          right={0}\n          bottom={0}\n          pr={3}\n        >\n          <div ref={ref} className=\"at-main\" />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\ndeclare global {\n  interface Window {\n    alphaTab: IAlphaTab;\n    getSpotifyCode: (code: string) => void;\n  }\n}\n\nexport default Tab;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { useSelector } from \"react-redux\";\nimport BandsTable from \"../../components/Table/Band\";\nimport DefaultLayout from \"../../layout/Default\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport SearchTextField from \"../../components/TextField/SearchTextField\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useBandsQuery } from \"../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [page, handlePage] = usePaginate();\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  const locale = useSelector(selectLocale);\n  const { isLoading, data } = useBandsQuery({\n    page,\n    locale,\n    q: {\n      name_cont: debouncedInputValue,\n    },\n  });\n  // handlers\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputValue(e.target.value);\n  return (\n    <DefaultLayout>\n      <SearchTextField\n        onChange={handleChange}\n        loading={isLoading || isPending()}\n      />\n      <BandsTable\n        bands={data?.data || []}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\nexport default Index;\n","import axios, { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport LoadingButton from \"../../../../ui/LoadingButton\";\nimport AutocompleteTextField from \"../../../../components/TextField/AutocompleteTextField\";\nimport routes from \"../../../../constants/routes.json\";\nimport {\n  selectHeaders,\n  setHeaders,\n} from \"../../../../slices/currentUser/currentUser\";\nimport { IArtist, IArtistBand, IBand } from \"../../../../interfaces\";\nimport useOpen from \"../../../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../../../hooks/useQuerySnackbar\";\nimport { selectLocale } from \"../../../../slices/language\";\nimport { useArtistsQuery } from \"../../../../reactQuery/query\";\n\nconst Artist: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [open, handleOpen, handleClose] = useOpen();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { register, handleSubmit, setValue } = useForm<IArtist>();\n  // react-router-dom\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  const route = match.url + routes.ARTISTS;\n  // react-redux\n  const dispatch = useDispatch();\n  const headers = useSelector(selectHeaders);\n  const locale = useSelector(selectLocale);\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  const band = queryClient.getQueryData<IBand>([\"band\", id]);\n  const handleCreateSuccess = (res: AxiosResponse<IArtistBand>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [\"band\", id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artists: [...(prev.artists || []), res.data.artist],\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse<IBand>, artist: IArtist) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [\"band\", id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artists:\n            prev.artists &&\n            prev.artists.filter((prevArtists) => prevArtists !== artist),\n        }\n    );\n  };\n  const createMutation = useMutation(\n    (newArtistBand: IArtistBand) =>\n      axios.post<IArtistBand>(route, newArtistBand, headers),\n    {\n      onSuccess: handleCreateSuccess,\n      onError,\n    }\n  );\n  const destroyMutation = useMutation(\n    (artist) => axios.delete(`${route}/${artist.id}`, headers),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const artists = useArtistsQuery({\n    page: 1,\n    locale,\n    q: { name_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n\n  // handlers\n  const handleRemoveOption = () => setValue(\"artist_id\", \"\");\n  const handleSelectOption = (option: IArtist) =>\n    setValue(\"artist_id\", option.id);\n  const onInputChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: string,\n    reason: string\n  ) => reason === \"input\" && setInputValue(value);\n  const onSubmit = (data: IArtistBand) => createMutation.mutate(data);\n  const getOptionSelected = (option: IArtist, value: IArtist) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IArtist) => option.name;\n  useEffect(() => {\n    register(\"artist_id\");\n  }, [register]);\n  return (\n    <>\n      <Button onClick={handleOpen}>Edit</Button>\n      <Dialog onClose={handleClose} open={open} fullWidth>\n        <DialogTitle>Edit Albums</DialogTitle>\n        <Container>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Artist</TableCell>\n                  <TableCell align=\"right\">Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {band?.artists?.map((artist) => {\n                  const handleClick = () => destroyMutation.mutate(artist);\n                  return (\n                    <TableRow key={artist.id}>\n                      <TableCell>\n                        <Link component={RouterLink} to=\"/\">\n                          {artist.name}\n                        </Link>\n                      </TableCell>\n\n                      <TableCell align=\"right\">\n                        <IconButton onClick={handleClick}>\n                          <CloseIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Box mb={3}>\n            <AutocompleteTextField<IArtist>\n              maxLength={1}\n              onSelectOption={handleSelectOption}\n              onRemoveOption={handleRemoveOption}\n              textFieldProps={{\n                label: \"Artist\",\n                variant: \"outlined\",\n                margin: \"normal\",\n              }}\n              autocompleteProps={{\n                multiple: true,\n                options: artists.data?.data || [],\n                inputValue,\n                loading:\n                  createMutation.isLoading ||\n                  destroyMutation.isLoading ||\n                  isPending(),\n                getOptionSelected,\n                getOptionLabel,\n                onInputChange,\n              }}\n            />\n          </Box>\n          <Box mb={3}>\n            <LoadingButton\n              color=\"primary\"\n              loading={createMutation.isLoading}\n              onClick={handleSubmit(onSubmit)}\n              fullWidth\n            >\n              Add Artist\n            </LoadingButton>\n          </Box>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Artist;\n","import { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport ArtistDialog from \"./Dialog/Artist\";\nimport ArtistsTable from \"../../../components/Table/Artist\";\nimport MusicsTable from \"../../../components/Table/Music\";\nimport AlbumsTable from \"../../../components/Table/Album\";\nimport LinkTable from \"../../../components/Table/Link\";\nimport BookmarkButton from \"../../../components/Button/Icon/Bookmark\";\nimport ItunesArtistDialog from \"../../../components/Dialog/Itunes/Artist\";\nimport TwitterDialog from \"../../../components/Dialog/Twitter\";\nimport WikipediaDialog from \"../../../components/Dialog/Wikipedia\";\nimport SpotifyArtistDialog from \"../../../components/Dialog/Spotify/Artist\";\nimport TranslateDialog from \"../../../components/Dialog/Translate\";\nimport YoutubeDialog from \"../../../components/Dialog/Youtube\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport {\n  IBand,\n  IBandBookmark,\n  IBandLink,\n  IItunesArtist,\n  ISpotifyArtist,\n  IWikipedia,\n} from \"../../../interfaces\";\nimport useQuerySnackbar from \"../../../hooks/useQuerySnackbar\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../../slices/currentUser/currentUser\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport {\n  postBandBookmark,\n  deleteBandBookmark,\n  patchBandLink,\n  IBandParams,\n  patchBand,\n} from \"../../../axios/axios\";\nimport usePaginate from \"../../../hooks/usePaginate\";\nimport { selectLocale } from \"../../../slices/language\";\nimport {\n  useBandAlbumsQuery,\n  useBandMusicsQuery,\n  useBandQuery,\n} from \"../../../reactQuery/query\";\nimport { useLookupItunesArtist } from \"../../../reactQuery/itunes\";\nimport { useWikipediaQuery } from \"../../../reactQuery/wikipedia\";\n\nconst Show: React.FC = () => {\n  const [albumPage, handleAlbumPage] = usePaginate();\n  const [musicPage, handleMusicPage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const { onError } = useQuerySnackbar();\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IBandBookmark>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [\"band\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: res.data,\n          bookmarksCount: prev.bookmarksCount + 1,\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [\"band\", id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: undefined,\n          bookmarksCount: prev.bookmarksCount - 1,\n        }\n    );\n  };\n  const handleUpdateSuccess = (res: AxiosResponse<IBandLink>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IBand | undefined>(\n      [\"band\", id, locale],\n      (prev) => prev && { ...prev, link: res.data }\n    );\n  };\n  const band = useBandQuery({ id, locale, currentUserId: currentUser?.id });\n  const bandAlbums = useBandAlbumsQuery({ id, page: albumPage, locale });\n  const bandMusics = useBandMusicsQuery({ id, page: musicPage, locale });\n  const itunesArtist = useLookupItunesArtist({ id: band.data?.link.itunes });\n  const wikipedia = useWikipediaQuery(band.data?.link.wikipedia);\n  const createBookmarkMutation = useMutation(() => postBandBookmark(id), {\n    onSuccess: handleCreateSuccess,\n    onError,\n  });\n  const destroyBookmarkMutation = useMutation(\n    () => deleteBandBookmark(id, band.data?.bookmark?.id),\n    { onSuccess: handleDestroySuccess, onError }\n  );\n  const updateLinkMutation = useMutation(\n    (link: Partial<Omit<IBandLink, \"id\">>) =>\n      patchBandLink(id, band.data?.link.id, link),\n    { onSuccess: handleUpdateSuccess, onError }\n  );\n  // handlers\n  const handleItunesSelect = (selectedBand: IItunesArtist) =>\n    updateLinkMutation.mutate({ itunes: selectedBand.artistId });\n  const handleWikipediaSelect = (selectedWikipedia: IWikipedia) =>\n    updateLinkMutation.mutate({ wikipedia: selectedWikipedia.pageid });\n  const handleSpotifySelect = (selectedSpotify: ISpotifyArtist) =>\n    updateLinkMutation.mutate({ spotify: selectedSpotify.id });\n  const handleYoutubeSelect = (value: string) =>\n    updateLinkMutation.mutate({ youtube: value });\n  const handleSubmit = (value: string) =>\n    updateLinkMutation.mutate({ twitter: value });\n  const handleCreateBookmarkMutation = () => createBookmarkMutation.mutate();\n  const handleDestroyBookmarkMutation = () => destroyBookmarkMutation.mutate();\n  return (\n    <DefaultLayout>\n      {band.data?.localed && (\n        <Box mb={3}>\n          <Alert severity=\"warning\">\n            <AlertTitle>\n              <FormattedMessage id=\"untranslation\" />\n            </AlertTitle>\n            <strong>\n              <FormattedMessage id=\"pleaseTranslate\" />\n            </strong>\n          </Alert>\n        </Box>\n      )}\n      <Grid container>\n        <Grid item xs={10}>\n          <Typography variant=\"h5\">\n            <GroupIcon />\n            {band.data?.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={1}>\n          <BookmarkButton\n            count={band.data?.bookmarksCount}\n            bookmarked={!!band.data?.bookmark || false}\n            onCreate={handleCreateBookmarkMutation}\n            onDestroy={handleDestroyBookmarkMutation}\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <TranslateDialog<IBand, IBandParams>\n            queryKey={queryKey.BAND}\n            name=\"name\"\n            inputLabel={intl.formatMessage({ id: \"name\" })}\n            buttonLabel={intl.formatMessage({ id: \"translateName\" })}\n            patchFn={patchBand}\n          />\n        </Grid>\n      </Grid>\n      <Box>{wikipedia.data?.extract}</Box>\n      <Box mb={3}>\n        <LinkTable\n          twitter={{\n            link: band.data?.link.twitter,\n            renderDialog(open, handleClose) {\n              return (\n                <TwitterDialog\n                  defaultValue={band.data?.link.twitter}\n                  open={open}\n                  loading={updateLinkMutation.isLoading}\n                  onClose={handleClose}\n                  onPatch={handleSubmit}\n                />\n              );\n            },\n          }}\n          itunes={{\n            link: itunesArtist.data ? itunesArtist.data[0].artistLinkUrl : \"\",\n            renderDialog(open, handleClose) {\n              return (\n                <ItunesArtistDialog\n                  defaultValue={band.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleItunesSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          wikipedia={{\n            link: band.data?.link.wikipedia,\n            renderDialog(open, handleClose) {\n              return (\n                <WikipediaDialog\n                  defaultValue={band.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleWikipediaSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          spotify={{\n            type: \"artist\",\n            link: band.data?.link.spotify,\n            renderDialog(open, handleClose) {\n              return (\n                <SpotifyArtistDialog\n                  defaultValue={band.data?.name}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSpotifySelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          youtube={{\n            type: \"channel\",\n            link: band.data?.link.youtube,\n            renderDialog(open, handleClose) {\n              return (\n                <YoutubeDialog\n                  id={band.data?.link.youtube || \"\"}\n                  open={open}\n                  onClose={handleClose}\n                  onPatch={handleYoutubeSelect}\n                  loading={updateLinkMutation.isLoading}\n                />\n              );\n            },\n          }}\n        />\n      </Box>\n      <Box mb={3}>\n        <ArtistDialog />\n        <ArtistsTable artists={band.data?.artists} loading={band.isLoading} />\n      </Box>\n      <Box mb={3}>\n        <MusicsTable\n          musics={bandMusics.data?.data || []}\n          loading={bandMusics.isLoading}\n          page={musicPage}\n          pageCount={bandMusics.data?.pagination.totalPages}\n          onPage={handleMusicPage}\n        />\n      </Box>\n      <Box mb={3}>\n        <AlbumsTable\n          albums={bandAlbums.data?.data || []}\n          loading={band.isLoading}\n          page={albumPage}\n          pageCount={bandAlbums.data?.pagination.totalPages}\n          onPage={handleAlbumPage}\n        />\n      </Box>\n    </DefaultLayout>\n  );\n};\nexport default Show;\n","import { AxiosResponse } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchItunesButton from \"../../components/Button/Search/Itunes\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport LoadingCircularProgress from \"../../components/Loading/LoadingCircularProgress\";\nimport ItunesArtistDialog from \"../../components/Dialog/Itunes/Artist\";\nimport BandTable from \"../../components/Table/Band\";\nimport ExistAlert from \"../../components/Alert/Exist\";\nimport DefaultLayout from \"../../layout/Default\";\nimport { setHeaders } from \"../../slices/currentUser/currentUser\";\nimport { IBand, IItunesArtist } from \"../../interfaces\";\nimport { IBandParams, postBand } from \"../../axios/axios\";\nimport useOpen from \"../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport routes from \"../../constants/routes.json\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useBandsQuery } from \"../../reactQuery/query\";\n\nconst New: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const [open, handleOpen, handleClose] = useOpen();\n  const [selectedItunesArtist, setSelectedItunesArtist] =\n    useState<IItunesArtist>();\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, setValue, watch, register, handleSubmit } =\n    useForm<IBand>();\n  const { name } = watch();\n  // use-debounce\n  const [debouncedName] = useDebounce(name, 1000);\n  // react-router-dom\n  const history = useHistory();\n  const match = useRouteMatch<{ id: string }>();\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IBand>) => {\n    dispatch(setHeaders(res.headers));\n    history.push(`${routes.BANDS}/${res.data.id}`);\n    queryClient.setQueryData(\n      [\"band\", Number(match.params.id), { musicPage: 1, albumPage: 1 }],\n      res.data\n    );\n    if (selectedItunesArtist)\n      queryClient.setQueryData(\n        [\"itunes\", \"artist\", selectedItunesArtist.artistId],\n        selectedItunesArtist\n      );\n  };\n  const createMutation = useMutation(\n    (newBand: IBandParams) => postBand(newBand),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const searchQuery = useBandsQuery({\n    page,\n    locale,\n    q: { name_cont: debouncedName },\n    options: { enabled: !!debouncedName, onError },\n  });\n  // handlers\n  const onSubmit = (data: IBandParams) => createMutation.mutate(data);\n  const handleSelect = (selectedItem: IItunesArtist) =>\n    setSelectedItunesArtist(selectedItem);\n\n  useEffect(() => {\n    register(\"link_attributes.itunes\");\n    if (selectedItunesArtist) {\n      const { artistName, artistId } = selectedItunesArtist;\n      setValue(\"link_attributes.itunes\", artistId);\n      setValue(\"name\", artistName);\n    }\n  }, [register, selectedItunesArtist, setValue]);\n\n  return (\n    <DefaultLayout>\n      <Paper>\n        <Box p={3}>\n          <ControlTextField\n            name=\"name\"\n            defaultValue=\"\"\n            autoComplete=\"on\"\n            label={intl.formatMessage({ id: \"name\" })}\n            variant=\"outlined\"\n            control={control}\n            errors={errors}\n            disabled={createMutation.isLoading}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <LoadingCircularProgress\n                  color=\"inherit\"\n                  size={20}\n                  loading={createMutation.isLoading}\n                />\n              ),\n            }}\n          />\n          <SearchItunesButton\n            onClick={handleOpen}\n            disabled={!name}\n            fullWidth\n            disableElevation\n          />\n          <ItunesArtistDialog\n            defaultValue={name}\n            open={open}\n            onClose={handleClose}\n            onSelect={handleSelect}\n          />\n          <ExistAlert<IBand> data={searchQuery.data?.data}>\n            <BandTable\n              bands={searchQuery.data?.data || []}\n              page={page}\n              pageCount={searchQuery.data?.pagination.totalPages}\n              onPage={handlePage}\n              loading={searchQuery.isLoading}\n            />\n          </ExistAlert>\n          <LoadingButton\n            color=\"primary\"\n            loading={createMutation.isLoading}\n            disabled={!name}\n            onClick={handleSubmit(onSubmit)}\n            fullWidth\n          >\n            <FormattedMessage id=\"createBand\" />\n          </LoadingButton>\n        </Box>\n      </Paper>\n    </DefaultLayout>\n  );\n};\n\nexport default New;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport { FormattedMessage } from \"react-intl\";\nimport Layout, { LayoutProps } from \"./Layout\";\nimport TwitterIcon from \"../Icon/Twitter\";\nimport LinkIconButton from \"../Button/Icon/Link\";\nimport { IUser } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\n\ninterface UserProps extends LayoutProps {\n  users: IUser[] | undefined;\n}\nconst User: React.FC<UserProps> = ({\n  users: data,\n  page,\n  pageCount,\n  onPage,\n  loading,\n}: UserProps) => (\n  <Layout page={page} pageCount={pageCount} onPage={onPage} loading={loading}>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <FormattedMessage id=\"name\" />\n          </TableCell>\n          <TableCell>{/* twitter */}</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data?.map((user) => (\n          <TableRow key={user.id}>\n            <TableCell>\n              <Link component={RouterLink} to={`${routes.USERS}/${user.id}`}>\n                {user.nickname}\n              </Link>\n            </TableCell>\n            <TableCell>\n              <LinkIconButton\n                href={\n                  user.link.twitter &&\n                  `https://twitter.com/${user.link.twitter}`\n                }\n              >\n                <TwitterIcon />\n              </LinkIconButton>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </Layout>\n);\nexport default User;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport UsersTable from \"../../components/Table/User\";\nimport DefaultLayout from \"../../layout/Default\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport SearchTextField from \"../../components/TextField/SearchTextField\";\nimport { useUsersQuery } from \"../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  const [page, handlePage] = usePaginate();\n  const { isLoading, data } = useUsersQuery({\n    page,\n    q: {\n      nickname_cont: debouncedInputValue,\n    },\n  });\n  // handlers\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputValue(e.target.value);\n  return (\n    <DefaultLayout>\n      <SearchTextField\n        onChange={handleChange}\n        loading={isLoading || isPending()}\n      />\n      <UsersTable\n        users={data?.data}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\n\ninterface FollowProps extends ButtonProps {\n  followed: boolean | undefined;\n  onFollow: () => void;\n  onUnfollow: () => void;\n}\nconst Follow: React.FC<FollowProps> = ({\n  followed,\n  onFollow,\n  onUnfollow,\n  ...props\n}: FollowProps) => {\n  if (followed)\n    return (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <Button onClick={onUnfollow} {...props}>\n        <FormattedMessage id=\"unfollowUs\" />\n      </Button>\n    );\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Button onClick={onFollow} {...props}>\n      <FormattedMessage id=\"followUs\" />\n    </Button>\n  );\n};\nexport default Follow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport MusicTable from \"../../../../components/Table/Music\";\nimport usePaginate from \"../../../../hooks/usePaginate\";\nimport { useUserMusicsQuery } from \"../../../../reactQuery/query\";\nimport { selectLocale } from \"../../../../slices/language\";\n\nconst Posted: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const locale = useSelector(selectLocale);\n  const musics = useUserMusicsQuery({ id, page, locale });\n  return (\n    <MusicTable\n      musics={musics.data?.data || []}\n      loading={musics.isLoading}\n      pageCount={musics.data?.pagination.totalPages}\n      page={page}\n      onPage={handlePage}\n    />\n  );\n};\nexport default Posted;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { AxiosResponse } from \"axios\";\nimport LinkTable from \"../../../../components/Table/Link\";\nimport TwitterDialog from \"../../../../components/Dialog/Twitter\";\nimport { IUser, IUserLink } from \"../../../../interfaces\";\nimport { patchUserLink } from \"../../../../axios/axios\";\nimport useQuerySnackbar from \"../../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../../constants/queryKey.json\";\nimport { getUserProfile } from \"../../../../gql\";\n\nconst Post: React.FC = () => {\n  const { onError } = useQuerySnackbar();\n  // react-router-dom\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  // react-reduxs\n  // react-query\n  const queryClient = useQueryClient();\n  const { isLoading, data } = useQuery(\n    [queryKey.USER, id, queryKey.PROFILE],\n    getUserProfile(id)\n  );\n  const user = queryClient.getQueryData<IUser>([\n    queryKey.USER,\n    id,\n    queryKey.PROFILE,\n  ]);\n  const onSuccess = (res: AxiosResponse<IUserLink>) => {\n    queryClient.setQueryData<IUser | undefined>(\n      [queryKey.USER, id, queryKey.PROFILE],\n      (prev) => prev && { ...prev, link: res.data }\n    );\n  };\n  const userLinkMutation = useMutation(\n    (twitterId: string) => patchUserLink(id, data?.link.id, twitterId),\n    { onSuccess, onError }\n  );\n  const handleSubmit = (value: string) => userLinkMutation.mutate(value);\n\n  return (\n    <>\n      <Box my={3}>\n        <LinkTable\n          loading={isLoading}\n          twitter={{\n            link: data?.link.twitter,\n            renderDialog(open, onClose) {\n              return (\n                <TwitterDialog\n                  defaultValue={user?.link.twitter}\n                  open={open}\n                  loading={userLinkMutation.isLoading}\n                  onClose={onClose}\n                  onPatch={handleSubmit}\n                />\n              );\n            },\n          }}\n        />\n      </Box>\n    </>\n  );\n};\nexport default Post;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport MusicTable from \"../../../../components/Table/Music\";\nimport BandTable from \"../../../../components/Table/Band\";\nimport ArtistTable from \"../../../../components/Table/Artist\";\nimport AlbumTable from \"../../../../components/Table/Album\";\nimport queryKey from \"../../../../constants/queryKey.json\";\nimport usePaginate from \"../../../../hooks/usePaginate\";\nimport {\n  getUserBookmarkedAlbums,\n  getUserBookmarkedArtists,\n  getUserBookmarkedBands,\n  getUserBookmarkedMusics,\n} from \"../../../../gql\";\nimport { selectLocale } from \"../../../../slices/language\";\n\nconst Bookmark: React.FC = () => {\n  const [bookmarkedMusicPage, handleBookmarkedMusicPage] = usePaginate();\n  const [bookmarkedArtistPage, handleBookmarkedArtistPage] = usePaginate();\n  const [bookmarkedBandPage, handleBookmarkedBandPage] = usePaginate();\n  const [bookmarkedAlbumPage, handleBookmarkedAlbumPage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const locale = useSelector(selectLocale);\n  const bookmarkedMusics = useQuery(\n    [\n      queryKey.USER,\n      id,\n      queryKey.BOOKMARKS,\n      queryKey.MUSICS,\n      bookmarkedMusicPage,\n      locale,\n    ],\n    getUserBookmarkedMusics({ id, page: bookmarkedMusicPage, locale })\n  );\n  const bookmarkedBands = useQuery(\n    [\n      queryKey.USER,\n      id,\n      queryKey.BOOKMARKS,\n      queryKey.BANDS,\n      bookmarkedBandPage,\n      locale,\n    ],\n    getUserBookmarkedBands({ id, page: bookmarkedBandPage, locale })\n  );\n  const bookmarkedArtists = useQuery(\n    [\n      queryKey.USER,\n      id,\n      queryKey.BOOKMARKS,\n      queryKey.ARTISTS,\n      bookmarkedArtistPage,\n      locale,\n    ],\n    getUserBookmarkedArtists({ id, page: bookmarkedArtistPage, locale })\n  );\n  const bookmarkedAlbums = useQuery(\n    [\n      queryKey.USER,\n      id,\n      queryKey.BOOKMARKS,\n      queryKey.ALBUMS,\n      bookmarkedAlbumPage,\n      locale,\n    ],\n    getUserBookmarkedAlbums({ id, page: bookmarkedAlbumPage, locale })\n  );\n\n  return (\n    <>\n      <MusicTable\n        musics={bookmarkedMusics.data?.data || []}\n        pageCount={bookmarkedMusics.data?.pagination.totalPages}\n        loading={bookmarkedMusics.isLoading}\n        page={bookmarkedMusicPage}\n        onPage={handleBookmarkedMusicPage}\n      />\n      <BandTable\n        bands={bookmarkedBands.data?.data || []}\n        pageCount={bookmarkedBands.data?.pagination.totalPages}\n        loading={bookmarkedBands.isLoading}\n        page={bookmarkedBandPage}\n        onPage={handleBookmarkedBandPage}\n      />\n      <ArtistTable\n        artists={bookmarkedArtists.data?.data}\n        pageCount={bookmarkedArtists.data?.pagination.totalPages}\n        loading={bookmarkedArtists.isLoading}\n        page={bookmarkedArtistPage}\n        onPage={handleBookmarkedArtistPage}\n      />\n      <AlbumTable\n        albums={bookmarkedAlbums.data?.data || []}\n        pageCount={bookmarkedAlbums.data?.pagination.totalPages}\n        loading={bookmarkedAlbums.isLoading}\n        page={bookmarkedAlbumPage}\n        onPage={handleBookmarkedAlbumPage}\n      />\n    </>\n  );\n};\nexport default Bookmark;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useMutation } from \"react-query\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { AxiosResponse } from \"axios\";\nimport { userSchema } from \"../../../../schema\";\nimport ControlTextField from \"../../../../components/ControlTextField/ControlTextField\";\nimport { patchUser } from \"../../../../axios/axios\";\nimport {\n  selectCurrentUser,\n  setCurrentUser,\n  setHeaders,\n} from \"../../../../slices/currentUser/currentUser\";\nimport { IUser } from \"../../../../interfaces\";\nimport LoadingButton from \"../../../../ui/LoadingButton\";\nimport useQuerySnackbar from \"../../../../hooks/useQuerySnackbar\";\n\nconst Setting: React.FC = () => {\n  const { onError } = useQuerySnackbar();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const { errors, control, handleSubmit } = useForm({\n    resolver: yupResolver(userSchema),\n  });\n  const intl = useIntl();\n  const handleSuccess = (res: AxiosResponse<IUser>) => {\n    dispatch(setCurrentUser(res.data));\n    dispatch(setHeaders(res.headers));\n  };\n  const { isLoading, mutate } = useMutation(\n    (user: IUser) => patchUser(currentUser?.id, user),\n    { onSuccess: handleSuccess, onError }\n  );\n  const onSubmit = (user: IUser) => mutate(user);\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Typography variant=\"h5\" color=\"initial\">\n        <FormattedMessage id=\"setting\" />\n      </Typography>\n      <ControlTextField\n        name=\"email\"\n        defaultValue={currentUser?.email}\n        label={intl.formatMessage({ id: \"email\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        fullWidth\n      />\n      <ControlTextField\n        name=\"nickname\"\n        defaultValue={currentUser?.nickname}\n        label={intl.formatMessage({ id: \"nickname\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        fullWidth\n      />\n      <ControlTextField\n        name=\"familyname\"\n        defaultValue={currentUser?.familyname}\n        label={intl.formatMessage({ id: \"familyname\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        fullWidth\n      />\n      <ControlTextField\n        name=\"givenname\"\n        defaultValue={currentUser?.givenname}\n        label={intl.formatMessage({ id: \"givenname\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        fullWidth\n      />\n      <ControlTextField\n        name=\"introduction\"\n        defaultValue={currentUser?.introduction}\n        label={intl.formatMessage({ id: \"introduction\" })}\n        variant=\"outlined\"\n        margin=\"normal\"\n        control={control}\n        errors={errors}\n        disabled={isLoading}\n        rows={10}\n        fullWidth\n        multiline\n      />\n      <LoadingButton\n        type=\"submit\"\n        loading={isLoading}\n        color=\"primary\"\n        fullWidth\n      >\n        UPDATE\n      </LoadingButton>\n    </form>\n  );\n};\nexport default Setting;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport React from \"react\";\nimport {\n  useLocation,\n  useRouteMatch,\n  Link as RouterLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AxiosResponse } from \"axios\";\nimport Link from \"@material-ui/core/Link\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport FollowButton from \"../../../components/Button/Follow\";\nimport MusicsTabPanel from \"./TabPanel/Musics\";\nimport ProfileTabPanel from \"./TabPanel/Profile\";\nimport BookmarkTabPanel from \"./TabPanel/Bookmark\";\nimport SettingTabPanel from \"./TabPanel/Setting\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport { IUser, IUserRelationship } from \"../../../interfaces\";\nimport useQuerySnackbar from \"../../../hooks/useQuerySnackbar\";\nimport routes from \"../../../constants/routes.json\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../../slices/currentUser/currentUser\";\nimport {\n  deleteUserRelationship,\n  postUserRelationship,\n} from \"../../../axios/axios\";\nimport { useUserQuery } from \"../../../reactQuery/query\";\n\nconst Show: React.FC = () => {\n  const { onError } = useQuerySnackbar();\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  // react-hook-form\n  const match = useRouteMatch<{ id: string }>();\n  const location = useLocation();\n  const id = Number(match.params.id);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const { isLoading, data } = useUserQuery({\n    id,\n    currentUserId: currentUser?.id,\n  });\n  const handleCreateSuccess = (res: AxiosResponse<IUserRelationship>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IUser | undefined>(\n      [\"user\", id],\n      (prev) => prev && { ...prev, followed: res.data }\n    );\n  };\n  const handleDeleteSuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IUser | undefined>(\n      [\"user\", id],\n      (prev) => prev && { ...prev, followed: undefined }\n    );\n  };\n  const createMutate = useMutation(() => postUserRelationship(id), {\n    onSuccess: handleCreateSuccess,\n    onError,\n  });\n  const deleteMutate = useMutation(\n    () => deleteUserRelationship(id, data?.followed?.id),\n    {\n      onSuccess: handleDeleteSuccess,\n      onError,\n    }\n  );\n  // helpers\n  const isCurrentUser = currentUser?.id === id;\n  // handlers\n  const handleFollow = () => createMutate.mutate();\n  const handleUnfollow = () => deleteMutate.mutate();\n  return (\n    <DefaultLayout>\n      <Grid container>\n        <Grid item xs={11}>\n          <Typography variant=\"h6\">{data?.nickname}</Typography>\n        </Grid>\n        <Grid item xs={1}>\n          {!isCurrentUser && (\n            <FollowButton\n              followed={!!data?.followed}\n              onFollow={handleFollow}\n              onUnfollow={handleUnfollow}\n              disabled={isLoading}\n            />\n          )}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Link\n            component={RouterLink}\n            to={`${routes.USERS}/${id}${routes.FOLLOWERS}`}\n          >\n            {data?.followersCount}\n            <FormattedMessage id=\"follower\" />\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link\n            component={RouterLink}\n            to={`${routes.USERS}/${id}${routes.FOLLOWING}`}\n          >\n            {data?.followingCount}\n            <FormattedMessage id=\"following\" />\n          </Link>\n        </Grid>\n      </Grid>\n      {data?.introduction}\n      <Tabs\n        value={\n          location.pathname.includes(\"issues\")\n            ? match.url + routes.ISSUES\n            : location.pathname\n        }\n      >\n        <Tab\n          label={intl.formatMessage({ id: \"profile\" })}\n          value={match.url}\n          component={RouterLink}\n          to={match.url}\n        />\n        <Tab\n          label={intl.formatMessage({ id: \"musics\" })}\n          value={match.url + routes.MUSICS}\n          component={RouterLink}\n          to={match.url + routes.MUSICS}\n        />\n        <Tab\n          label={intl.formatMessage({ id: \"bookmark\" })}\n          value={match.url + routes.BOOKMARKS}\n          component={RouterLink}\n          to={match.url + routes.BOOKMARKS}\n        />\n        <Tab\n          label={intl.formatMessage({ id: \"setting\" })}\n          value={match.url + routes.SETTING}\n          component={RouterLink}\n          to={match.url + routes.SETTING}\n          disabled={!isCurrentUser}\n        />\n      </Tabs>\n      <Switch>\n        <Route exact path={match.path} component={ProfileTabPanel} />\n        <Route\n          exact\n          path={match.path + routes.MUSICS}\n          component={MusicsTabPanel}\n        />\n        <Route\n          exact\n          path={match.path + routes.SETTING}\n          component={SettingTabPanel}\n        />\n        <Route\n          exact\n          path={match.path + routes.BOOKMARKS}\n          component={BookmarkTabPanel}\n        />\n        <Route\n          exact\n          path={match.path + routes.BOOKMARKS}\n          component={BookmarkTabPanel}\n        />\n      </Switch>\n    </DefaultLayout>\n  );\n};\nexport default Show;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormattedMessage } from \"react-intl\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport UserTable from \"../../../components/Table/User\";\nimport usePaginate from \"../../../hooks/usePaginate\";\nimport { useUserFollowerQuery } from \"../../../reactQuery/query\";\n\nconst Follower: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const followers = useUserFollowerQuery({ id, page });\n  return (\n    <DefaultLayout>\n      <Typography variant=\"h5\" color=\"initial\">\n        <FormattedMessage id=\"follower\" />\n      </Typography>\n      <UserTable\n        users={followers.data?.data}\n        loading={followers.isLoading}\n        page={page}\n        pageCount={followers.data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\nexport default Follower;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormattedMessage } from \"react-intl\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport UserTable from \"../../../components/Table/User\";\nimport usePaginate from \"../../../hooks/usePaginate\";\nimport { useUserFollowingQuery } from \"../../../reactQuery/query\";\n\nconst Following: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const params = useParams<{ id: string }>();\n  const id = Number(params.id);\n  const following = useUserFollowingQuery({ id, page });\n  return (\n    <DefaultLayout>\n      <Typography variant=\"h5\" color=\"initial\">\n        <FormattedMessage id=\"following\" />\n      </Typography>\n      <UserTable\n        users={following.data?.data}\n        loading={following.isLoading}\n        page={page}\n        pageCount={following.data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\nexport default Following;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { useSelector } from \"react-redux\";\nimport AlbumTable from \"../../components/Table/Album\";\nimport SearchTextField from \"../../components/TextField/SearchTextField\";\nimport DefaultLayout from \"../../layout/Default\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useAlbumsQuery } from \"../../reactQuery/query\";\n\nconst Index: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [page, handlePage] = usePaginate();\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  const locale = useSelector(selectLocale);\n  const { isLoading, data } = useAlbumsQuery({\n    page,\n    locale,\n    q: {\n      title_cont: debouncedInputValue,\n    },\n  });\n  // handlers\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputValue(e.target.value);\n  return (\n    <DefaultLayout>\n      <SearchTextField\n        onChange={handleChange}\n        loading={isLoading || isPending()}\n      />\n      <AlbumTable\n        albums={data?.data || []}\n        loading={isLoading}\n        page={page}\n        pageCount={data?.pagination.totalPages}\n        onPage={handlePage}\n      />\n    </DefaultLayout>\n  );\n};\n\nexport default Index;\n","import React, { MouseEvent } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport { IItunesAlbum } from \"../../../interfaces\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface IItunesAlbumCard {\n  album: IItunesAlbum;\n}\nconst ItunesAlbum: React.FC<IItunesAlbumCard> = ({\n  album: { artistName, collectionName, artworkUrl100, artistViewUrl },\n}: IItunesAlbumCard) => {\n  const classes = useStyles();\n  const handleClick = (e: MouseEvent<HTMLAnchorElement>) => e.stopPropagation();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box mx={1}>\n          <CardMedia image={artworkUrl100} className={classes.media} />\n        </Box>\n        <CardContent>\n          <Typography>{collectionName}</Typography>\n          <Typography>{artistName}</Typography>\n        </CardContent>\n        <Button\n          href={artistViewUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={handleClick}\n        >\n          itunes\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ItunesAlbum;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport ItunesAlbumCard from \"../../Card/Itunes/Album\";\nimport { IItunesAlbum } from \"../../../interfaces\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport { searchItunesAlbums } from \"../../../axios/itunes\";\n\nfunction Album({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<IItunesAlbum>): JSX.Element {\n  return (\n    <CardSearchDialogTest<IItunesAlbum>\n      defaultValue={defaultValue}\n      title=\"Album\"\n      open={open}\n      showSearchBar={showSearchBar}\n      useQueryArgs={{\n        key: [queryKey.ITUNES, queryKey.ALBUMS],\n        fn: ({ term, page }) =>\n          searchItunesAlbums(term, page).then((res) => ({\n            data: res.results,\n          })),\n      }}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.collectionId} mb={2} onClick={handleSelect}>\n          <ItunesAlbumCard album={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\nexport default Album;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ISpotifyAlbum } from \"../../../interfaces\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n    width: 100,\n  },\n});\ninterface ISpotifyAlbumCard {\n  album: ISpotifyAlbum;\n}\nconst Album: React.FC<ISpotifyAlbumCard> = ({ album }: ISpotifyAlbumCard) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <Box display=\"flex\">\n        <Box display=\"flex\" justifyItems=\"center\" alignItems=\"center\" mx={1}>\n          <CardMedia image={album.images[0].url} className={classes.media} />\n        </Box>\n        <CardContent>\n          <Typography noWrap>{album.name}</Typography>\n          <Typography color=\"textSecondary\" noWrap>\n            {}\n          </Typography>\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n\nexport default Album;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Box from \"@material-ui/core/Box\";\nimport SpotifyAlbumCard from \"../../Card/Spotify/Album\";\nimport SpotifyButton from \"../../Button/Spotify\";\nimport { remove, selectSpotifyToken, setToken } from \"../../../slices/spotify\";\nimport useQuerySnackbar from \"../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport CardSearchDialogTest, { DialogProps } from \"../CardSearchDialog\";\nimport { searchSpotify, spotifyAccount } from \"../../../axios/spotify\";\nimport { ISpotifyAlbum, ISpotifyToken } from \"../../../interfaces\";\n\nfunction Album({\n  defaultValue,\n  open,\n  showSearchBar,\n  onClose,\n  onSelect,\n}: DialogProps<ISpotifyAlbum>): JSX.Element {\n  const { onError } = useQuerySnackbar();\n  const spotifyToken = useSelector(selectSpotifyToken);\n  const dispatch = useDispatch();\n  const handleError = (err: unknown) => {\n    onError(err);\n    dispatch(remove());\n  };\n  const getSpotifyCode = useCallback(\n    async (code: string) => {\n      const params = new URLSearchParams();\n      params.append(\"code\", code);\n      params.append(\"grant_type\", \"authorization_code\");\n      params.append(\"redirect_uri\", window.location.origin);\n      const res = await spotifyAccount.post<ISpotifyToken>(\"/token\", params);\n      dispatch(setToken(res.data));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    window.getSpotifyCode = getSpotifyCode;\n  }, [getSpotifyCode]);\n\n  if (!spotifyToken)\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>Spotify need SignIn</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <SpotifyButton />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"default\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  return (\n    <CardSearchDialogTest<ISpotifyAlbum>\n      defaultValue={defaultValue}\n      title=\"Spotify\"\n      open={open}\n      useQueryArgs={{\n        key: [queryKey.SPOTIFY, queryKey.ALBUMS],\n        fn: ({ term, page }) =>\n          searchSpotify<ISpotifyAlbum>(\n            \"album\",\n            term,\n            page,\n            spotifyToken?.access_token\n          ).then((res) => ({\n            data: res.albums.items,\n            page: res.albums.offset,\n            pageCount: Math.floor(res.albums.total / res.albums.limit),\n          })),\n        options: { onError: handleError },\n      }}\n      showSearchBar={showSearchBar}\n      onSelect={onSelect}\n      onClose={onClose}\n    >\n      {(card, handleSelect) => (\n        <Box key={card.id} mb={2} onClick={handleSelect}>\n          <SpotifyAlbumCard album={card} />\n        </Box>\n      )}\n    </CardSearchDialogTest>\n  );\n}\n\nexport default Album;\n","import axios, { AxiosResponse } from \"axios\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link as RouterLink, useRouteMatch } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport useDebounce from \"use-debounce/lib/useDebounce\";\nimport LoadingButton from \"../../../../ui/LoadingButton\";\nimport AutocompleteTextField from \"../../../../components/TextField/AutocompleteTextField\";\nimport routes from \"../../../../constants/routes.json\";\nimport {\n  selectHeaders,\n  setHeaders,\n} from \"../../../../slices/currentUser/currentUser\";\nimport { IAlbum, IArtist, IArtistAlbum } from \"../../../../interfaces\";\nimport useOpen from \"../../../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../../constants/queryKey.json\";\nimport { selectLocale } from \"../../../../slices/language\";\nimport { useArtistsQuery } from \"../../../../reactQuery/query\";\n\nconst Artist: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [open, handleOpen, handleClose] = useOpen();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { register, handleSubmit, setValue } = useForm();\n  // use-debounce\n  const [debouncedInputValue, { isPending }] = useDebounce(inputValue, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const headers = useSelector(selectHeaders);\n  const locale = useSelector(selectLocale);\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-router-dom\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  const route = match.url + routes.ARTISTS;\n  // react-query\n  const queryClient = useQueryClient();\n  const album = queryClient.getQueryData<IAlbum>([queryKey.ALBUM, id]);\n  const handleCreateSuccess = (res: AxiosResponse<IArtistAlbum>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IAlbum | undefined>(\n      [queryKey.ALBUM, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artists: [...(prev.artists || []), res.data.artist],\n        }\n    );\n  };\n  const handleDestorySuccess = (res: AxiosResponse, artist: IArtist) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IAlbum | undefined>(\n      [queryKey.ALBUM, id],\n      (prev) =>\n        prev && {\n          ...prev,\n          artists:\n            prev.artists &&\n            prev.artists.filter((prevAlbum) => prevAlbum !== artist),\n        }\n    );\n  };\n  const createMutation = useMutation(\n    (newArtistBand: IArtistAlbum) =>\n      axios.post<IArtistAlbum>(route, newArtistBand, headers),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const destroyMutation = useMutation(\n    (artist: IArtist) => axios.delete(`${route}/${artist.id}`, headers),\n    { onSuccess: handleDestorySuccess, onError }\n  );\n  const artists = useArtistsQuery({\n    page: 1,\n    locale,\n    q: { name_cont: debouncedInputValue },\n    options: { enabled: !!debouncedInputValue },\n  });\n  // handlers\n  const handleRemoveOption = () => setValue(\"artist_id\", \"\");\n  const handleSelectOption = (option: IArtist) =>\n    setValue(\"artist_id\", option.id);\n  const onInputChange = (\n    _e: ChangeEvent<Record<string, unknown>>,\n    value: string\n  ) => setInputValue(value);\n  const onSubmit = (data: IArtistAlbum) => createMutation.mutate(data);\n  const getOptionSelected = (option: IArtist, value: IArtist) =>\n    option.name === value.name;\n  const getOptionLabel = (option: IArtist) => option.name;\n  useEffect(() => {\n    register(\"artist_id\");\n  }, [register]);\n  return (\n    <>\n      <Button onClick={handleOpen}>Edit</Button>\n      <Dialog onClose={handleClose} open={open} fullWidth>\n        <DialogTitle>Edit Albums</DialogTitle>\n        <Container>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Artist</TableCell>\n                  <TableCell align=\"right\">Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {album?.artists?.map((artist) => {\n                  const handleClick = () => destroyMutation.mutate(artist);\n                  return (\n                    <TableRow key={artist.id}>\n                      <TableCell>\n                        <Link component={RouterLink} to=\"/\">\n                          {artist.name}\n                        </Link>\n                      </TableCell>\n\n                      <TableCell align=\"right\">\n                        <IconButton onClick={handleClick}>\n                          <CloseIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Box mb={3}>\n            <AutocompleteTextField<IArtist>\n              onSelectOption={handleSelectOption}\n              onRemoveOption={handleRemoveOption}\n              textFieldProps={{\n                label: \"Artist\",\n                variant: \"outlined\",\n                margin: \"normal\",\n              }}\n              autocompleteProps={{\n                value: artists.data?.data,\n                options: artists.data?.data || [],\n                loading:\n                  createMutation.isLoading ||\n                  destroyMutation.isLoading ||\n                  isPending(),\n                multiple: true,\n                inputValue,\n                getOptionSelected,\n                getOptionLabel,\n                onInputChange,\n              }}\n            />\n          </Box>\n          <Box mb={3}>\n            <LoadingButton\n              color=\"primary\"\n              loading={createMutation.isLoading}\n              onClick={handleSubmit(onSubmit)}\n              fullWidth\n            >\n              Add Artist\n            </LoadingButton>\n          </Box>\n        </Container>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Artist;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AlbumIcon from \"@material-ui/icons/Album\";\nimport Image from \"material-ui-image\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { AxiosResponse } from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport {\n  IAlbum,\n  IAlbumBookmark,\n  IAlbumLink,\n  IItunesAlbum,\n  ISpotifyAlbum,\n} from \"../../../interfaces\";\nimport MusicsTable from \"../../../components/Table/Music\";\nimport ArtistTable from \"../../../components/Table/Artist\";\nimport LinkTable from \"../../../components/Table/Link\";\nimport ItunesAlbumDialog from \"../../../components/Dialog/Itunes/Album\";\nimport SpotifyAlbumDialog from \"../../../components/Dialog/Spotify/Album\";\nimport TranslateDialog from \"../../../components/Dialog/Translate\";\nimport ArtistDialog from \"./Dialog/Artist\";\nimport BookmarkButton from \"../../../components/Button/Icon/Bookmark\";\nimport DefaultLayout from \"../../../layout/Default\";\nimport {\n  deleteAlbumBookmark,\n  IAlbumParams,\n  patchAlbum,\n  patchAlbumLink,\n  postAlbumBookmark,\n} from \"../../../axios/axios\";\nimport useQuerySnackbar from \"../../../hooks/useQuerySnackbar\";\nimport queryKey from \"../../../constants/queryKey.json\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../../slices/currentUser/currentUser\";\nimport usePaginate from \"../../../hooks/usePaginate\";\nimport { selectLocale } from \"../../../slices/language\";\nimport { useAlbumMusicsQuery, useAlbumQuery } from \"../../../reactQuery/query\";\nimport { useLookupItunesAlbum } from \"../../../reactQuery/itunes\";\n\nconst Show: React.FC = () => {\n  const [musicPage, handleMusicPage] = usePaginate();\n  const { onError } = useQuerySnackbar();\n  // react-router\n  const match = useRouteMatch<{ id: string }>();\n  const id = Number(match.params.id);\n  // react-redux\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const locale = useSelector(selectLocale);\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleUpdateSuccess = (res: AxiosResponse<IAlbumLink>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IAlbum | undefined>(\n      [queryKey.ALBUM, id, locale],\n      (prev) => prev && { ...prev, link: res.data }\n    );\n  };\n  const handleCreateSuccess = (res: AxiosResponse<IAlbumBookmark>) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IAlbum | undefined>(\n      [queryKey.ALBUM, id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: res.data,\n          bookmarksCount: prev.bookmarksCount + 1,\n        }\n    );\n  };\n  const handleDestroySuccess = (res: AxiosResponse) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<IAlbum | undefined>(\n      [queryKey.ALBUM, id, locale],\n      (prev) =>\n        prev && {\n          ...prev,\n          bookmark: undefined,\n          bookmarksCount: prev.bookmarksCount - 1,\n        }\n    );\n  };\n  const album = useAlbumQuery({ id, locale, currentUserId: currentUser?.id });\n  const albumMusics = useAlbumMusicsQuery({ id, page: musicPage, locale });\n  const itunesAlbums = useLookupItunesAlbum({ id: album.data?.link.itunes });\n  const patchLinkMutation = useMutation(\n    (link: Partial<Omit<IAlbumLink, \"id\">>) =>\n      patchAlbumLink(id, album.data?.link.id, link),\n    {\n      onSuccess: handleUpdateSuccess,\n      onError,\n    }\n  );\n  const createMutation = useMutation(() => postAlbumBookmark(id), {\n    onSuccess: handleCreateSuccess,\n    onError,\n  });\n  const destroyMutation = useMutation(\n    () => deleteAlbumBookmark(id, album.data?.bookmark?.id),\n    {\n      onSuccess: handleDestroySuccess,\n      onError,\n    }\n  );\n  // handlers\n  const handleCreateMutation = () => createMutation.mutate();\n  const handleDestroyMutation = () => destroyMutation.mutate();\n  const handleSelect = (selectedAlbum: IItunesAlbum) =>\n    patchLinkMutation.mutate({ itunes: selectedAlbum.collectionId });\n  const handleSpotifySelect = (selectedAlbum: ISpotifyAlbum) =>\n    patchLinkMutation.mutate({ spotify: selectedAlbum.id });\n  return (\n    <DefaultLayout>\n      {album.data?.localed && (\n        <Box mb={3}>\n          <Alert severity=\"warning\">\n            <AlertTitle>\n              <FormattedMessage id=\"untranslation\" />\n            </AlertTitle>\n            <strong>\n              <FormattedMessage id=\"pleaseTranslate\" />\n            </strong>\n          </Alert>\n        </Box>\n      )}\n      <Grid container>\n        <Grid item xs={11}>\n          <Typography variant=\"h5\">\n            <AlbumIcon />\n            {album.data?.title}\n          </Typography>\n        </Grid>\n        <Grid item xs={1}>\n          <BookmarkButton\n            count={album.data?.bookmarksCount}\n            bookmarked={!!album.data?.bookmark}\n            onCreate={handleCreateMutation}\n            onDestroy={handleDestroyMutation}\n          />\n        </Grid>\n        <Grid item xs={1}>\n          <TranslateDialog<IAlbum, IAlbumParams>\n            queryKey={queryKey.ARTIST}\n            name=\"title\"\n            inputLabel={intl.formatMessage({ id: \"title\" })}\n            buttonLabel={intl.formatMessage({ id: \"translateTitle\" })}\n            patchFn={patchAlbum}\n          />\n        </Grid>\n      </Grid>\n      <Box height=\"100px\" width=\"100px\" m=\"auto\">\n        {itunesAlbums.data && itunesAlbums.data[0] && (\n          <Image src={itunesAlbums.data[0].artworkUrl100} />\n        )}\n      </Box>\n      <Box mb={3}>\n        <LinkTable\n          itunes={{\n            link:\n              itunesAlbums.data && itunesAlbums.data[0]\n                ? itunesAlbums.data[0].collectionViewUrl\n                : \"\",\n            renderDialog(open, handleClose) {\n              return (\n                <ItunesAlbumDialog\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n          spotify={{\n            type: \"album\",\n            link: album.data?.link.spotify,\n            renderDialog(open, handleClose) {\n              return (\n                <SpotifyAlbumDialog\n                  defaultValue={album.data?.title}\n                  open={open}\n                  onClose={handleClose}\n                  onSelect={handleSpotifySelect}\n                  showSearchBar\n                />\n              );\n            },\n          }}\n        />\n      </Box>\n      <Box mb={3}>\n        <MusicsTable\n          musics={albumMusics.data?.data || []}\n          loading={albumMusics.isLoading}\n          page={musicPage}\n          pageCount={albumMusics.data?.pagination.totalPages}\n          onPage={handleMusicPage}\n        />\n      </Box>\n      <ArtistDialog />\n      <ArtistTable artists={album.data?.artists} loading={album.isLoading} />\n    </DefaultLayout>\n  );\n};\n\nexport default Show;\n","import { AxiosResponse } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDebounce } from \"use-debounce\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Image from \"material-ui-image\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport AlbumTable from \"../../components/Table/Album\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport ItunesAlbumDialog from \"../../components/Dialog/Itunes/Album\";\nimport SearchItunesButton from \"../../components/Button/Search/Itunes\";\nimport LoadingCircularProgress from \"../../components/Loading/LoadingCircularProgress\";\nimport ExistAlert from \"../../components/Alert/Exist\";\nimport DefaultLayout from \"../../layout/Default\";\nimport { IAlbum, IItunesAlbum } from \"../../interfaces\";\nimport { setHeaders } from \"../../slices/currentUser/currentUser\";\nimport useOpen from \"../../hooks/useOpen\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport routes from \"../../constants/routes.json\";\nimport { postAlbum, IAlbumParams } from \"../../axios/axios\";\nimport usePaginate from \"../../hooks/usePaginate\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useAlbumsQuery } from \"../../reactQuery/query\";\n\nconst New: React.FC = () => {\n  const [page, handlePage] = usePaginate();\n  const [open, handleOpen, handleClose] = useOpen();\n  const [selectedItunesAlbum, setSelectedItunesAlbum] =\n    useState<IItunesAlbum>();\n  // react-hook-form\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { errors, control, setValue, register, watch, handleSubmit } =\n    useForm<IAlbum>();\n  const { title } = watch();\n  const [debouncedTitle] = useDebounce(title, 1000);\n  // react-redux\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  // react-router-dom\n  const history = useHistory();\n  // notistack\n  const { onError } = useQuerySnackbar();\n  // react-query\n  const queryClient = useQueryClient();\n  // react-intl\n  const intl = useIntl();\n  const handleCreateSuccess = (res: AxiosResponse<IAlbum>) => {\n    dispatch(setHeaders(res.headers));\n    history.push(`${routes.ALBUMS}/${res.data.id}`);\n    queryClient.setQueryData([\"album\", res.data.id], res.data);\n    if (selectedItunesAlbum)\n      queryClient.setQueryData(\n        [\"itunes\", \"music\", selectedItunesAlbum.collectionId],\n        selectedItunesAlbum\n      );\n  };\n  const createMutation = useMutation(\n    (newAlbum: IAlbumParams) => postAlbum(newAlbum),\n    { onSuccess: handleCreateSuccess, onError }\n  );\n  const searchQuery = useAlbumsQuery({\n    page,\n    locale,\n    q: { title_cont: debouncedTitle },\n    options: { enabled: !!debouncedTitle, onError },\n  });\n  // handlers\n  const onSubmit = (data: IAlbumParams) => createMutation.mutate(data);\n  const handleSelect = (selectedItem: IItunesAlbum) => {\n    setSelectedItunesAlbum(selectedItem);\n    const { collectionName, collectionId } = selectedItem;\n    setValue(\"title\", collectionName);\n    setValue(\"link_attributes.itunes\", collectionId);\n  };\n  useEffect(() => {\n    register(\"link_attributes.itunes\");\n  }, [register]);\n\n  return (\n    <DefaultLayout>\n      <Paper>\n        <Box p={2}>\n          <Box height=\"100px\" width=\"100px\" m=\"auto\">\n            <Image src={selectedItunesAlbum?.artworkUrl100 || \"undefiend\"} />\n          </Box>\n          <ControlTextField\n            name=\"title\"\n            defaultValue=\"\"\n            autoComplete=\"on\"\n            label={intl.formatMessage({ id: \"title\" })}\n            variant=\"outlined\"\n            control={control}\n            errors={errors}\n            disabled={createMutation.isLoading}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <LoadingCircularProgress\n                  color=\"inherit\"\n                  size={20}\n                  loading={searchQuery.isLoading}\n                />\n              ),\n            }}\n          />\n          <SearchItunesButton\n            onClick={handleOpen}\n            disabled={!title}\n            fullWidth\n            disableElevation\n          />\n          <ItunesAlbumDialog\n            defaultValue={title}\n            open={open}\n            onClose={handleClose}\n            onSelect={handleSelect}\n          />\n          <ExistAlert<IAlbum> data={searchQuery.data?.data}>\n            <AlbumTable\n              albums={searchQuery.data?.data || []}\n              page={page}\n              pageCount={searchQuery.data?.pagination.totalPages}\n              onPage={handlePage}\n              loading={searchQuery.isLoading}\n            />\n          </ExistAlert>\n          <LoadingButton\n            color=\"primary\"\n            loading={createMutation.isLoading}\n            disabled={!title}\n            onClick={handleSubmit(onSubmit)}\n            fullWidth\n          >\n            <FormattedMessage id=\"createAlbum\" />\n          </LoadingButton>\n        </Box>\n      </Paper>\n    </DefaultLayout>\n  );\n};\n\nexport default New;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation } from \"react-query\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Link from \"@material-ui/core/Link\";\nimport ControlTextField from \"../../components/ControlTextField/ControlTextField\";\nimport DefaultLayout from \"../../layout/Default\";\nimport { postContact } from \"../../axios/axios\";\nimport { IContact } from \"../../interfaces\";\nimport LoadingButton from \"../../ui/LoadingButton\";\nimport { contactSchema } from \"../../schema\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\n\nconst Contact: React.FC = () => {\n  const [successed, setSuccessed] = useState(false);\n  const { onError } = useQuerySnackbar();\n  const { errors, control, handleSubmit } = useForm({\n    resolver: yupResolver(contactSchema),\n  });\n  const handleSuccess = () => {\n    setSuccessed(true);\n  };\n  const contactMutation = useMutation(\n    (newContact: IContact) => postContact(newContact),\n    {\n      onSuccess: handleSuccess,\n      onError,\n    }\n  );\n  const onSubmit = (newContact: IContact) => contactMutation.mutate(newContact);\n  if (successed) {\n    return (\n      <DefaultLayout>\n        <Typography>Successed</Typography>\n        <Link component={RouterLink} to=\"/\">\n          return Home\n        </Link>\n      </DefaultLayout>\n    );\n  }\n  return (\n    <DefaultLayout>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Typography>Contact</Typography>\n        <ControlTextField\n          name=\"email\"\n          label=\"Email\"\n          defaultValue=\"\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          fullWidth\n        />\n        <ControlTextField\n          name=\"description\"\n          label=\"Description\"\n          defaultValue=\"\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          control={control}\n          errors={errors}\n          rows={20}\n          multiline\n          fullWidth\n        />\n        <LoadingButton\n          type=\"submit\"\n          color=\"primary\"\n          loading={contactMutation.isLoading}\n          fullWidth\n        >\n          Submit\n        </LoadingButton>\n      </form>\n    </DefaultLayout>\n  );\n};\nexport default Contact;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport routes from \"./constants/routes.json\";\nimport Root from \"./pages/Root\";\n\nimport SignIn from \"./pages/Auth/SignIn\";\nimport SignUp from \"./pages/Auth/SignUp\";\n\nimport Artists from \"./pages/Artist/Index\";\nimport Artist from \"./pages/Artist/Show\";\nimport NewArtist from \"./pages/Artist/New\";\n\nimport Musics from \"./pages/Music/Index\";\nimport Music from \"./pages/Music/Show\";\nimport NewMusic from \"./pages/Music/New\";\nimport MusicScore from \"./pages/Music/Show/Score\";\n\nimport Bands from \"./pages/Band/Index\";\nimport Band from \"./pages/Band/Show\";\nimport NewBand from \"./pages/Band/New\";\n\nimport Users from \"./pages/User/Index\";\nimport User from \"./pages/User/Show\";\nimport UserFollower from \"./pages/User/Show/Follower\";\nimport UserFollowing from \"./pages/User/Show/Following\";\n\nimport Albums from \"./pages/Album/Index\";\nimport Album from \"./pages/Album/Show\";\nimport NewAlbum from \"./pages/Album/New\";\nimport Contact from \"./pages/Contact/New\";\n\nconst Routes: React.FC = () => (\n  <Switch>\n    {/* MUSIC */}\n    <Route exact path={routes.MUSICS} component={Musics} />\n    <Route exact path={`${routes.MUSICS}${routes.NEW}`} component={NewMusic} />\n    <Route\n      exact\n      path={`${routes.USERS}/:userId${routes.MUSICS}/:id${routes.TAB}`}\n      component={MusicScore}\n    />\n    <Route\n      strict\n      path={`${routes.USERS}/:userId${routes.MUSICS}/:id`}\n      component={Music}\n    />\n\n    {/* USER */}\n    <Route exact path={routes.USERS} component={Users} />\n    <Route\n      exact\n      path={`${routes.USERS}/:id${routes.FOLLOWERS}`}\n      component={UserFollower}\n    />\n    <Route\n      exact\n      path={`${routes.USERS}/:id${routes.FOLLOWING}`}\n      component={UserFollowing}\n    />\n    <Route strict path={`${routes.USERS}/:id`} component={User} />\n\n    {/* BAND */}\n    <Route exact path={routes.BANDS} component={Bands} />\n    <Route exact path={`${routes.BANDS}${routes.NEW}`} component={NewBand} />\n    <Route exact path={`${routes.BANDS}/:id`} component={Band} />\n\n    {/* ARTIST */}\n    <Route exact path={routes.ARTISTS} component={Artists} />\n    <Route\n      exact\n      path={`${routes.ARTISTS}${routes.NEW}`}\n      component={NewArtist}\n    />\n    <Route exact path={`${routes.ARTISTS}/:id`} component={Artist} />\n\n    {/* ALBUM */}\n    <Route exact path={routes.ALBUMS} component={Albums} />\n    <Route exact path={`${routes.ALBUMS}${routes.NEW}`} component={NewAlbum} />\n    <Route exact path={`${routes.ALBUMS}/:id`} component={Album} />\n\n    {/* AUTH */}\n    <Route exact path={routes.SIGNIN} component={SignIn} />\n    <Route exact path={routes.SIGNUP} component={SignUp} />\n\n    {/* CONTACTS */}\n    <Route exact path={routes.CONTACTS} component={Contact} />\n\n    {/* ROOT */}\n    <Route exact path={routes.ROOT} component={Root} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  ICountryCode,\n  ILocale,\n  selectCountryCode,\n  selectLocale,\n  setCountryCode,\n  setLocale,\n} from \"../../../slices/language\";\n\ninterface SettingProps {\n  open: boolean;\n  handleClose: () => void;\n}\nconst Setting: React.FC<SettingProps> = ({\n  open,\n  handleClose,\n}: SettingProps) => {\n  const dispatch = useDispatch();\n  const locale = useSelector(selectLocale);\n  const countryCode = useSelector(selectCountryCode);\n  const handleLocaleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    dispatch(setLocale(event.target.value as ILocale));\n  };\n  const handleCountryCodeChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    dispatch(setCountryCode(event.target.value as ICountryCode));\n  };\n  return (\n    <Dialog onClose={handleClose} open={open} fullWidth>\n      <DialogTitle>\n        <FormattedMessage id=\"setting\" />\n      </DialogTitle>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={locale}\n        onChange={handleLocaleChange}\n      >\n        <MenuItem value=\"ja\">Japanese</MenuItem>\n        <MenuItem value=\"en\">English</MenuItem>\n      </Select>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={countryCode}\n        onChange={handleCountryCodeChange}\n      >\n        <MenuItem value=\"JP\">JP</MenuItem>\n        <MenuItem value=\"US\">US</MenuItem>\n      </Select>\n    </Dialog>\n  );\n};\nexport default Setting;\n","import React from \"react\";\nimport { formatDistanceToNow, Locale } from \"date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { AxiosResponse } from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport { patchUserNotification } from \"../../axios/axios\";\nimport {\n  selectCurrentUser,\n  setHeaders,\n} from \"../../slices/currentUser/currentUser\";\nimport { selectLocale } from \"../../slices/language\";\nimport useQuerySnackbar from \"../../hooks/useQuerySnackbar\";\nimport { IIndexType, INotification } from \"../../interfaces\";\nimport routes from \"../../constants/routes.json\";\nimport queryKey from \"../../constants/queryKey.json\";\n\nconst locales: { [key: string]: Locale } = { ja };\ninterface NotificationProps {\n  notifications: INotification[] | undefined;\n  loading: boolean;\n}\nconst Notification: React.FC<NotificationProps> = ({\n  notifications,\n  loading,\n}: NotificationProps) => {\n  const { onError } = useQuerySnackbar();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const locale = useSelector(selectLocale);\n  const queryClient = useQueryClient();\n  const intl = useIntl();\n  const onSuccess = (res: AxiosResponse<INotification>, id: number) => {\n    dispatch(setHeaders(res.headers));\n    queryClient.setQueryData<\n      (IIndexType<INotification> & { notificationExist: boolean }) | undefined\n    >([queryKey.NOTIFICATIONS, 1], (prev) => {\n      if (!prev) return prev;\n      prev.data[\n        prev.data.findIndex((prevNotification) => prevNotification.id === id)\n      ].readAt = new Date().toLocaleDateString();\n      prev.notificationExist = prev.data.some(\n        (prevNotification) => !prevNotification.readAt\n      );\n      return prev;\n    });\n  };\n  const { mutate } = useMutation(\n    (id: number) => patchUserNotification(id, currentUser?.id),\n    { onError, onSuccess }\n  );\n  return (\n    <Box p={1}>\n      {loading && <LinearProgress />}\n      {!notifications?.length && (\n        <Typography variant=\"h6\">\n          <FormattedMessage id=\"noNotification\" />\n        </Typography>\n      )}\n      {notifications?.map((notification) => {\n        const handleClick = () => mutate(notification.id);\n        if (notification.type === \"UserRelationshipNotification\")\n          return (\n            <ListItem\n              key={notification.id}\n              component={RouterLink}\n              to={`${routes.USERS}/${notification.params.userRelationship.follower.id}`}\n              selected={!!notification.readAt}\n              onClick={handleClick}\n              button\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <PersonAddIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={intl.formatMessage(\n                  { id: \"beFollowed\" },\n                  {\n                    username:\n                      notification.params.userRelationship.follower.nickname,\n                  }\n                )}\n                secondary={formatDistanceToNow(\n                  new Date(notification.createdAt),\n                  { locale: locales[locale] }\n                )}\n              />\n            </ListItem>\n          );\n        if (notification.type === \"MusicBookmarkNotification\")\n          return (\n            <ListItem\n              key={notification.id}\n              component={RouterLink}\n              to={`${routes.USERS}/${notification.params.musicBookmark.user.id}`}\n              selected={!!notification.readAt}\n              onClick={handleClick}\n              button\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <StarIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={intl.formatMessage(\n                  { id: \"beBookmarked\" },\n                  {\n                    username: notification.params.musicBookmark.user.nickname,\n                    music: notification.params.musicBookmark.music.title,\n                  }\n                )}\n                secondary={formatDistanceToNow(\n                  new Date(notification.createdAt),\n                  { locale: locales[locale] }\n                )}\n              />\n            </ListItem>\n          );\n        return <></>;\n      })}\n    </Box>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { useMutation } from \"react-query\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useSnackbar } from \"notistack\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Badge from \"@material-ui/core/Badge\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SettingDialog from \"./Dialog/Setting\";\nimport Notification from \"./Notification\";\nimport routes from \"../../constants/routes.json\";\nimport {\n  remove,\n  selectCurrentUser,\n  selectHeaders,\n} from \"../../slices/currentUser/currentUser\";\nimport useOpen from \"../../hooks/useOpen\";\nimport { selectLocale } from \"../../slices/language\";\nimport { useUserNotificationsQuery } from \"../../reactQuery/query\";\n\nconst Header: React.FC = () => {\n  const [open, handleOpen, handleClose] = useOpen();\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const headers = useSelector(selectHeaders);\n  const locale = useSelector(selectLocale);\n  const history = useHistory();\n  const intl = useIntl();\n  const onMutate = () => {\n    dispatch(remove());\n    history.push({\n      pathname: routes.SIGNIN,\n    });\n  };\n  const onSuccess = () => {\n    enqueueSnackbar(intl.formatMessage({ id: \"signoutSuccessful\" }), {\n      variant: \"success\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      },\n    });\n  };\n  const onError = (err: unknown) => {\n    enqueueSnackbar(String(err), {\n      variant: \"error\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      },\n    });\n  };\n  const notifications = useUserNotificationsQuery({\n    id: currentUser?.id,\n    page: 1,\n    locale,\n    options: {\n      enabled: !!currentUser,\n    },\n  });\n  const signOut = useMutation(() => axios.delete(\"/auth/sign_out\", headers), {\n    onMutate,\n    onSuccess,\n    onError,\n  });\n  const handleSignOut = () => signOut.mutate();\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            <Link\n              underline=\"none\"\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"/\"\n            >\n              Stave\n            </Link>\n          </Typography>\n          <Box ml=\"auto\">\n            {!currentUser?.id ? (\n              <>\n                <Button\n                  color=\"inherit\"\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to={routes.SIGNIN}\n                >\n                  <FormattedMessage id=\"signin\" />\n                </Button>\n                <Button\n                  color=\"inherit\"\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to={routes.SIGNUP}\n                >\n                  <FormattedMessage id=\"signup\" />\n                </Button>\n              </>\n            ) : (\n              <>\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n                  {(popupState) => (\n                    <>\n                      <IconButton\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...bindTrigger(popupState)}\n                      >\n                        <Badge\n                          color=\"secondary\"\n                          variant=\"dot\"\n                          invisible={!notifications.data?.notificationExist}\n                        >\n                          <NotificationsIcon />\n                        </Badge>\n                      </IconButton>\n                      <Popover\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...bindPopover(popupState)}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"center\",\n                        }}\n                        transformOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"center\",\n                        }}\n                      >\n                        <Notification\n                          notifications={notifications.data?.data}\n                          loading={notifications.isLoading}\n                        />\n                      </Popover>\n                    </>\n                  )}\n                </PopupState>\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n                  {(popupState) => (\n                    <>\n                      <IconButton\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...bindTrigger(popupState)}\n                      >\n                        <AccountCircleIcon />\n                      </IconButton>\n                      <Popover\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...bindPopover(popupState)}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"right\",\n                        }}\n                        transformOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"right\",\n                        }}\n                      >\n                        <MenuItem\n                          component={RouterLink}\n                          to={`${routes.USERS}/${currentUser.id}`}\n                        >\n                          <FormattedMessage id=\"account\" />\n                        </MenuItem>\n                        <MenuItem\n                          disabled={signOut.isLoading}\n                          onClick={handleSignOut}\n                        >\n                          <FormattedMessage id=\"signout\" />\n                        </MenuItem>\n                      </Popover>\n                    </>\n                  )}\n                </PopupState>\n              </>\n            )}\n            <IconButton onClick={handleOpen}>\n              <SettingsIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <SettingDialog open={open} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"@material-ui/core\";\nimport DefaultLayout from \"../layout/Default\";\nimport routes from \"../constants/routes.json\";\n\nconst Footer: React.FC = () => {\n  return (\n    <DefaultLayout>\n      <Link component={RouterLink} to={routes.CONTACTS}>\n        <FormattedMessage id=\"contact\" />\n      </Link>\n    </DefaultLayout>\n  );\n};\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TabPanel from \"@material-ui/lab/TabPanel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TabList from \"@material-ui/lab/TabList\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SignInForm from \"../Form/SignIn\";\nimport SignUpForm from \"../Form/SignUp\";\nimport { close, selectOpened } from \"./authModal\";\n\nconst Auth: React.FC = () => {\n  const dispatch = useDispatch();\n  const opened = useSelector(selectOpened);\n  const [value, setValue] = useState<\"in\" | \"up\">(\"up\");\n  const handleChange = (\n    _event: React.ChangeEvent<Record<string, unknown>>,\n    newValue: \"in\" | \"up\"\n  ) => setValue(newValue);\n  const handleClose = () => dispatch(close());\n  return (\n    <Dialog fullWidth open={opened} onClose={handleClose}>\n      <TabContext value={value}>\n        <Paper square>\n          <TabList\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n            variant=\"fullWidth\"\n          >\n            <Tab label=\"SignIn\" value=\"in\" />\n            <Tab label=\"SignUp\" value=\"up\" />\n          </TabList>\n          <TabPanel value=\"in\">\n            <SignInForm onSuccess={handleClose} />\n          </TabPanel>\n          <TabPanel value=\"up\">\n            <SignUpForm onSuccess={handleClose} />\n          </TabPanel>\n        </Paper>\n      </TabContext>\n    </Dialog>\n  );\n};\nexport default Auth;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport ThemeProvider from \"./providers/Theme\";\nimport ReduxProvider from \"./providers/Redux\";\nimport ReactQueryProvider from \"./providers/ReactQuery\";\nimport NotistackProvider from \"./providers/Notistack\";\nimport IntlProvider from \"./providers/Intl\";\nimport Routes from \"./Routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AuthDialog from \"./ui/Dialog/Auth\";\n\nconst App: React.FC = () => (\n  <ReduxProvider>\n    <NotistackProvider>\n      <ThemeProvider>\n        <ReactQueryProvider>\n          <IntlProvider>\n            <ReactQueryDevtools initialIsOpen />\n            <Router>\n              <Header />\n              <Routes />\n              <Footer />\n              <AuthDialog />\n            </Router>\n          </IntlProvider>\n        </ReactQueryProvider>\n      </ThemeProvider>\n    </NotistackProvider>\n  </ReduxProvider>\n);\n\nexport default App;\n","/* eslint-disable @typescript-eslint/no-floating-promises */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframe\":\"Info_iframe__3V9Dg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lyric\":\"Lyric_lyric__2iWqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"atSidebar\":\"Score_atSidebar__zvymR\"};"],"sourceRoot":""}